/**
 * generated by Xtext 2.12.0
 */
package tr.edu.metu.ceng.megamodel.sedml.sedml.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import tr.edu.metu.ceng.megamodel.sedml.sedml.Coherence;
import tr.edu.metu.ceng.megamodel.sedml.sedml.CoherenceLink;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Condition;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Dispersed;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Event;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Evidence;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Expression;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Function;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Levels;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Links;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Logical;
import tr.edu.metu.ceng.megamodel.sedml.sedml.MechHypothesis;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Query1;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Query2;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Query3;
import tr.edu.metu.ceng.megamodel.sedml.sedml.RelationalQuery;
import tr.edu.metu.ceng.megamodel.sedml.sedml.SEDBase;
import tr.edu.metu.ceng.megamodel.sedml.sedml.SedmlFactory;
import tr.edu.metu.ceng.megamodel.sedml.sedml.SedmlPackage;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Simultaneous;
import tr.edu.metu.ceng.megamodel.sedml.sedml.Temporal;
import tr.edu.metu.ceng.megamodel.sedml.sedml.TemporalPattern;
import tr.edu.metu.ceng.megamodel.sedml.sedml.abstractTask;
import tr.edu.metu.ceng.megamodel.sedml.sedml.addXML;
import tr.edu.metu.ceng.megamodel.sedml.sedml.algorithm;
import tr.edu.metu.ceng.megamodel.sedml.sedml.algorithmParameter;
import tr.edu.metu.ceng.megamodel.sedml.sedml.change;
import tr.edu.metu.ceng.megamodel.sedml.sedml.changeAttribute;
import tr.edu.metu.ceng.megamodel.sedml.sedml.changeXML;
import tr.edu.metu.ceng.megamodel.sedml.sedml.computeChange;
import tr.edu.metu.ceng.megamodel.sedml.sedml.curve;
import tr.edu.metu.ceng.megamodel.sedml.sedml.dataDescription;
import tr.edu.metu.ceng.megamodel.sedml.sedml.dataGenerator;
import tr.edu.metu.ceng.megamodel.sedml.sedml.dataSet;
import tr.edu.metu.ceng.megamodel.sedml.sedml.dataSource;
import tr.edu.metu.ceng.megamodel.sedml.sedml.dimensionDescription;
import tr.edu.metu.ceng.megamodel.sedml.sedml.functionalRange;
import tr.edu.metu.ceng.megamodel.sedml.sedml.hypothesis;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfAlgorithmParameters;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfChanges;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfCurves;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataDescriptions;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataGenerators;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSets;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSlices;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSources;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfHypotheses;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfModels;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfOutputs;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfParameters;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfRanges;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfSimulations;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfSurfaces;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfTasks;
import tr.edu.metu.ceng.megamodel.sedml.sedml.listOfVariables;
import tr.edu.metu.ceng.megamodel.sedml.sedml.math;
import tr.edu.metu.ceng.megamodel.sedml.sedml.model;
import tr.edu.metu.ceng.megamodel.sedml.sedml.newXML;
import tr.edu.metu.ceng.megamodel.sedml.sedml.oneStep;
import tr.edu.metu.ceng.megamodel.sedml.sedml.output;
import tr.edu.metu.ceng.megamodel.sedml.sedml.parameter;
import tr.edu.metu.ceng.megamodel.sedml.sedml.plot2D;
import tr.edu.metu.ceng.megamodel.sedml.sedml.plot3D;
import tr.edu.metu.ceng.megamodel.sedml.sedml.range;
import tr.edu.metu.ceng.megamodel.sedml.sedml.repeatedTask;
import tr.edu.metu.ceng.megamodel.sedml.sedml.report;
import tr.edu.metu.ceng.megamodel.sedml.sedml.sedML;
import tr.edu.metu.ceng.megamodel.sedml.sedml.simulation;
import tr.edu.metu.ceng.megamodel.sedml.sedml.slice;
import tr.edu.metu.ceng.megamodel.sedml.sedml.subTask;
import tr.edu.metu.ceng.megamodel.sedml.sedml.target;
import tr.edu.metu.ceng.megamodel.sedml.sedml.task;
import tr.edu.metu.ceng.megamodel.sedml.sedml.uniformRange;
import tr.edu.metu.ceng.megamodel.sedml.sedml.uniformTimeCourse;
import tr.edu.metu.ceng.megamodel.sedml.sedml.value;
import tr.edu.metu.ceng.megamodel.sedml.sedml.variable;
import tr.edu.metu.ceng.megamodel.sedml.sedml.vectorRange;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SedmlPackageImpl extends EPackageImpl implements SedmlPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sedBaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass targetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass computeChangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addXMLEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeXMLEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass newXMLEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sedMLEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfDataDescriptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dimensionDescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfDataSourcesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfDataSlicesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sliceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfHypothesesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass hypothesisEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass relationalQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass query1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass query2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass query3EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass coherenceLinkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mechHypothesisEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass evidenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass temporalPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simultaneousEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dispersedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfModelsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfChangesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataGeneratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfParametersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfVariablesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfTasksEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass repeatedTaskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfRangesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uniformRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vectorRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass functionalRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractTaskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subTaskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfDataGeneratorsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfOutputsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass outputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass plot2DEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass plot3DEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass reportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfDataSetsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfSurfacesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfCurvesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass curveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfSimulationsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simulationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uniformTimeCourseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oneStepEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass algorithmEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listOfAlgorithmParametersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass algorithmParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum functionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum levelsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum expressionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum linksEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum temporalEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum logicalEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum coherenceEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.SedmlPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private SedmlPackageImpl()
  {
    super(eNS_URI, SedmlFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link SedmlPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static SedmlPackage init()
  {
    if (isInited) return (SedmlPackage)EPackage.Registry.INSTANCE.getEPackage(SedmlPackage.eNS_URI);

    // Obtain or create and register package
    SedmlPackageImpl theSedmlPackage = (SedmlPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof SedmlPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new SedmlPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theSedmlPackage.createPackageContents();

    // Initialize created meta-data
    theSedmlPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theSedmlPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(SedmlPackage.eNS_URI, theSedmlPackage);
    return theSedmlPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSEDBase()
  {
    return sedBaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getchange()
  {
    return changeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getchange_Target()
  {
    return (EReference)changeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettarget()
  {
    return targetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getchangeAttribute()
  {
    return changeAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getchangeAttribute_NewValue()
  {
    return (EAttribute)changeAttributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcomputeChange()
  {
    return computeChangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcomputeChange_Math()
  {
    return (EReference)computeChangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcomputeChange_ListOfVariables()
  {
    return (EReference)computeChangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcomputeChange_ListOfParameters()
  {
    return (EReference)computeChangeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getaddXML()
  {
    return addXMLEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getaddXML_NewXML()
  {
    return (EReference)addXMLEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getchangeXML()
  {
    return changeXMLEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getchangeXML_NewXML()
  {
    return (EReference)changeXMLEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getnewXML()
  {
    return newXMLEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getnewXML_AnyXML()
  {
    return (EAttribute)newXMLEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getsedML()
  {
    return sedMLEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getsedML_Version()
  {
    return (EAttribute)sedMLEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getsedML_Level()
  {
    return (EAttribute)sedMLEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfHypotheses()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfDataDescriptions()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfSimulations()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfModels()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfTasks()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfDataGenerators()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsedML_ListOfOutputs()
  {
    return (EReference)sedMLEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfDataDescriptions()
  {
    return listOfDataDescriptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfDataDescriptions_DataDescription()
  {
    return (EReference)listOfDataDescriptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdataDescription()
  {
    return dataDescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataDescription_Id()
  {
    return (EAttribute)dataDescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataDescription_Name()
  {
    return (EAttribute)dataDescriptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataDescription_Format()
  {
    return (EAttribute)dataDescriptionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataDescription_Source()
  {
    return (EAttribute)dataDescriptionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdataDescription_ListOfDataSources()
  {
    return (EReference)dataDescriptionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdataDescription_DimensionDescription()
  {
    return (EReference)dataDescriptionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdimensionDescription()
  {
    return dimensionDescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdimensionDescription_Xmlns()
  {
    return (EAttribute)dimensionDescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfDataSources()
  {
    return listOfDataSourcesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfDataSources_DataSource()
  {
    return (EReference)listOfDataSourcesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdataSource()
  {
    return dataSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataSource_Id()
  {
    return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataSource_Name()
  {
    return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataSource_IndexSet()
  {
    return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdataSource_ListOfSlices()
  {
    return (EReference)dataSourceEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfDataSlices()
  {
    return listOfDataSlicesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfDataSlices_Slice()
  {
    return (EReference)listOfDataSlicesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getslice()
  {
    return sliceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getslice_Referenceid()
  {
    return (EAttribute)sliceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getslice_Value()
  {
    return (EAttribute)sliceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfHypotheses()
  {
    return listOfHypothesesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfHypotheses_Hypothesis()
  {
    return (EReference)listOfHypothesesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gethypothesis()
  {
    return hypothesisEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gethypothesis_MechHypothesis()
  {
    return (EReference)hypothesisEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gethypothesis_Evidences()
  {
    return (EReference)hypothesisEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gethypothesis_CoherenceLinks()
  {
    return (EReference)hypothesisEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gethypothesis_RelHypothesis()
  {
    return (EReference)hypothesisEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRelationalQuery()
  {
    return relationalQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getQuery1()
  {
    return query1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_Factor()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_Control()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_X()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_Start1()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_End1()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_Response()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_Y()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_Start2()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery1_End2()
  {
    return (EAttribute)query1EClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getQuery2()
  {
    return query2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery2_Function1()
  {
    return (EAttribute)query2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery2_Response1()
  {
    return (EAttribute)query2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery2_Factor1()
  {
    return (EAttribute)query2EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery2_Function2()
  {
    return (EAttribute)query2EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery2_Response2()
  {
    return (EAttribute)query2EClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery2_Factor2()
  {
    return (EAttribute)query2EClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getQuery3()
  {
    return query3EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Factor1()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Control1()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Level2()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_X2()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Response1()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Level4()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_X4()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Level()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Factor()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Control()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Response()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_Start1()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getQuery3_End1()
  {
    return (EAttribute)query3EClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCoherenceLink()
  {
    return coherenceLinkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCoherenceLink_Coherence()
  {
    return (EAttribute)coherenceLinkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCoherenceLink_Hyp()
  {
    return (EAttribute)coherenceLinkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCoherenceLink_Evi()
  {
    return (EAttribute)coherenceLinkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMechHypothesis()
  {
    return mechHypothesisEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMechHypothesis_MName()
  {
    return (EAttribute)mechHypothesisEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMechHypothesis_AssoMech()
  {
    return (EReference)mechHypothesisEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMechHypothesis_MechanisticHypothesis()
  {
    return (EAttribute)mechHypothesisEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEvidence()
  {
    return evidenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEvidence_EName()
  {
    return (EAttribute)evidenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEvidence_Query()
  {
    return (EReference)evidenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEvidence_ObjOfStudy()
  {
    return (EAttribute)evidenceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemporalPattern()
  {
    return temporalPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_L2()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_Exp()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_Op1()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_Op2()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_L3()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_Condition()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_Lo()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_E()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_Exp1()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_V()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEvent()
  {
    return eventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSimultaneous()
  {
    return simultaneousEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSimultaneous_Sim1()
  {
    return (EAttribute)simultaneousEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSimultaneous_Log()
  {
    return (EAttribute)simultaneousEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSimultaneous_Sim2()
  {
    return (EAttribute)simultaneousEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDispersed()
  {
    return dispersedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDispersed_Disp()
  {
    return (EAttribute)dispersedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfModels()
  {
    return listOfModelsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfModels_Model()
  {
    return (EReference)listOfModelsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getmodel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getmodel_Id()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getmodel_Language()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getmodel_Source()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getmodel_Name()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getmodel_ListOfChanges()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfChanges()
  {
    return listOfChangesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfChanges_Change()
  {
    return (EReference)listOfChangesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdataGenerator()
  {
    return dataGeneratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataGenerator_Id()
  {
    return (EAttribute)dataGeneratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataGenerator_Name()
  {
    return (EAttribute)dataGeneratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdataGenerator_ListOfVariables()
  {
    return (EReference)dataGeneratorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdataGenerator_ListOfParameters()
  {
    return (EReference)dataGeneratorEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdataGenerator_Math()
  {
    return (EReference)dataGeneratorEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfParameters()
  {
    return listOfParametersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfParameters_Parameter()
  {
    return (EReference)listOfParametersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter()
  {
    return parameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getparameter_Id()
  {
    return (EAttribute)parameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getparameter_Name()
  {
    return (EAttribute)parameterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getparameter_Value()
  {
    return (EAttribute)parameterEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfVariables()
  {
    return listOfVariablesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfVariables_Variable()
  {
    return (EReference)listOfVariablesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getvariable()
  {
    return variableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvariable_Id()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvariable_Name()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvariable_Target()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getvariable_TaskReference()
  {
    return (EReference)variableEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getvariable_ModelReference()
  {
    return (EReference)variableEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvariable_Symbol()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfTasks()
  {
    return listOfTasksEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfTasks_Task()
  {
    return (EReference)listOfTasksEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfTasks_RepeatedTask()
  {
    return (EReference)listOfTasksEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getrepeatedTask()
  {
    return repeatedTaskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrepeatedTask_SubTask()
  {
    return (EReference)repeatedTaskEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrepeatedTask_ListOfRanges()
  {
    return (EReference)repeatedTaskEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getrepeatedTask_ListOfChanges()
  {
    return (EReference)repeatedTaskEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfRanges()
  {
    return listOfRangesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfRanges_Range()
  {
    return (EReference)listOfRangesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getrange()
  {
    return rangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getuniformRange()
  {
    return uniformRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformRange_Start()
  {
    return (EAttribute)uniformRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformRange_End()
  {
    return (EAttribute)uniformRangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformRange_NumberOfPoints()
  {
    return (EAttribute)uniformRangeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformRange_Type()
  {
    return (EAttribute)uniformRangeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getvectorRange()
  {
    return vectorRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getvectorRange_Value()
  {
    return (EReference)vectorRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getvalue()
  {
    return valueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvalue_Content()
  {
    return (EAttribute)valueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfunctionalRange()
  {
    return functionalRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfunctionalRange_Id()
  {
    return (EAttribute)functionalRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfunctionalRange_Range()
  {
    return (EAttribute)functionalRangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunctionalRange_ListOfVariables()
  {
    return (EReference)functionalRangeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunctionalRange_ListOfParameters()
  {
    return (EReference)functionalRangeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunctionalRange_Math()
  {
    return (EReference)functionalRangeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getabstractTask()
  {
    return abstractTaskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getabstractTask_Id()
  {
    return (EAttribute)abstractTaskEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getabstractTask_Name()
  {
    return (EAttribute)abstractTaskEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getsubTask()
  {
    return subTaskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsubTask_ModelReference()
  {
    return (EReference)subTaskEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getsubTask_Order()
  {
    return (EAttribute)subTaskEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettask()
  {
    return taskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettask_ModelReference()
  {
    return (EReference)taskEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettask_SimulationReference()
  {
    return (EReference)taskEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfDataGenerators()
  {
    return listOfDataGeneratorsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfDataGenerators_Datagenerator()
  {
    return (EReference)listOfDataGeneratorsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getmath()
  {
    return mathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getmath_Xlms()
  {
    return (EAttribute)mathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfOutputs()
  {
    return listOfOutputsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfOutputs_Output()
  {
    return (EReference)listOfOutputsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoutput()
  {
    return outputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getplot2D()
  {
    return plot2DEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getplot2D_Id()
  {
    return (EAttribute)plot2DEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getplot2D_Name()
  {
    return (EAttribute)plot2DEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getplot2D_ListOfCurves()
  {
    return (EReference)plot2DEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getplot3D()
  {
    return plot3DEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getplot3D_ListOfSurfaces()
  {
    return (EReference)plot3DEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getreport()
  {
    return reportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getreport_Id()
  {
    return (EAttribute)reportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getreport_Name()
  {
    return (EAttribute)reportEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getreport_ListOfDataSets()
  {
    return (EReference)reportEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfDataSets()
  {
    return listOfDataSetsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfDataSets_DataSet()
  {
    return (EReference)listOfDataSetsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdataSet()
  {
    return dataSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataSet_Label()
  {
    return (EAttribute)dataSetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataSet_Name()
  {
    return (EAttribute)dataSetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdataSet_DataReference()
  {
    return (EAttribute)dataSetEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfSurfaces()
  {
    return listOfSurfacesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_Id()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_LogX()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_LogY()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_LogZ()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_XDataReference()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_YDataReference()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlistOfSurfaces_ZDataReference()
  {
    return (EAttribute)listOfSurfacesEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfCurves()
  {
    return listOfCurvesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfCurves_Curve()
  {
    return (EReference)listOfCurvesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcurve()
  {
    return curveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcurve_Id()
  {
    return (EAttribute)curveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcurve_LogX()
  {
    return (EAttribute)curveEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcurve_LogY()
  {
    return (EAttribute)curveEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcurve_XDataReference()
  {
    return (EAttribute)curveEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcurve_YDataReference()
  {
    return (EAttribute)curveEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfSimulations()
  {
    return listOfSimulationsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfSimulations_Simulation()
  {
    return (EReference)listOfSimulationsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getsimulation()
  {
    return simulationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getuniformTimeCourse()
  {
    return uniformTimeCourseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformTimeCourse_Id()
  {
    return (EAttribute)uniformTimeCourseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformTimeCourse_InitialTime()
  {
    return (EAttribute)uniformTimeCourseEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformTimeCourse_OutputStartTime()
  {
    return (EAttribute)uniformTimeCourseEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformTimeCourse_OutputEndTime()
  {
    return (EAttribute)uniformTimeCourseEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getuniformTimeCourse_NumberOfPoints()
  {
    return (EAttribute)uniformTimeCourseEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getuniformTimeCourse_Algorithm()
  {
    return (EReference)uniformTimeCourseEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoneStep()
  {
    return oneStepEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getoneStep_Step()
  {
    return (EAttribute)oneStepEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getalgorithm()
  {
    return algorithmEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getalgorithm_KisaoID()
  {
    return (EAttribute)algorithmEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getalgorithm_ListOfAlgorithmParameters()
  {
    return (EReference)algorithmEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlistOfAlgorithmParameters()
  {
    return listOfAlgorithmParametersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlistOfAlgorithmParameters_AlgorithmParameter()
  {
    return (EReference)listOfAlgorithmParametersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getalgorithmParameter()
  {
    return algorithmParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getalgorithmParameter_KisaoID()
  {
    return (EAttribute)algorithmParameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getalgorithmParameter_Value()
  {
    return (EAttribute)algorithmParameterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFunction()
  {
    return functionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getLevels()
  {
    return levelsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getExpression()
  {
    return expressionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getLinks()
  {
    return linksEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTemporal()
  {
    return temporalEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getLogical()
  {
    return logicalEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getCoherence()
  {
    return coherenceEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SedmlFactory getSedmlFactory()
  {
    return (SedmlFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    sedBaseEClass = createEClass(SED_BASE);

    changeEClass = createEClass(CHANGE);
    createEReference(changeEClass, CHANGE__TARGET);

    targetEClass = createEClass(TARGET);

    changeAttributeEClass = createEClass(CHANGE_ATTRIBUTE);
    createEAttribute(changeAttributeEClass, CHANGE_ATTRIBUTE__NEW_VALUE);

    computeChangeEClass = createEClass(COMPUTE_CHANGE);
    createEReference(computeChangeEClass, COMPUTE_CHANGE__MATH);
    createEReference(computeChangeEClass, COMPUTE_CHANGE__LIST_OF_VARIABLES);
    createEReference(computeChangeEClass, COMPUTE_CHANGE__LIST_OF_PARAMETERS);

    addXMLEClass = createEClass(ADD_XML);
    createEReference(addXMLEClass, ADD_XML__NEW_XML);

    changeXMLEClass = createEClass(CHANGE_XML);
    createEReference(changeXMLEClass, CHANGE_XML__NEW_XML);

    newXMLEClass = createEClass(NEW_XML);
    createEAttribute(newXMLEClass, NEW_XML__ANY_XML);

    sedMLEClass = createEClass(SED_ML);
    createEAttribute(sedMLEClass, SED_ML__VERSION);
    createEAttribute(sedMLEClass, SED_ML__LEVEL);
    createEReference(sedMLEClass, SED_ML__LIST_OF_HYPOTHESES);
    createEReference(sedMLEClass, SED_ML__LIST_OF_DATA_DESCRIPTIONS);
    createEReference(sedMLEClass, SED_ML__LIST_OF_SIMULATIONS);
    createEReference(sedMLEClass, SED_ML__LIST_OF_MODELS);
    createEReference(sedMLEClass, SED_ML__LIST_OF_TASKS);
    createEReference(sedMLEClass, SED_ML__LIST_OF_DATA_GENERATORS);
    createEReference(sedMLEClass, SED_ML__LIST_OF_OUTPUTS);

    listOfDataDescriptionsEClass = createEClass(LIST_OF_DATA_DESCRIPTIONS);
    createEReference(listOfDataDescriptionsEClass, LIST_OF_DATA_DESCRIPTIONS__DATA_DESCRIPTION);

    dataDescriptionEClass = createEClass(DATA_DESCRIPTION);
    createEAttribute(dataDescriptionEClass, DATA_DESCRIPTION__ID);
    createEAttribute(dataDescriptionEClass, DATA_DESCRIPTION__NAME);
    createEAttribute(dataDescriptionEClass, DATA_DESCRIPTION__FORMAT);
    createEAttribute(dataDescriptionEClass, DATA_DESCRIPTION__SOURCE);
    createEReference(dataDescriptionEClass, DATA_DESCRIPTION__LIST_OF_DATA_SOURCES);
    createEReference(dataDescriptionEClass, DATA_DESCRIPTION__DIMENSION_DESCRIPTION);

    dimensionDescriptionEClass = createEClass(DIMENSION_DESCRIPTION);
    createEAttribute(dimensionDescriptionEClass, DIMENSION_DESCRIPTION__XMLNS);

    listOfDataSourcesEClass = createEClass(LIST_OF_DATA_SOURCES);
    createEReference(listOfDataSourcesEClass, LIST_OF_DATA_SOURCES__DATA_SOURCE);

    dataSourceEClass = createEClass(DATA_SOURCE);
    createEAttribute(dataSourceEClass, DATA_SOURCE__ID);
    createEAttribute(dataSourceEClass, DATA_SOURCE__NAME);
    createEAttribute(dataSourceEClass, DATA_SOURCE__INDEX_SET);
    createEReference(dataSourceEClass, DATA_SOURCE__LIST_OF_SLICES);

    listOfDataSlicesEClass = createEClass(LIST_OF_DATA_SLICES);
    createEReference(listOfDataSlicesEClass, LIST_OF_DATA_SLICES__SLICE);

    sliceEClass = createEClass(SLICE);
    createEAttribute(sliceEClass, SLICE__REFERENCEID);
    createEAttribute(sliceEClass, SLICE__VALUE);

    listOfHypothesesEClass = createEClass(LIST_OF_HYPOTHESES);
    createEReference(listOfHypothesesEClass, LIST_OF_HYPOTHESES__HYPOTHESIS);

    hypothesisEClass = createEClass(HYPOTHESIS);
    createEReference(hypothesisEClass, HYPOTHESIS__MECH_HYPOTHESIS);
    createEReference(hypothesisEClass, HYPOTHESIS__EVIDENCES);
    createEReference(hypothesisEClass, HYPOTHESIS__COHERENCE_LINKS);
    createEReference(hypothesisEClass, HYPOTHESIS__REL_HYPOTHESIS);

    relationalQueryEClass = createEClass(RELATIONAL_QUERY);

    query1EClass = createEClass(QUERY1);
    createEAttribute(query1EClass, QUERY1__FACTOR);
    createEAttribute(query1EClass, QUERY1__CONTROL);
    createEAttribute(query1EClass, QUERY1__X);
    createEAttribute(query1EClass, QUERY1__START1);
    createEAttribute(query1EClass, QUERY1__END1);
    createEAttribute(query1EClass, QUERY1__RESPONSE);
    createEAttribute(query1EClass, QUERY1__Y);
    createEAttribute(query1EClass, QUERY1__START2);
    createEAttribute(query1EClass, QUERY1__END2);

    query2EClass = createEClass(QUERY2);
    createEAttribute(query2EClass, QUERY2__FUNCTION1);
    createEAttribute(query2EClass, QUERY2__RESPONSE1);
    createEAttribute(query2EClass, QUERY2__FACTOR1);
    createEAttribute(query2EClass, QUERY2__FUNCTION2);
    createEAttribute(query2EClass, QUERY2__RESPONSE2);
    createEAttribute(query2EClass, QUERY2__FACTOR2);

    query3EClass = createEClass(QUERY3);
    createEAttribute(query3EClass, QUERY3__FACTOR1);
    createEAttribute(query3EClass, QUERY3__CONTROL1);
    createEAttribute(query3EClass, QUERY3__LEVEL2);
    createEAttribute(query3EClass, QUERY3__X2);
    createEAttribute(query3EClass, QUERY3__RESPONSE1);
    createEAttribute(query3EClass, QUERY3__LEVEL4);
    createEAttribute(query3EClass, QUERY3__X4);
    createEAttribute(query3EClass, QUERY3__LEVEL);
    createEAttribute(query3EClass, QUERY3__FACTOR);
    createEAttribute(query3EClass, QUERY3__CONTROL);
    createEAttribute(query3EClass, QUERY3__RESPONSE);
    createEAttribute(query3EClass, QUERY3__START1);
    createEAttribute(query3EClass, QUERY3__END1);

    coherenceLinkEClass = createEClass(COHERENCE_LINK);
    createEAttribute(coherenceLinkEClass, COHERENCE_LINK__COHERENCE);
    createEAttribute(coherenceLinkEClass, COHERENCE_LINK__HYP);
    createEAttribute(coherenceLinkEClass, COHERENCE_LINK__EVI);

    mechHypothesisEClass = createEClass(MECH_HYPOTHESIS);
    createEAttribute(mechHypothesisEClass, MECH_HYPOTHESIS__MNAME);
    createEReference(mechHypothesisEClass, MECH_HYPOTHESIS__ASSO_MECH);
    createEAttribute(mechHypothesisEClass, MECH_HYPOTHESIS__MECHANISTIC_HYPOTHESIS);

    evidenceEClass = createEClass(EVIDENCE);
    createEAttribute(evidenceEClass, EVIDENCE__ENAME);
    createEReference(evidenceEClass, EVIDENCE__QUERY);
    createEAttribute(evidenceEClass, EVIDENCE__OBJ_OF_STUDY);

    temporalPatternEClass = createEClass(TEMPORAL_PATTERN);

    conditionEClass = createEClass(CONDITION);
    createEAttribute(conditionEClass, CONDITION__L2);
    createEAttribute(conditionEClass, CONDITION__EXP);
    createEAttribute(conditionEClass, CONDITION__OP1);
    createEAttribute(conditionEClass, CONDITION__OP2);
    createEAttribute(conditionEClass, CONDITION__L3);
    createEReference(conditionEClass, CONDITION__CONDITION);
    createEAttribute(conditionEClass, CONDITION__LO);
    createEReference(conditionEClass, CONDITION__E);
    createEAttribute(conditionEClass, CONDITION__EXP1);
    createEAttribute(conditionEClass, CONDITION__V);

    eventEClass = createEClass(EVENT);

    simultaneousEClass = createEClass(SIMULTANEOUS);
    createEAttribute(simultaneousEClass, SIMULTANEOUS__SIM1);
    createEAttribute(simultaneousEClass, SIMULTANEOUS__LOG);
    createEAttribute(simultaneousEClass, SIMULTANEOUS__SIM2);

    dispersedEClass = createEClass(DISPERSED);
    createEAttribute(dispersedEClass, DISPERSED__DISP);

    listOfModelsEClass = createEClass(LIST_OF_MODELS);
    createEReference(listOfModelsEClass, LIST_OF_MODELS__MODEL);

    modelEClass = createEClass(MODEL);
    createEAttribute(modelEClass, MODEL__ID);
    createEAttribute(modelEClass, MODEL__LANGUAGE);
    createEAttribute(modelEClass, MODEL__SOURCE);
    createEAttribute(modelEClass, MODEL__NAME);
    createEReference(modelEClass, MODEL__LIST_OF_CHANGES);

    listOfChangesEClass = createEClass(LIST_OF_CHANGES);
    createEReference(listOfChangesEClass, LIST_OF_CHANGES__CHANGE);

    dataGeneratorEClass = createEClass(DATA_GENERATOR);
    createEAttribute(dataGeneratorEClass, DATA_GENERATOR__ID);
    createEAttribute(dataGeneratorEClass, DATA_GENERATOR__NAME);
    createEReference(dataGeneratorEClass, DATA_GENERATOR__LIST_OF_VARIABLES);
    createEReference(dataGeneratorEClass, DATA_GENERATOR__LIST_OF_PARAMETERS);
    createEReference(dataGeneratorEClass, DATA_GENERATOR__MATH);

    listOfParametersEClass = createEClass(LIST_OF_PARAMETERS);
    createEReference(listOfParametersEClass, LIST_OF_PARAMETERS__PARAMETER);

    parameterEClass = createEClass(PARAMETER);
    createEAttribute(parameterEClass, PARAMETER__ID);
    createEAttribute(parameterEClass, PARAMETER__NAME);
    createEAttribute(parameterEClass, PARAMETER__VALUE);

    listOfVariablesEClass = createEClass(LIST_OF_VARIABLES);
    createEReference(listOfVariablesEClass, LIST_OF_VARIABLES__VARIABLE);

    variableEClass = createEClass(VARIABLE);
    createEAttribute(variableEClass, VARIABLE__ID);
    createEAttribute(variableEClass, VARIABLE__NAME);
    createEAttribute(variableEClass, VARIABLE__TARGET);
    createEReference(variableEClass, VARIABLE__TASK_REFERENCE);
    createEReference(variableEClass, VARIABLE__MODEL_REFERENCE);
    createEAttribute(variableEClass, VARIABLE__SYMBOL);

    listOfTasksEClass = createEClass(LIST_OF_TASKS);
    createEReference(listOfTasksEClass, LIST_OF_TASKS__TASK);
    createEReference(listOfTasksEClass, LIST_OF_TASKS__REPEATED_TASK);

    repeatedTaskEClass = createEClass(REPEATED_TASK);
    createEReference(repeatedTaskEClass, REPEATED_TASK__SUB_TASK);
    createEReference(repeatedTaskEClass, REPEATED_TASK__LIST_OF_RANGES);
    createEReference(repeatedTaskEClass, REPEATED_TASK__LIST_OF_CHANGES);

    listOfRangesEClass = createEClass(LIST_OF_RANGES);
    createEReference(listOfRangesEClass, LIST_OF_RANGES__RANGE);

    rangeEClass = createEClass(RANGE);

    uniformRangeEClass = createEClass(UNIFORM_RANGE);
    createEAttribute(uniformRangeEClass, UNIFORM_RANGE__START);
    createEAttribute(uniformRangeEClass, UNIFORM_RANGE__END);
    createEAttribute(uniformRangeEClass, UNIFORM_RANGE__NUMBER_OF_POINTS);
    createEAttribute(uniformRangeEClass, UNIFORM_RANGE__TYPE);

    vectorRangeEClass = createEClass(VECTOR_RANGE);
    createEReference(vectorRangeEClass, VECTOR_RANGE__VALUE);

    valueEClass = createEClass(VALUE);
    createEAttribute(valueEClass, VALUE__CONTENT);

    functionalRangeEClass = createEClass(FUNCTIONAL_RANGE);
    createEAttribute(functionalRangeEClass, FUNCTIONAL_RANGE__ID);
    createEAttribute(functionalRangeEClass, FUNCTIONAL_RANGE__RANGE);
    createEReference(functionalRangeEClass, FUNCTIONAL_RANGE__LIST_OF_VARIABLES);
    createEReference(functionalRangeEClass, FUNCTIONAL_RANGE__LIST_OF_PARAMETERS);
    createEReference(functionalRangeEClass, FUNCTIONAL_RANGE__MATH);

    abstractTaskEClass = createEClass(ABSTRACT_TASK);
    createEAttribute(abstractTaskEClass, ABSTRACT_TASK__ID);
    createEAttribute(abstractTaskEClass, ABSTRACT_TASK__NAME);

    subTaskEClass = createEClass(SUB_TASK);
    createEReference(subTaskEClass, SUB_TASK__MODEL_REFERENCE);
    createEAttribute(subTaskEClass, SUB_TASK__ORDER);

    taskEClass = createEClass(TASK);
    createEReference(taskEClass, TASK__MODEL_REFERENCE);
    createEReference(taskEClass, TASK__SIMULATION_REFERENCE);

    listOfDataGeneratorsEClass = createEClass(LIST_OF_DATA_GENERATORS);
    createEReference(listOfDataGeneratorsEClass, LIST_OF_DATA_GENERATORS__DATAGENERATOR);

    mathEClass = createEClass(MATH);
    createEAttribute(mathEClass, MATH__XLMS);

    listOfOutputsEClass = createEClass(LIST_OF_OUTPUTS);
    createEReference(listOfOutputsEClass, LIST_OF_OUTPUTS__OUTPUT);

    outputEClass = createEClass(OUTPUT);

    plot2DEClass = createEClass(PLOT2_D);
    createEAttribute(plot2DEClass, PLOT2_D__ID);
    createEAttribute(plot2DEClass, PLOT2_D__NAME);
    createEReference(plot2DEClass, PLOT2_D__LIST_OF_CURVES);

    plot3DEClass = createEClass(PLOT3_D);
    createEReference(plot3DEClass, PLOT3_D__LIST_OF_SURFACES);

    reportEClass = createEClass(REPORT);
    createEAttribute(reportEClass, REPORT__ID);
    createEAttribute(reportEClass, REPORT__NAME);
    createEReference(reportEClass, REPORT__LIST_OF_DATA_SETS);

    listOfDataSetsEClass = createEClass(LIST_OF_DATA_SETS);
    createEReference(listOfDataSetsEClass, LIST_OF_DATA_SETS__DATA_SET);

    dataSetEClass = createEClass(DATA_SET);
    createEAttribute(dataSetEClass, DATA_SET__LABEL);
    createEAttribute(dataSetEClass, DATA_SET__NAME);
    createEAttribute(dataSetEClass, DATA_SET__DATA_REFERENCE);

    listOfSurfacesEClass = createEClass(LIST_OF_SURFACES);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__ID);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__LOG_X);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__LOG_Y);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__LOG_Z);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__XDATA_REFERENCE);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__YDATA_REFERENCE);
    createEAttribute(listOfSurfacesEClass, LIST_OF_SURFACES__ZDATA_REFERENCE);

    listOfCurvesEClass = createEClass(LIST_OF_CURVES);
    createEReference(listOfCurvesEClass, LIST_OF_CURVES__CURVE);

    curveEClass = createEClass(CURVE);
    createEAttribute(curveEClass, CURVE__ID);
    createEAttribute(curveEClass, CURVE__LOG_X);
    createEAttribute(curveEClass, CURVE__LOG_Y);
    createEAttribute(curveEClass, CURVE__XDATA_REFERENCE);
    createEAttribute(curveEClass, CURVE__YDATA_REFERENCE);

    listOfSimulationsEClass = createEClass(LIST_OF_SIMULATIONS);
    createEReference(listOfSimulationsEClass, LIST_OF_SIMULATIONS__SIMULATION);

    simulationEClass = createEClass(SIMULATION);

    uniformTimeCourseEClass = createEClass(UNIFORM_TIME_COURSE);
    createEAttribute(uniformTimeCourseEClass, UNIFORM_TIME_COURSE__ID);
    createEAttribute(uniformTimeCourseEClass, UNIFORM_TIME_COURSE__INITIAL_TIME);
    createEAttribute(uniformTimeCourseEClass, UNIFORM_TIME_COURSE__OUTPUT_START_TIME);
    createEAttribute(uniformTimeCourseEClass, UNIFORM_TIME_COURSE__OUTPUT_END_TIME);
    createEAttribute(uniformTimeCourseEClass, UNIFORM_TIME_COURSE__NUMBER_OF_POINTS);
    createEReference(uniformTimeCourseEClass, UNIFORM_TIME_COURSE__ALGORITHM);

    oneStepEClass = createEClass(ONE_STEP);
    createEAttribute(oneStepEClass, ONE_STEP__STEP);

    algorithmEClass = createEClass(ALGORITHM);
    createEAttribute(algorithmEClass, ALGORITHM__KISAO_ID);
    createEReference(algorithmEClass, ALGORITHM__LIST_OF_ALGORITHM_PARAMETERS);

    listOfAlgorithmParametersEClass = createEClass(LIST_OF_ALGORITHM_PARAMETERS);
    createEReference(listOfAlgorithmParametersEClass, LIST_OF_ALGORITHM_PARAMETERS__ALGORITHM_PARAMETER);

    algorithmParameterEClass = createEClass(ALGORITHM_PARAMETER);
    createEAttribute(algorithmParameterEClass, ALGORITHM_PARAMETER__KISAO_ID);
    createEAttribute(algorithmParameterEClass, ALGORITHM_PARAMETER__VALUE);

    // Create enums
    functionEEnum = createEEnum(FUNCTION);
    levelsEEnum = createEEnum(LEVELS);
    expressionEEnum = createEEnum(EXPRESSION);
    linksEEnum = createEEnum(LINKS);
    temporalEEnum = createEEnum(TEMPORAL);
    logicalEEnum = createEEnum(LOGICAL);
    coherenceEEnum = createEEnum(COHERENCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    changeEClass.getESuperTypes().add(this.getSEDBase());
    changeAttributeEClass.getESuperTypes().add(this.gettarget());
    computeChangeEClass.getESuperTypes().add(this.gettarget());
    addXMLEClass.getESuperTypes().add(this.gettarget());
    changeXMLEClass.getESuperTypes().add(this.gettarget());
    sedMLEClass.getESuperTypes().add(this.getSEDBase());
    dataDescriptionEClass.getESuperTypes().add(this.getSEDBase());
    query1EClass.getESuperTypes().add(this.getRelationalQuery());
    query2EClass.getESuperTypes().add(this.getRelationalQuery());
    query3EClass.getESuperTypes().add(this.getRelationalQuery());
    conditionEClass.getESuperTypes().add(this.getTemporalPattern());
    simultaneousEClass.getESuperTypes().add(this.getEvent());
    dispersedEClass.getESuperTypes().add(this.getEvent());
    modelEClass.getESuperTypes().add(this.getSEDBase());
    dataGeneratorEClass.getESuperTypes().add(this.getSEDBase());
    parameterEClass.getESuperTypes().add(this.getSEDBase());
    variableEClass.getESuperTypes().add(this.getSEDBase());
    repeatedTaskEClass.getESuperTypes().add(this.getabstractTask());
    uniformRangeEClass.getESuperTypes().add(this.getrange());
    vectorRangeEClass.getESuperTypes().add(this.getrange());
    functionalRangeEClass.getESuperTypes().add(this.getrange());
    abstractTaskEClass.getESuperTypes().add(this.getSEDBase());
    taskEClass.getESuperTypes().add(this.getabstractTask());
    plot2DEClass.getESuperTypes().add(this.getoutput());
    plot3DEClass.getESuperTypes().add(this.getoutput());
    reportEClass.getESuperTypes().add(this.getoutput());
    simulationEClass.getESuperTypes().add(this.getSEDBase());
    uniformTimeCourseEClass.getESuperTypes().add(this.getsimulation());
    oneStepEClass.getESuperTypes().add(this.getsimulation());

    // Initialize classes and features; add operations and parameters
    initEClass(sedBaseEClass, SEDBase.class, "SEDBase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(changeEClass, change.class, "change", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getchange_Target(), this.gettarget(), null, "target", null, 0, -1, change.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(targetEClass, target.class, "target", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(changeAttributeEClass, changeAttribute.class, "changeAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getchangeAttribute_NewValue(), ecorePackage.getEString(), "newValue", null, 0, 1, changeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(computeChangeEClass, computeChange.class, "computeChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcomputeChange_Math(), this.getmath(), null, "math", null, 0, 1, computeChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getcomputeChange_ListOfVariables(), this.getlistOfVariables(), null, "listOfVariables", null, 0, 1, computeChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getcomputeChange_ListOfParameters(), this.getlistOfParameters(), null, "listOfParameters", null, 0, 1, computeChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addXMLEClass, addXML.class, "addXML", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getaddXML_NewXML(), this.getnewXML(), null, "newXML", null, 0, -1, addXML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeXMLEClass, changeXML.class, "changeXML", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getchangeXML_NewXML(), this.getnewXML(), null, "newXML", null, 0, -1, changeXML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(newXMLEClass, newXML.class, "newXML", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getnewXML_AnyXML(), ecorePackage.getEString(), "anyXML", null, 0, 1, newXML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sedMLEClass, sedML.class, "sedML", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getsedML_Version(), ecorePackage.getEInt(), "version", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getsedML_Level(), ecorePackage.getEInt(), "level", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfHypotheses(), this.getlistOfHypotheses(), null, "listOfHypotheses", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfDataDescriptions(), this.getlistOfDataDescriptions(), null, "listOfDataDescriptions", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfSimulations(), this.getlistOfSimulations(), null, "listOfSimulations", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfModels(), this.getlistOfModels(), null, "listOfModels", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfTasks(), this.getlistOfTasks(), null, "listOfTasks", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfDataGenerators(), this.getlistOfDataGenerators(), null, "listOfDataGenerators", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsedML_ListOfOutputs(), this.getlistOfOutputs(), null, "listOfOutputs", null, 0, 1, sedML.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfDataDescriptionsEClass, listOfDataDescriptions.class, "listOfDataDescriptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfDataDescriptions_DataDescription(), this.getdataDescription(), null, "dataDescription", null, 0, -1, listOfDataDescriptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDescriptionEClass, dataDescription.class, "dataDescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdataDescription_Id(), ecorePackage.getEString(), "id", null, 0, 1, dataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataDescription_Name(), ecorePackage.getEString(), "name", null, 0, 1, dataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataDescription_Format(), ecorePackage.getEString(), "format", null, 0, 1, dataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataDescription_Source(), ecorePackage.getEString(), "source", null, 0, 1, dataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdataDescription_ListOfDataSources(), this.getlistOfDataSources(), null, "listOfDataSources", null, 0, 1, dataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdataDescription_DimensionDescription(), this.getdimensionDescription(), null, "dimensionDescription", null, 0, 1, dataDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dimensionDescriptionEClass, dimensionDescription.class, "dimensionDescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdimensionDescription_Xmlns(), ecorePackage.getEString(), "xmlns", null, 0, 1, dimensionDescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfDataSourcesEClass, listOfDataSources.class, "listOfDataSources", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfDataSources_DataSource(), this.getdataSource(), null, "dataSource", null, 0, -1, listOfDataSources.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataSourceEClass, dataSource.class, "dataSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdataSource_Id(), ecorePackage.getEString(), "id", null, 0, 1, dataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataSource_Name(), ecorePackage.getEString(), "name", null, 0, 1, dataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataSource_IndexSet(), ecorePackage.getEString(), "indexSet", null, 0, 1, dataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdataSource_ListOfSlices(), this.getlistOfDataSlices(), null, "listOfSlices", null, 0, 1, dataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfDataSlicesEClass, listOfDataSlices.class, "listOfDataSlices", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfDataSlices_Slice(), this.getslice(), null, "slice", null, 0, -1, listOfDataSlices.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sliceEClass, slice.class, "slice", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getslice_Referenceid(), ecorePackage.getEString(), "referenceid", null, 0, 1, slice.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getslice_Value(), ecorePackage.getEString(), "value", null, 0, 1, slice.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfHypothesesEClass, listOfHypotheses.class, "listOfHypotheses", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfHypotheses_Hypothesis(), this.gethypothesis(), null, "hypothesis", null, 0, -1, listOfHypotheses.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(hypothesisEClass, hypothesis.class, "hypothesis", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gethypothesis_MechHypothesis(), this.getMechHypothesis(), null, "mechHypothesis", null, 0, -1, hypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gethypothesis_Evidences(), this.getEvidence(), null, "evidences", null, 0, -1, hypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gethypothesis_CoherenceLinks(), this.getCoherenceLink(), null, "coherenceLinks", null, 0, -1, hypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gethypothesis_RelHypothesis(), this.getRelationalQuery(), null, "relHypothesis", null, 0, -1, hypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(relationalQueryEClass, RelationalQuery.class, "RelationalQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(query1EClass, Query1.class, "Query1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getQuery1_Factor(), ecorePackage.getEString(), "factor", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_Control(), ecorePackage.getEString(), "control", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_X(), ecorePackage.getEString(), "x", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_Start1(), ecorePackage.getEString(), "start1", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_End1(), ecorePackage.getEString(), "end1", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_Response(), ecorePackage.getEString(), "response", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_Y(), ecorePackage.getEString(), "y", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_Start2(), ecorePackage.getEString(), "start2", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery1_End2(), ecorePackage.getEString(), "end2", null, 0, 1, Query1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(query2EClass, Query2.class, "Query2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getQuery2_Function1(), this.getFunction(), "function1", null, 0, 1, Query2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery2_Response1(), ecorePackage.getEString(), "response1", null, 0, 1, Query2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery2_Factor1(), ecorePackage.getEString(), "factor1", null, 0, 1, Query2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery2_Function2(), this.getFunction(), "function2", null, 0, 1, Query2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery2_Response2(), ecorePackage.getEString(), "response2", null, 0, 1, Query2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery2_Factor2(), ecorePackage.getEString(), "factor2", null, 0, 1, Query2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(query3EClass, Query3.class, "Query3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getQuery3_Factor1(), ecorePackage.getEString(), "factor1", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Control1(), ecorePackage.getEString(), "control1", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Level2(), this.getLevels(), "Level2", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_X2(), ecorePackage.getEString(), "x2", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Response1(), ecorePackage.getEString(), "response1", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Level4(), this.getLevels(), "Level4", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_X4(), ecorePackage.getEString(), "x4", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Level(), this.getLevels(), "level", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Factor(), ecorePackage.getEString(), "factor", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Control(), ecorePackage.getEString(), "control", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Response(), ecorePackage.getEString(), "response", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_Start1(), ecorePackage.getEString(), "start1", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getQuery3_End1(), ecorePackage.getEString(), "end1", null, 0, 1, Query3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(coherenceLinkEClass, CoherenceLink.class, "CoherenceLink", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCoherenceLink_Coherence(), this.getCoherence(), "coherence", null, 0, 1, CoherenceLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCoherenceLink_Hyp(), ecorePackage.getEString(), "hyp", null, 0, -1, CoherenceLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCoherenceLink_Evi(), ecorePackage.getEString(), "evi", null, 0, -1, CoherenceLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mechHypothesisEClass, MechHypothesis.class, "MechHypothesis", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMechHypothesis_MName(), ecorePackage.getEString(), "mName", null, 0, 1, MechHypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMechHypothesis_AssoMech(), this.getTemporalPattern(), null, "assoMech", null, 0, -1, MechHypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMechHypothesis_MechanisticHypothesis(), ecorePackage.getEString(), "mechanisticHypothesis", null, 0, 1, MechHypothesis.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(evidenceEClass, Evidence.class, "Evidence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEvidence_EName(), ecorePackage.getEString(), "eName", null, 0, 1, Evidence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEvidence_Query(), this.getTemporalPattern(), null, "query", null, 0, -1, Evidence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvidence_ObjOfStudy(), ecorePackage.getEString(), "objOfStudy", null, 0, 1, Evidence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(temporalPatternEClass, TemporalPattern.class, "TemporalPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCondition_L2(), this.getLinks(), "l2", null, 0, -1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_Exp(), this.getExpression(), "exp", null, 0, -1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_Op1(), this.getTemporal(), "op1", null, 0, -1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_Op2(), this.getLogical(), "op2", null, 0, -1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_L3(), this.getLinks(), "l3", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_Condition(), this.getEvent(), null, "condition", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_Lo(), ecorePackage.getEString(), "lo", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_E(), this.getEvent(), null, "e", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_Exp1(), this.getExpression(), "exp1", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_V(), ecorePackage.getEString(), "v", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventEClass, Event.class, "Event", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(simultaneousEClass, Simultaneous.class, "Simultaneous", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSimultaneous_Sim1(), ecorePackage.getEString(), "sim1", null, 0, 1, Simultaneous.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSimultaneous_Log(), this.getLogical(), "log", null, 0, -1, Simultaneous.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSimultaneous_Sim2(), ecorePackage.getEString(), "sim2", null, 0, -1, Simultaneous.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dispersedEClass, Dispersed.class, "Dispersed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDispersed_Disp(), ecorePackage.getEString(), "disp", null, 0, -1, Dispersed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfModelsEClass, listOfModels.class, "listOfModels", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfModels_Model(), this.getmodel(), null, "model", null, 0, -1, listOfModels.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelEClass, model.class, "model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getmodel_Id(), ecorePackage.getEString(), "id", null, 0, 1, model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getmodel_Language(), ecorePackage.getEString(), "language", null, 0, 1, model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getmodel_Source(), ecorePackage.getEString(), "source", null, 0, 1, model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getmodel_Name(), ecorePackage.getEString(), "name", null, 0, 1, model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getmodel_ListOfChanges(), this.getlistOfChanges(), null, "listOfChanges", null, 0, 1, model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfChangesEClass, listOfChanges.class, "listOfChanges", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfChanges_Change(), this.getchange(), null, "change", null, 0, -1, listOfChanges.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataGeneratorEClass, dataGenerator.class, "dataGenerator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdataGenerator_Id(), ecorePackage.getEString(), "id", null, 0, 1, dataGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataGenerator_Name(), ecorePackage.getEString(), "name", null, 0, 1, dataGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdataGenerator_ListOfVariables(), this.getlistOfVariables(), null, "listOfVariables", null, 0, 1, dataGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdataGenerator_ListOfParameters(), this.getlistOfParameters(), null, "listOfParameters", null, 0, 1, dataGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdataGenerator_Math(), this.getmath(), null, "math", null, 0, 1, dataGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfParametersEClass, listOfParameters.class, "listOfParameters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfParameters_Parameter(), this.getparameter(), null, "parameter", null, 0, -1, listOfParameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterEClass, parameter.class, "parameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getparameter_Id(), ecorePackage.getEString(), "id", null, 0, 1, parameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getparameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, parameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getparameter_Value(), ecorePackage.getEString(), "value", null, 0, 1, parameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfVariablesEClass, listOfVariables.class, "listOfVariables", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfVariables_Variable(), this.getvariable(), null, "variable", null, 0, -1, listOfVariables.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableEClass, variable.class, "variable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getvariable_Id(), ecorePackage.getEString(), "id", null, 0, 1, variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getvariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getvariable_Target(), ecorePackage.getEString(), "target", null, 0, 1, variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getvariable_TaskReference(), this.gettask(), null, "taskReference", null, 0, 1, variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getvariable_ModelReference(), this.getmodel(), null, "modelReference", null, 0, 1, variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getvariable_Symbol(), ecorePackage.getEString(), "symbol", null, 0, 1, variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfTasksEClass, listOfTasks.class, "listOfTasks", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfTasks_Task(), this.gettask(), null, "task", null, 0, -1, listOfTasks.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlistOfTasks_RepeatedTask(), this.getrepeatedTask(), null, "RepeatedTask", null, 0, -1, listOfTasks.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(repeatedTaskEClass, repeatedTask.class, "repeatedTask", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getrepeatedTask_SubTask(), this.getsubTask(), null, "subTask", null, 0, -1, repeatedTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getrepeatedTask_ListOfRanges(), this.getlistOfRanges(), null, "listOfRanges", null, 0, 1, repeatedTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getrepeatedTask_ListOfChanges(), this.getlistOfChanges(), null, "listOfChanges", null, 0, 1, repeatedTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfRangesEClass, listOfRanges.class, "listOfRanges", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfRanges_Range(), this.getrange(), null, "range", null, 0, -1, listOfRanges.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rangeEClass, range.class, "range", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(uniformRangeEClass, uniformRange.class, "uniformRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getuniformRange_Start(), ecorePackage.getEString(), "start", null, 0, 1, uniformRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformRange_End(), ecorePackage.getEString(), "end", null, 0, 1, uniformRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformRange_NumberOfPoints(), ecorePackage.getEInt(), "numberOfPoints", null, 0, 1, uniformRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformRange_Type(), ecorePackage.getEString(), "type", null, 0, 1, uniformRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vectorRangeEClass, vectorRange.class, "vectorRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getvectorRange_Value(), this.getvalue(), null, "value", null, 0, -1, vectorRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(valueEClass, value.class, "value", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getvalue_Content(), ecorePackage.getEString(), "content", null, 0, 1, value.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(functionalRangeEClass, functionalRange.class, "functionalRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getfunctionalRange_Id(), ecorePackage.getEString(), "id", null, 0, 1, functionalRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getfunctionalRange_Range(), ecorePackage.getEString(), "range", null, 0, 1, functionalRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunctionalRange_ListOfVariables(), this.getlistOfVariables(), null, "listOfVariables", null, 0, 1, functionalRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunctionalRange_ListOfParameters(), this.getlistOfParameters(), null, "listOfParameters", null, 0, 1, functionalRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunctionalRange_Math(), this.getmath(), null, "math", null, 0, 1, functionalRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractTaskEClass, abstractTask.class, "abstractTask", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getabstractTask_Id(), ecorePackage.getEString(), "id", null, 0, 1, abstractTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getabstractTask_Name(), ecorePackage.getEString(), "name", null, 0, 1, abstractTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subTaskEClass, subTask.class, "subTask", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getsubTask_ModelReference(), this.getmodel(), null, "modelReference", null, 0, 1, subTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getsubTask_Order(), ecorePackage.getEInt(), "order", null, 0, 1, subTask.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taskEClass, task.class, "task", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettask_ModelReference(), this.getmodel(), null, "modelReference", null, 0, 1, task.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettask_SimulationReference(), this.getuniformTimeCourse(), null, "simulationReference", null, 0, 1, task.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfDataGeneratorsEClass, listOfDataGenerators.class, "listOfDataGenerators", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfDataGenerators_Datagenerator(), this.getdataGenerator(), null, "datagenerator", null, 0, -1, listOfDataGenerators.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mathEClass, math.class, "math", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getmath_Xlms(), ecorePackage.getEString(), "xlms", null, 0, 1, math.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfOutputsEClass, listOfOutputs.class, "listOfOutputs", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfOutputs_Output(), this.getoutput(), null, "output", null, 0, 1, listOfOutputs.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(outputEClass, output.class, "output", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(plot2DEClass, plot2D.class, "plot2D", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getplot2D_Id(), ecorePackage.getEString(), "id", null, 0, 1, plot2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getplot2D_Name(), ecorePackage.getEString(), "name", null, 0, 1, plot2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getplot2D_ListOfCurves(), this.getlistOfCurves(), null, "listOfCurves", null, 0, 1, plot2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(plot3DEClass, plot3D.class, "plot3D", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getplot3D_ListOfSurfaces(), this.getlistOfSurfaces(), null, "listOfSurfaces", null, 0, 1, plot3D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(reportEClass, report.class, "report", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getreport_Id(), ecorePackage.getEString(), "id", null, 0, 1, report.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getreport_Name(), ecorePackage.getEString(), "name", null, 0, 1, report.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getreport_ListOfDataSets(), this.getlistOfDataSets(), null, "listOfDataSets", null, 0, 1, report.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfDataSetsEClass, listOfDataSets.class, "listOfDataSets", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfDataSets_DataSet(), this.getdataSet(), null, "dataSet", null, 0, -1, listOfDataSets.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataSetEClass, dataSet.class, "dataSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdataSet_Label(), ecorePackage.getEString(), "label", null, 0, 1, dataSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataSet_Name(), ecorePackage.getEString(), "name", null, 0, 1, dataSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdataSet_DataReference(), ecorePackage.getEString(), "dataReference", null, 0, 1, dataSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfSurfacesEClass, listOfSurfaces.class, "listOfSurfaces", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getlistOfSurfaces_Id(), ecorePackage.getEString(), "id", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlistOfSurfaces_LogX(), ecorePackage.getEString(), "logX", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlistOfSurfaces_LogY(), ecorePackage.getEString(), "logY", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlistOfSurfaces_LogZ(), ecorePackage.getEString(), "logZ", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlistOfSurfaces_XDataReference(), ecorePackage.getEString(), "xDataReference", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlistOfSurfaces_YDataReference(), ecorePackage.getEString(), "yDataReference", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlistOfSurfaces_ZDataReference(), ecorePackage.getEString(), "zDataReference", null, 0, 1, listOfSurfaces.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfCurvesEClass, listOfCurves.class, "listOfCurves", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfCurves_Curve(), this.getcurve(), null, "curve", null, 0, -1, listOfCurves.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(curveEClass, curve.class, "curve", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getcurve_Id(), ecorePackage.getEString(), "id", null, 0, 1, curve.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcurve_LogX(), ecorePackage.getEString(), "logX", null, 0, 1, curve.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcurve_LogY(), ecorePackage.getEString(), "logY", null, 0, 1, curve.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcurve_XDataReference(), ecorePackage.getEString(), "xDataReference", null, 0, 1, curve.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcurve_YDataReference(), ecorePackage.getEString(), "yDataReference", null, 0, 1, curve.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfSimulationsEClass, listOfSimulations.class, "listOfSimulations", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfSimulations_Simulation(), this.getsimulation(), null, "simulation", null, 0, -1, listOfSimulations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simulationEClass, simulation.class, "simulation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(uniformTimeCourseEClass, uniformTimeCourse.class, "uniformTimeCourse", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getuniformTimeCourse_Id(), ecorePackage.getEString(), "id", null, 0, 1, uniformTimeCourse.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformTimeCourse_InitialTime(), ecorePackage.getEInt(), "initialTime", null, 0, 1, uniformTimeCourse.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformTimeCourse_OutputStartTime(), ecorePackage.getEInt(), "outputStartTime", null, 0, 1, uniformTimeCourse.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformTimeCourse_OutputEndTime(), ecorePackage.getEInt(), "outputEndTime", null, 0, 1, uniformTimeCourse.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getuniformTimeCourse_NumberOfPoints(), ecorePackage.getEInt(), "numberOfPoints", null, 0, 1, uniformTimeCourse.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getuniformTimeCourse_Algorithm(), this.getalgorithm(), null, "algorithm", null, 0, 1, uniformTimeCourse.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(oneStepEClass, oneStep.class, "oneStep", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getoneStep_Step(), ecorePackage.getEString(), "step", null, 0, 1, oneStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(algorithmEClass, algorithm.class, "algorithm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getalgorithm_KisaoID(), ecorePackage.getEString(), "kisaoID", null, 0, 1, algorithm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getalgorithm_ListOfAlgorithmParameters(), this.getlistOfAlgorithmParameters(), null, "ListOfAlgorithmParameters", null, 0, 1, algorithm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listOfAlgorithmParametersEClass, listOfAlgorithmParameters.class, "listOfAlgorithmParameters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlistOfAlgorithmParameters_AlgorithmParameter(), this.getalgorithmParameter(), null, "AlgorithmParameter", null, 0, -1, listOfAlgorithmParameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(algorithmParameterEClass, algorithmParameter.class, "algorithmParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getalgorithmParameter_KisaoID(), ecorePackage.getEString(), "kisaoID", null, 0, 1, algorithmParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getalgorithmParameter_Value(), ecorePackage.getEString(), "value", null, 0, 1, algorithmParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(functionEEnum, Function.class, "Function");
    addEEnumLiteral(functionEEnum, Function.MIN);
    addEEnumLiteral(functionEEnum, Function.MAX);
    addEEnumLiteral(functionEEnum, Function.EXP);
    addEEnumLiteral(functionEEnum, Function.INVERSE);
    addEEnumLiteral(functionEEnum, Function.SIN);
    addEEnumLiteral(functionEEnum, Function.COS);
    addEEnumLiteral(functionEEnum, Function.TAN);
    addEEnumLiteral(functionEEnum, Function.FACTORIAL);
    addEEnumLiteral(functionEEnum, Function.LOG);

    initEEnum(levelsEEnum, Levels.class, "Levels");
    addEEnumLiteral(levelsEEnum, Levels.HIGH);
    addEEnumLiteral(levelsEEnum, Levels.MEDIUM);
    addEEnumLiteral(levelsEEnum, Levels.LOW);

    initEEnum(expressionEEnum, Expression.class, "Expression");
    addEEnumLiteral(expressionEEnum, Expression.TRUE);
    addEEnumLiteral(expressionEEnum, Expression.FALSE);

    initEEnum(linksEEnum, Links.class, "Links");
    addEEnumLiteral(linksEEnum, Links.IS);
    addEEnumLiteral(linksEEnum, Links.OCCURS);
    addEEnumLiteral(linksEEnum, Links.TO);
    addEEnumLiteral(linksEEnum, Links.IN);

    initEEnum(temporalEEnum, Temporal.class, "Temporal");
    addEEnumLiteral(temporalEEnum, Temporal.PRECEDES);
    addEEnumLiteral(temporalEEnum, Temporal.BETWEEN);
    addEEnumLiteral(temporalEEnum, Temporal.EVENTUALLY);
    addEEnumLiteral(temporalEEnum, Temporal.ALWAYS);
    addEEnumLiteral(temporalEEnum, Temporal.BEFORE);
    addEEnumLiteral(temporalEEnum, Temporal.AFTER);
    addEEnumLiteral(temporalEEnum, Temporal.UNTIL);
    addEEnumLiteral(temporalEEnum, Temporal.NEVER);
    addEEnumLiteral(temporalEEnum, Temporal.LEADS);
    addEEnumLiteral(temporalEEnum, Temporal.ABSENT);
    addEEnumLiteral(temporalEEnum, Temporal.EXISTS);

    initEEnum(logicalEEnum, Logical.class, "Logical");
    addEEnumLiteral(logicalEEnum, Logical.AND);
    addEEnumLiteral(logicalEEnum, Logical.OR);
    addEEnumLiteral(logicalEEnum, Logical.NOT);

    initEEnum(coherenceEEnum, Coherence.class, "Coherence");
    addEEnumLiteral(coherenceEEnum, Coherence.EXPLAIN);
    addEEnumLiteral(coherenceEEnum, Coherence.ANALOGOUS);
    addEEnumLiteral(coherenceEEnum, Coherence.DATA);
    addEEnumLiteral(coherenceEEnum, Coherence.CONTRADICT);

    // Create resource
    createResource(eNS_URI);
  }

} //SedmlPackageImpl
