/**
 * generated by Xtext 2.12.0
 */
package tr.edu.metu.ceng.megamodel.sedml.sedml.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import tr.edu.metu.ceng.megamodel.sedml.sedml.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see tr.edu.metu.ceng.megamodel.sedml.sedml.SedmlPackage
 * @generated
 */
public class SedmlAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static SedmlPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SedmlAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = SedmlPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SedmlSwitch<Adapter> modelSwitch =
    new SedmlSwitch<Adapter>()
    {
      @Override
      public Adapter caseSEDBase(SEDBase object)
      {
        return createSEDBaseAdapter();
      }
      @Override
      public Adapter casechange(change object)
      {
        return createchangeAdapter();
      }
      @Override
      public Adapter casetarget(target object)
      {
        return createtargetAdapter();
      }
      @Override
      public Adapter casechangeAttribute(changeAttribute object)
      {
        return createchangeAttributeAdapter();
      }
      @Override
      public Adapter casecomputeChange(computeChange object)
      {
        return createcomputeChangeAdapter();
      }
      @Override
      public Adapter caseaddXML(addXML object)
      {
        return createaddXMLAdapter();
      }
      @Override
      public Adapter casechangeXML(changeXML object)
      {
        return createchangeXMLAdapter();
      }
      @Override
      public Adapter casenewXML(newXML object)
      {
        return createnewXMLAdapter();
      }
      @Override
      public Adapter casesedML(sedML object)
      {
        return createsedMLAdapter();
      }
      @Override
      public Adapter caselistOfDataDescriptions(listOfDataDescriptions object)
      {
        return createlistOfDataDescriptionsAdapter();
      }
      @Override
      public Adapter casedataDescription(dataDescription object)
      {
        return createdataDescriptionAdapter();
      }
      @Override
      public Adapter casedimensionDescription(dimensionDescription object)
      {
        return createdimensionDescriptionAdapter();
      }
      @Override
      public Adapter caselistOfDataSources(listOfDataSources object)
      {
        return createlistOfDataSourcesAdapter();
      }
      @Override
      public Adapter casedataSource(dataSource object)
      {
        return createdataSourceAdapter();
      }
      @Override
      public Adapter caselistOfDataSlices(listOfDataSlices object)
      {
        return createlistOfDataSlicesAdapter();
      }
      @Override
      public Adapter caseslice(slice object)
      {
        return createsliceAdapter();
      }
      @Override
      public Adapter caselistOfHypotheses(listOfHypotheses object)
      {
        return createlistOfHypothesesAdapter();
      }
      @Override
      public Adapter casehypothesis(hypothesis object)
      {
        return createhypothesisAdapter();
      }
      @Override
      public Adapter caseRelationalQuery(RelationalQuery object)
      {
        return createRelationalQueryAdapter();
      }
      @Override
      public Adapter caseQuery1(Query1 object)
      {
        return createQuery1Adapter();
      }
      @Override
      public Adapter caseQuery2(Query2 object)
      {
        return createQuery2Adapter();
      }
      @Override
      public Adapter caseQuery3(Query3 object)
      {
        return createQuery3Adapter();
      }
      @Override
      public Adapter caseCoherenceLink(CoherenceLink object)
      {
        return createCoherenceLinkAdapter();
      }
      @Override
      public Adapter caseMechHypothesis(MechHypothesis object)
      {
        return createMechHypothesisAdapter();
      }
      @Override
      public Adapter caseEvidence(Evidence object)
      {
        return createEvidenceAdapter();
      }
      @Override
      public Adapter caseTemporalPattern(TemporalPattern object)
      {
        return createTemporalPatternAdapter();
      }
      @Override
      public Adapter caseCondition(Condition object)
      {
        return createConditionAdapter();
      }
      @Override
      public Adapter caseEvent(Event object)
      {
        return createEventAdapter();
      }
      @Override
      public Adapter caseSimultaneous(Simultaneous object)
      {
        return createSimultaneousAdapter();
      }
      @Override
      public Adapter caseDispersed(Dispersed object)
      {
        return createDispersedAdapter();
      }
      @Override
      public Adapter caselistOfModels(listOfModels object)
      {
        return createlistOfModelsAdapter();
      }
      @Override
      public Adapter casemodel(model object)
      {
        return createmodelAdapter();
      }
      @Override
      public Adapter caselistOfChanges(listOfChanges object)
      {
        return createlistOfChangesAdapter();
      }
      @Override
      public Adapter casedataGenerator(dataGenerator object)
      {
        return createdataGeneratorAdapter();
      }
      @Override
      public Adapter caselistOfParameters(listOfParameters object)
      {
        return createlistOfParametersAdapter();
      }
      @Override
      public Adapter caseparameter(parameter object)
      {
        return createparameterAdapter();
      }
      @Override
      public Adapter caselistOfVariables(listOfVariables object)
      {
        return createlistOfVariablesAdapter();
      }
      @Override
      public Adapter casevariable(variable object)
      {
        return createvariableAdapter();
      }
      @Override
      public Adapter caselistOfTasks(listOfTasks object)
      {
        return createlistOfTasksAdapter();
      }
      @Override
      public Adapter caserepeatedTask(repeatedTask object)
      {
        return createrepeatedTaskAdapter();
      }
      @Override
      public Adapter caselistOfRanges(listOfRanges object)
      {
        return createlistOfRangesAdapter();
      }
      @Override
      public Adapter caserange(range object)
      {
        return createrangeAdapter();
      }
      @Override
      public Adapter caseuniformRange(uniformRange object)
      {
        return createuniformRangeAdapter();
      }
      @Override
      public Adapter casevectorRange(vectorRange object)
      {
        return createvectorRangeAdapter();
      }
      @Override
      public Adapter casevalue(value object)
      {
        return createvalueAdapter();
      }
      @Override
      public Adapter casefunctionalRange(functionalRange object)
      {
        return createfunctionalRangeAdapter();
      }
      @Override
      public Adapter caseabstractTask(abstractTask object)
      {
        return createabstractTaskAdapter();
      }
      @Override
      public Adapter casesubTask(subTask object)
      {
        return createsubTaskAdapter();
      }
      @Override
      public Adapter casetask(task object)
      {
        return createtaskAdapter();
      }
      @Override
      public Adapter caselistOfDataGenerators(listOfDataGenerators object)
      {
        return createlistOfDataGeneratorsAdapter();
      }
      @Override
      public Adapter casemath(math object)
      {
        return createmathAdapter();
      }
      @Override
      public Adapter caselistOfOutputs(listOfOutputs object)
      {
        return createlistOfOutputsAdapter();
      }
      @Override
      public Adapter caseoutput(output object)
      {
        return createoutputAdapter();
      }
      @Override
      public Adapter caseplot2D(plot2D object)
      {
        return createplot2DAdapter();
      }
      @Override
      public Adapter caseplot3D(plot3D object)
      {
        return createplot3DAdapter();
      }
      @Override
      public Adapter casereport(report object)
      {
        return createreportAdapter();
      }
      @Override
      public Adapter caselistOfDataSets(listOfDataSets object)
      {
        return createlistOfDataSetsAdapter();
      }
      @Override
      public Adapter casedataSet(dataSet object)
      {
        return createdataSetAdapter();
      }
      @Override
      public Adapter caselistOfSurfaces(listOfSurfaces object)
      {
        return createlistOfSurfacesAdapter();
      }
      @Override
      public Adapter caselistOfCurves(listOfCurves object)
      {
        return createlistOfCurvesAdapter();
      }
      @Override
      public Adapter casecurve(curve object)
      {
        return createcurveAdapter();
      }
      @Override
      public Adapter caselistOfSimulations(listOfSimulations object)
      {
        return createlistOfSimulationsAdapter();
      }
      @Override
      public Adapter casesimulation(simulation object)
      {
        return createsimulationAdapter();
      }
      @Override
      public Adapter caseuniformTimeCourse(uniformTimeCourse object)
      {
        return createuniformTimeCourseAdapter();
      }
      @Override
      public Adapter caseoneStep(oneStep object)
      {
        return createoneStepAdapter();
      }
      @Override
      public Adapter casealgorithm(algorithm object)
      {
        return createalgorithmAdapter();
      }
      @Override
      public Adapter caselistOfAlgorithmParameters(listOfAlgorithmParameters object)
      {
        return createlistOfAlgorithmParametersAdapter();
      }
      @Override
      public Adapter casealgorithmParameter(algorithmParameter object)
      {
        return createalgorithmParameterAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.SEDBase <em>SED Base</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.SEDBase
   * @generated
   */
  public Adapter createSEDBaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.change <em>change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.change
   * @generated
   */
  public Adapter createchangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.target <em>target</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.target
   * @generated
   */
  public Adapter createtargetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.changeAttribute <em>change Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.changeAttribute
   * @generated
   */
  public Adapter createchangeAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.computeChange <em>compute Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.computeChange
   * @generated
   */
  public Adapter createcomputeChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.addXML <em>add XML</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.addXML
   * @generated
   */
  public Adapter createaddXMLAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.changeXML <em>change XML</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.changeXML
   * @generated
   */
  public Adapter createchangeXMLAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.newXML <em>new XML</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.newXML
   * @generated
   */
  public Adapter createnewXMLAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.sedML <em>sed ML</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.sedML
   * @generated
   */
  public Adapter createsedMLAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataDescriptions <em>list Of Data Descriptions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataDescriptions
   * @generated
   */
  public Adapter createlistOfDataDescriptionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.dataDescription <em>data Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.dataDescription
   * @generated
   */
  public Adapter createdataDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.dimensionDescription <em>dimension Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.dimensionDescription
   * @generated
   */
  public Adapter createdimensionDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSources <em>list Of Data Sources</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSources
   * @generated
   */
  public Adapter createlistOfDataSourcesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.dataSource <em>data Source</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.dataSource
   * @generated
   */
  public Adapter createdataSourceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSlices <em>list Of Data Slices</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSlices
   * @generated
   */
  public Adapter createlistOfDataSlicesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.slice <em>slice</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.slice
   * @generated
   */
  public Adapter createsliceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfHypotheses <em>list Of Hypotheses</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfHypotheses
   * @generated
   */
  public Adapter createlistOfHypothesesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.hypothesis <em>hypothesis</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.hypothesis
   * @generated
   */
  public Adapter createhypothesisAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.RelationalQuery <em>Relational Query</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.RelationalQuery
   * @generated
   */
  public Adapter createRelationalQueryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Query1 <em>Query1</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Query1
   * @generated
   */
  public Adapter createQuery1Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Query2 <em>Query2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Query2
   * @generated
   */
  public Adapter createQuery2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Query3 <em>Query3</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Query3
   * @generated
   */
  public Adapter createQuery3Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.CoherenceLink <em>Coherence Link</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.CoherenceLink
   * @generated
   */
  public Adapter createCoherenceLinkAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.MechHypothesis <em>Mech Hypothesis</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.MechHypothesis
   * @generated
   */
  public Adapter createMechHypothesisAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Evidence <em>Evidence</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Evidence
   * @generated
   */
  public Adapter createEvidenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.TemporalPattern <em>Temporal Pattern</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.TemporalPattern
   * @generated
   */
  public Adapter createTemporalPatternAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Condition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Condition
   * @generated
   */
  public Adapter createConditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Event <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Event
   * @generated
   */
  public Adapter createEventAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Simultaneous <em>Simultaneous</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Simultaneous
   * @generated
   */
  public Adapter createSimultaneousAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.Dispersed <em>Dispersed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.Dispersed
   * @generated
   */
  public Adapter createDispersedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfModels <em>list Of Models</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfModels
   * @generated
   */
  public Adapter createlistOfModelsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.model <em>model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.model
   * @generated
   */
  public Adapter createmodelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfChanges <em>list Of Changes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfChanges
   * @generated
   */
  public Adapter createlistOfChangesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.dataGenerator <em>data Generator</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.dataGenerator
   * @generated
   */
  public Adapter createdataGeneratorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfParameters <em>list Of Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfParameters
   * @generated
   */
  public Adapter createlistOfParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.parameter <em>parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.parameter
   * @generated
   */
  public Adapter createparameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfVariables <em>list Of Variables</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfVariables
   * @generated
   */
  public Adapter createlistOfVariablesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.variable <em>variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.variable
   * @generated
   */
  public Adapter createvariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfTasks <em>list Of Tasks</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfTasks
   * @generated
   */
  public Adapter createlistOfTasksAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.repeatedTask <em>repeated Task</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.repeatedTask
   * @generated
   */
  public Adapter createrepeatedTaskAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfRanges <em>list Of Ranges</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfRanges
   * @generated
   */
  public Adapter createlistOfRangesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.range <em>range</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.range
   * @generated
   */
  public Adapter createrangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.uniformRange <em>uniform Range</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.uniformRange
   * @generated
   */
  public Adapter createuniformRangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.vectorRange <em>vector Range</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.vectorRange
   * @generated
   */
  public Adapter createvectorRangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.value <em>value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.value
   * @generated
   */
  public Adapter createvalueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.functionalRange <em>functional Range</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.functionalRange
   * @generated
   */
  public Adapter createfunctionalRangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.abstractTask <em>abstract Task</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.abstractTask
   * @generated
   */
  public Adapter createabstractTaskAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.subTask <em>sub Task</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.subTask
   * @generated
   */
  public Adapter createsubTaskAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.task <em>task</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.task
   * @generated
   */
  public Adapter createtaskAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataGenerators <em>list Of Data Generators</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataGenerators
   * @generated
   */
  public Adapter createlistOfDataGeneratorsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.math <em>math</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.math
   * @generated
   */
  public Adapter createmathAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfOutputs <em>list Of Outputs</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfOutputs
   * @generated
   */
  public Adapter createlistOfOutputsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.output <em>output</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.output
   * @generated
   */
  public Adapter createoutputAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.plot2D <em>plot2 D</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.plot2D
   * @generated
   */
  public Adapter createplot2DAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.plot3D <em>plot3 D</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.plot3D
   * @generated
   */
  public Adapter createplot3DAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.report <em>report</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.report
   * @generated
   */
  public Adapter createreportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSets <em>list Of Data Sets</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfDataSets
   * @generated
   */
  public Adapter createlistOfDataSetsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.dataSet <em>data Set</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.dataSet
   * @generated
   */
  public Adapter createdataSetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfSurfaces <em>list Of Surfaces</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfSurfaces
   * @generated
   */
  public Adapter createlistOfSurfacesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfCurves <em>list Of Curves</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfCurves
   * @generated
   */
  public Adapter createlistOfCurvesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.curve <em>curve</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.curve
   * @generated
   */
  public Adapter createcurveAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfSimulations <em>list Of Simulations</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfSimulations
   * @generated
   */
  public Adapter createlistOfSimulationsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.simulation <em>simulation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.simulation
   * @generated
   */
  public Adapter createsimulationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.uniformTimeCourse <em>uniform Time Course</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.uniformTimeCourse
   * @generated
   */
  public Adapter createuniformTimeCourseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.oneStep <em>one Step</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.oneStep
   * @generated
   */
  public Adapter createoneStepAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.algorithm <em>algorithm</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.algorithm
   * @generated
   */
  public Adapter createalgorithmAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.listOfAlgorithmParameters <em>list Of Algorithm Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.listOfAlgorithmParameters
   * @generated
   */
  public Adapter createlistOfAlgorithmParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link tr.edu.metu.ceng.megamodel.sedml.sedml.algorithmParameter <em>algorithm Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see tr.edu.metu.ceng.megamodel.sedml.sedml.algorithmParameter
   * @generated
   */
  public Adapter createalgorithmParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //SedmlAdapterFactory
