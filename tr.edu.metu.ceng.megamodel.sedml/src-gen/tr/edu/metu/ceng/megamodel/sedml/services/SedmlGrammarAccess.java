/*
 * generated by Xtext 2.12.0
 */
package tr.edu.metu.ceng.megamodel.sedml.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SedmlGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SEDBaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.SEDBase");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSedMLParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cModelParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDataDescriptionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAbstractTaskParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDataGeneratorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSimulationParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cChangeParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//SEDBase:
		//	parameter | variable | sedML | model | dataDescription | abstractTask | dataGenerator | simulation | change;
		@Override public ParserRule getRule() { return rule; }
		
		//parameter | variable | sedML | model | dataDescription | abstractTask | dataGenerator | simulation | change
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//parameter
		public RuleCall getParameterParserRuleCall_0() { return cParameterParserRuleCall_0; }
		
		//variable
		public RuleCall getVariableParserRuleCall_1() { return cVariableParserRuleCall_1; }
		
		//sedML
		public RuleCall getSedMLParserRuleCall_2() { return cSedMLParserRuleCall_2; }
		
		//model
		public RuleCall getModelParserRuleCall_3() { return cModelParserRuleCall_3; }
		
		//dataDescription
		public RuleCall getDataDescriptionParserRuleCall_4() { return cDataDescriptionParserRuleCall_4; }
		
		//abstractTask
		public RuleCall getAbstractTaskParserRuleCall_5() { return cAbstractTaskParserRuleCall_5; }
		
		//dataGenerator
		public RuleCall getDataGeneratorParserRuleCall_6() { return cDataGeneratorParserRuleCall_6; }
		
		//simulation
		public RuleCall getSimulationParserRuleCall_7() { return cSimulationParserRuleCall_7; }
		
		//change
		public RuleCall getChangeParserRuleCall_8() { return cChangeParserRuleCall_8; }
	}
	public class ChangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.change");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTargetTargetParserRuleCall_2_0 = (RuleCall)cTargetAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//change:
		//	'change' '{' target+=target* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'change' '{' target+=target* '}'
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//target+=target*
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//target
		public RuleCall getTargetTargetParserRuleCall_2_0() { return cTargetTargetParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class TargetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.target");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComputeChangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChangeAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAddXMLParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cChangeXMLParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRemoveXMLParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//target:
		//	computeChange | changeAttribute | addXML | changeXML | removeXML;
		@Override public ParserRule getRule() { return rule; }
		
		//computeChange | changeAttribute | addXML | changeXML | removeXML
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//computeChange
		public RuleCall getComputeChangeParserRuleCall_0() { return cComputeChangeParserRuleCall_0; }
		
		//changeAttribute
		public RuleCall getChangeAttributeParserRuleCall_1() { return cChangeAttributeParserRuleCall_1; }
		
		//addXML
		public RuleCall getAddXMLParserRuleCall_2() { return cAddXMLParserRuleCall_2; }
		
		//changeXML
		public RuleCall getChangeXMLParserRuleCall_3() { return cChangeXMLParserRuleCall_3; }
		
		//removeXML
		public RuleCall getRemoveXMLParserRuleCall_4() { return cRemoveXMLParserRuleCall_4; }
	}
	public class RemoveXMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.removeXML");
		private final Keyword cRemoveXMLKeyword = (Keyword)rule.eContents().get(1);
		
		//removeXML:
		//	'removeXML';
		@Override public ParserRule getRule() { return rule; }
		
		//'removeXML'
		public Keyword getRemoveXMLKeyword() { return cRemoveXMLKeyword; }
	}
	public class ChangeAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.changeAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNewValueKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNewValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNewValueSTRINGTerminalRuleCall_4_0 = (RuleCall)cNewValueAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//changeAttribute:
		//	'changeAttribute' '{' 'newValue' ':' newValue=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'changeAttribute' '{' 'newValue' ':' newValue=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'changeAttribute'
		public Keyword getChangeAttributeKeyword_0() { return cChangeAttributeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'newValue'
		public Keyword getNewValueKeyword_2() { return cNewValueKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//newValue=STRING
		public Assignment getNewValueAssignment_4() { return cNewValueAssignment_4; }
		
		//STRING
		public RuleCall getNewValueSTRINGTerminalRuleCall_4_0() { return cNewValueSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ComputeChangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.computeChange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComputeChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMathKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMathAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMathMathParserRuleCall_4_0 = (RuleCall)cMathAssignment_4.eContents().get(0);
		private final Assignment cListOfVariablesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cListOfVariablesListOfVariablesParserRuleCall_5_0 = (RuleCall)cListOfVariablesAssignment_5.eContents().get(0);
		private final Assignment cListOfParametersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cListOfParametersListOfParametersParserRuleCall_6_0 = (RuleCall)cListOfParametersAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//computeChange:
		//	'computeChange' '{' 'math' ':' math=math listOfVariables=listOfVariables listOfParameters=listOfParameters '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'computeChange' '{' 'math' ':' math=math listOfVariables=listOfVariables listOfParameters=listOfParameters '}'
		public Group getGroup() { return cGroup; }
		
		//'computeChange'
		public Keyword getComputeChangeKeyword_0() { return cComputeChangeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'math'
		public Keyword getMathKeyword_2() { return cMathKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//math=math
		public Assignment getMathAssignment_4() { return cMathAssignment_4; }
		
		//math
		public RuleCall getMathMathParserRuleCall_4_0() { return cMathMathParserRuleCall_4_0; }
		
		//listOfVariables=listOfVariables
		public Assignment getListOfVariablesAssignment_5() { return cListOfVariablesAssignment_5; }
		
		//listOfVariables
		public RuleCall getListOfVariablesListOfVariablesParserRuleCall_5_0() { return cListOfVariablesListOfVariablesParserRuleCall_5_0; }
		
		//listOfParameters=listOfParameters
		public Assignment getListOfParametersAssignment_6() { return cListOfParametersAssignment_6; }
		
		//listOfParameters
		public RuleCall getListOfParametersListOfParametersParserRuleCall_6_0() { return cListOfParametersListOfParametersParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class AddXMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.addXML");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddXMLKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewXMLAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewXMLNewXMLParserRuleCall_2_0 = (RuleCall)cNewXMLAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//addXML:
		//	'addXML' '{' newXML+=newXML* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'addXML' '{' newXML+=newXML* '}'
		public Group getGroup() { return cGroup; }
		
		//'addXML'
		public Keyword getAddXMLKeyword_0() { return cAddXMLKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//newXML+=newXML*
		public Assignment getNewXMLAssignment_2() { return cNewXMLAssignment_2; }
		
		//newXML
		public RuleCall getNewXMLNewXMLParserRuleCall_2_0() { return cNewXMLNewXMLParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ChangeXMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.changeXML");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeXMLKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewXMLAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewXMLNewXMLParserRuleCall_2_0 = (RuleCall)cNewXMLAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//changeXML:
		//	'changeXML' '{' newXML+=newXML* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'changeXML' '{' newXML+=newXML* '}'
		public Group getGroup() { return cGroup; }
		
		//'changeXML'
		public Keyword getChangeXMLKeyword_0() { return cChangeXMLKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//newXML+=newXML*
		public Assignment getNewXMLAssignment_2() { return cNewXMLAssignment_2; }
		
		//newXML
		public RuleCall getNewXMLNewXMLParserRuleCall_2_0() { return cNewXMLNewXMLParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class NewXMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.newXML");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNewXMLKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAnyXMLKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnyXMLAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnyXMLSTRINGTerminalRuleCall_4_0 = (RuleCall)cAnyXMLAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//newXML:
		//	'newXML' '{' 'anyXML' ':' anyXML=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'newXML' '{' 'anyXML' ':' anyXML=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'newXML'
		public Keyword getNewXMLKeyword_0() { return cNewXMLKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'anyXML'
		public Keyword getAnyXMLKeyword_2() { return cAnyXMLKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//anyXML=STRING
		public Assignment getAnyXMLAssignment_4() { return cAnyXMLAssignment_4; }
		
		//STRING
		public RuleCall getAnyXMLSTRINGTerminalRuleCall_4_0() { return cAnyXMLSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SedMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.sedML");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVersionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVersionINTTerminalRuleCall_0_0 = (RuleCall)cVersionAssignment_0.eContents().get(0);
		private final Assignment cLevelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLevelINTTerminalRuleCall_1_0 = (RuleCall)cLevelAssignment_1.eContents().get(0);
		private final Assignment cListOfHypothesesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cListOfHypothesesListOfHypothesesParserRuleCall_2_0 = (RuleCall)cListOfHypothesesAssignment_2.eContents().get(0);
		private final Assignment cListOfDataDescriptionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cListOfDataDescriptionsListOfDataDescriptionsParserRuleCall_3_0 = (RuleCall)cListOfDataDescriptionsAssignment_3.eContents().get(0);
		private final Assignment cListOfSimulationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cListOfSimulationsListOfSimulationsParserRuleCall_4_0 = (RuleCall)cListOfSimulationsAssignment_4.eContents().get(0);
		private final Assignment cListOfModelsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cListOfModelsListOfModelsParserRuleCall_5_0 = (RuleCall)cListOfModelsAssignment_5.eContents().get(0);
		private final Assignment cListOfTasksAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cListOfTasksListOfTasksParserRuleCall_6_0 = (RuleCall)cListOfTasksAssignment_6.eContents().get(0);
		private final Assignment cListOfDataGeneratorsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cListOfDataGeneratorsListOfDataGeneratorsParserRuleCall_7_0 = (RuleCall)cListOfDataGeneratorsAssignment_7.eContents().get(0);
		private final Assignment cListOfOutputsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cListOfOutputsListOfOutputsParserRuleCall_8_0 = (RuleCall)cListOfOutputsAssignment_8.eContents().get(0);
		
		//sedML:
		//	version=INT level=INT listOfHypotheses=listOfHypotheses listOfDataDescriptions=listOfDataDescriptions
		//	listOfSimulations=listOfSimulations listOfModels=listOfModels listOfTasks=listOfTasks
		//	listOfDataGenerators=listOfDataGenerators listOfOutputs=listOfOutputs;
		@Override public ParserRule getRule() { return rule; }
		
		//version=INT level=INT listOfHypotheses=listOfHypotheses listOfDataDescriptions=listOfDataDescriptions
		//listOfSimulations=listOfSimulations listOfModels=listOfModels listOfTasks=listOfTasks
		//listOfDataGenerators=listOfDataGenerators listOfOutputs=listOfOutputs
		public Group getGroup() { return cGroup; }
		
		//version=INT
		public Assignment getVersionAssignment_0() { return cVersionAssignment_0; }
		
		//INT
		public RuleCall getVersionINTTerminalRuleCall_0_0() { return cVersionINTTerminalRuleCall_0_0; }
		
		//level=INT
		public Assignment getLevelAssignment_1() { return cLevelAssignment_1; }
		
		//INT
		public RuleCall getLevelINTTerminalRuleCall_1_0() { return cLevelINTTerminalRuleCall_1_0; }
		
		//listOfHypotheses=listOfHypotheses
		public Assignment getListOfHypothesesAssignment_2() { return cListOfHypothesesAssignment_2; }
		
		//listOfHypotheses
		public RuleCall getListOfHypothesesListOfHypothesesParserRuleCall_2_0() { return cListOfHypothesesListOfHypothesesParserRuleCall_2_0; }
		
		//listOfDataDescriptions=listOfDataDescriptions
		public Assignment getListOfDataDescriptionsAssignment_3() { return cListOfDataDescriptionsAssignment_3; }
		
		//listOfDataDescriptions
		public RuleCall getListOfDataDescriptionsListOfDataDescriptionsParserRuleCall_3_0() { return cListOfDataDescriptionsListOfDataDescriptionsParserRuleCall_3_0; }
		
		//listOfSimulations=listOfSimulations
		public Assignment getListOfSimulationsAssignment_4() { return cListOfSimulationsAssignment_4; }
		
		//listOfSimulations
		public RuleCall getListOfSimulationsListOfSimulationsParserRuleCall_4_0() { return cListOfSimulationsListOfSimulationsParserRuleCall_4_0; }
		
		//listOfModels=listOfModels
		public Assignment getListOfModelsAssignment_5() { return cListOfModelsAssignment_5; }
		
		//listOfModels
		public RuleCall getListOfModelsListOfModelsParserRuleCall_5_0() { return cListOfModelsListOfModelsParserRuleCall_5_0; }
		
		//listOfTasks=listOfTasks
		public Assignment getListOfTasksAssignment_6() { return cListOfTasksAssignment_6; }
		
		//listOfTasks
		public RuleCall getListOfTasksListOfTasksParserRuleCall_6_0() { return cListOfTasksListOfTasksParserRuleCall_6_0; }
		
		//listOfDataGenerators=listOfDataGenerators
		public Assignment getListOfDataGeneratorsAssignment_7() { return cListOfDataGeneratorsAssignment_7; }
		
		//listOfDataGenerators
		public RuleCall getListOfDataGeneratorsListOfDataGeneratorsParserRuleCall_7_0() { return cListOfDataGeneratorsListOfDataGeneratorsParserRuleCall_7_0; }
		
		//listOfOutputs=listOfOutputs
		public Assignment getListOfOutputsAssignment_8() { return cListOfOutputsAssignment_8; }
		
		//listOfOutputs
		public RuleCall getListOfOutputsListOfOutputsParserRuleCall_8_0() { return cListOfOutputsListOfOutputsParserRuleCall_8_0; }
	}
	public class ListOfDataDescriptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfDataDescriptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfDataDescriptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataDescriptionDataDescriptionParserRuleCall_2_0 = (RuleCall)cDataDescriptionAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfDataDescriptions:
		//	'listOfDataDescriptions' '{' dataDescription+=dataDescription* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfDataDescriptions' '{' dataDescription+=dataDescription* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfDataDescriptions'
		public Keyword getListOfDataDescriptionsKeyword_0() { return cListOfDataDescriptionsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//dataDescription+=dataDescription*
		public Assignment getDataDescriptionAssignment_2() { return cDataDescriptionAssignment_2; }
		
		//dataDescription
		public RuleCall getDataDescriptionDataDescriptionParserRuleCall_2_0() { return cDataDescriptionDataDescriptionParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class DataDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.dataDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cFormatKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cFormatAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cFormatSTRINGTerminalRuleCall_10_0 = (RuleCall)cFormatAssignment_10.eContents().get(0);
		private final Keyword cSourceKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cSourceAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cSourceSTRINGTerminalRuleCall_13_0 = (RuleCall)cSourceAssignment_13.eContents().get(0);
		private final Assignment cListOfDataSourcesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cListOfDataSourcesListOfDataSourcesParserRuleCall_14_0 = (RuleCall)cListOfDataSourcesAssignment_14.eContents().get(0);
		private final Assignment cDimensionDescriptionAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cDimensionDescriptionDimensionDescriptionParserRuleCall_15_0 = (RuleCall)cDimensionDescriptionAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//dataDescription:
		//	'dataDescription' '{' 'id' ':' id=ID 'name' ':' name=STRING 'format' ':' format=STRING 'source' ':' source=STRING
		//	listOfDataSources=listOfDataSources dimensionDescription=dimensionDescription '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dataDescription' '{' 'id' ':' id=ID 'name' ':' name=STRING 'format' ':' format=STRING 'source' ':' source=STRING
		//listOfDataSources=listOfDataSources dimensionDescription=dimensionDescription '}'
		public Group getGroup() { return cGroup; }
		
		//'dataDescription'
		public Keyword getDataDescriptionKeyword_0() { return cDataDescriptionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//'format'
		public Keyword getFormatKeyword_8() { return cFormatKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//format=STRING
		public Assignment getFormatAssignment_10() { return cFormatAssignment_10; }
		
		//STRING
		public RuleCall getFormatSTRINGTerminalRuleCall_10_0() { return cFormatSTRINGTerminalRuleCall_10_0; }
		
		//'source'
		public Keyword getSourceKeyword_11() { return cSourceKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//source=STRING
		public Assignment getSourceAssignment_13() { return cSourceAssignment_13; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_13_0() { return cSourceSTRINGTerminalRuleCall_13_0; }
		
		//listOfDataSources=listOfDataSources
		public Assignment getListOfDataSourcesAssignment_14() { return cListOfDataSourcesAssignment_14; }
		
		//listOfDataSources
		public RuleCall getListOfDataSourcesListOfDataSourcesParserRuleCall_14_0() { return cListOfDataSourcesListOfDataSourcesParserRuleCall_14_0; }
		
		//dimensionDescription=dimensionDescription
		public Assignment getDimensionDescriptionAssignment_15() { return cDimensionDescriptionAssignment_15; }
		
		//dimensionDescription
		public RuleCall getDimensionDescriptionDimensionDescriptionParserRuleCall_15_0() { return cDimensionDescriptionDimensionDescriptionParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class DimensionDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.dimensionDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDimensionDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cXmlnsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cXmlnsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXmlnsSTRINGTerminalRuleCall_4_0 = (RuleCall)cXmlnsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//dimensionDescription:
		//	'dimensionDescription' '{' 'xmlns' ':' xmlns=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dimensionDescription' '{' 'xmlns' ':' xmlns=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'dimensionDescription'
		public Keyword getDimensionDescriptionKeyword_0() { return cDimensionDescriptionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'xmlns'
		public Keyword getXmlnsKeyword_2() { return cXmlnsKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//xmlns=STRING
		public Assignment getXmlnsAssignment_4() { return cXmlnsAssignment_4; }
		
		//STRING
		public RuleCall getXmlnsSTRINGTerminalRuleCall_4_0() { return cXmlnsSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ListOfDataSourcesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfDataSources");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfDataSourcesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataSourceDataSourceParserRuleCall_2_0 = (RuleCall)cDataSourceAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfDataSources:
		//	'listOfDataSources' '{' dataSource+=dataSource* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfDataSources' '{' dataSource+=dataSource* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfDataSources'
		public Keyword getListOfDataSourcesKeyword_0() { return cListOfDataSourcesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//dataSource+=dataSource*
		public Assignment getDataSourceAssignment_2() { return cDataSourceAssignment_2; }
		
		//dataSource
		public RuleCall getDataSourceDataSourceParserRuleCall_2_0() { return cDataSourceDataSourceParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class DataSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.dataSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataSourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cIndexSetKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cIndexSetAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cIndexSetSTRINGTerminalRuleCall_10_0 = (RuleCall)cIndexSetAssignment_10.eContents().get(0);
		private final Assignment cListOfSlicesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cListOfSlicesListOfDataSlicesParserRuleCall_11_0 = (RuleCall)cListOfSlicesAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//dataSource:
		//	'dataSource' '{' 'id' ':' id=ID 'name' ':' name=STRING 'indexSet' ':' indexSet=STRING listOfSlices=listOfDataSlices
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dataSource' '{' 'id' ':' id=ID 'name' ':' name=STRING 'indexSet' ':' indexSet=STRING listOfSlices=listOfDataSlices '}'
		public Group getGroup() { return cGroup; }
		
		//'dataSource'
		public Keyword getDataSourceKeyword_0() { return cDataSourceKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//'indexSet'
		public Keyword getIndexSetKeyword_8() { return cIndexSetKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//indexSet=STRING
		public Assignment getIndexSetAssignment_10() { return cIndexSetAssignment_10; }
		
		//STRING
		public RuleCall getIndexSetSTRINGTerminalRuleCall_10_0() { return cIndexSetSTRINGTerminalRuleCall_10_0; }
		
		//listOfSlices=listOfDataSlices
		public Assignment getListOfSlicesAssignment_11() { return cListOfSlicesAssignment_11; }
		
		//listOfDataSlices
		public RuleCall getListOfSlicesListOfDataSlicesParserRuleCall_11_0() { return cListOfSlicesListOfDataSlicesParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ListOfDataSlicesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfDataSlices");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfDataSlicesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSliceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSliceSliceParserRuleCall_2_0 = (RuleCall)cSliceAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfDataSlices:
		//	'listOfDataSlices' '{' slice+=slice* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfDataSlices' '{' slice+=slice* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfDataSlices'
		public Keyword getListOfDataSlicesKeyword_0() { return cListOfDataSlicesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//slice+=slice*
		public Assignment getSliceAssignment_2() { return cSliceAssignment_2; }
		
		//slice
		public RuleCall getSliceSliceParserRuleCall_2_0() { return cSliceSliceParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class SliceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.slice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSliceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cReferenceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReferenceidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReferenceidIDTerminalRuleCall_4_0 = (RuleCall)cReferenceidAssignment_4.eContents().get(0);
		private final Keyword cValueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSTRINGTerminalRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//slice:
		//	'slice' '{' 'reference' ':' referenceid=ID 'value' ':' value=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'slice' '{' 'reference' ':' referenceid=ID 'value' ':' value=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'slice'
		public Keyword getSliceKeyword_0() { return cSliceKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'reference'
		public Keyword getReferenceKeyword_2() { return cReferenceKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//referenceid=ID
		public Assignment getReferenceidAssignment_4() { return cReferenceidAssignment_4; }
		
		//ID
		public RuleCall getReferenceidIDTerminalRuleCall_4_0() { return cReferenceidIDTerminalRuleCall_4_0; }
		
		//'value'
		public Keyword getValueKeyword_5() { return cValueKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//value=STRING
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_7_0() { return cValueSTRINGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ListOfHypothesesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfHypotheses");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfHypothesesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHypothesisAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHypothesisHypothesisParserRuleCall_2_0 = (RuleCall)cHypothesisAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfHypotheses:
		//	'listOfHypotheses' '{' hypothesis+=hypothesis* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfHypotheses' '{' hypothesis+=hypothesis* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfHypotheses'
		public Keyword getListOfHypothesesKeyword_0() { return cListOfHypothesesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//hypothesis+=hypothesis*
		public Assignment getHypothesisAssignment_2() { return cHypothesisAssignment_2; }
		
		//hypothesis
		public RuleCall getHypothesisHypothesisParserRuleCall_2_0() { return cHypothesisHypothesisParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class HypothesisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.hypothesis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHypothesesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cMechanisticKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cHypothesesKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMechHypothesisAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cMechHypothesisMechHypothesisParserRuleCall_2_3_0 = (RuleCall)cMechHypothesisAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEvidenceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cEvidencesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cEvidencesEvidenceParserRuleCall_3_2_0 = (RuleCall)cEvidencesAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCoherenceKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cModelKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cCoherenceLinksAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cCoherenceLinksCoherenceLinkParserRuleCall_4_3_0 = (RuleCall)cCoherenceLinksAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRelationalKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cHypothesesKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cRelHypothesisAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cRelHypothesisRelationalQueryParserRuleCall_5_3_0 = (RuleCall)cRelHypothesisAssignment_5_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//hypothesis:
		//	'hypotheses' '{' ('mechanistic' 'hypotheses' '{' mechHypothesis+=MechHypothesis* '}')? ('evidence' '{'
		//	evidences+=Evidence* '}')? ('coherence' 'model' '{' coherenceLinks+=CoherenceLink* '}')? ('relational' 'hypotheses'
		//	'{' relHypothesis+=RelationalQuery* '}')? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'hypotheses' '{' ('mechanistic' 'hypotheses' '{' mechHypothesis+=MechHypothesis* '}')? ('evidence' '{'
		//evidences+=Evidence* '}')? ('coherence' 'model' '{' coherenceLinks+=CoherenceLink* '}')? ('relational' 'hypotheses'
		//'{' relHypothesis+=RelationalQuery* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'hypotheses'
		public Keyword getHypothesesKeyword_0() { return cHypothesesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('mechanistic' 'hypotheses' '{' mechHypothesis+=MechHypothesis* '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'mechanistic'
		public Keyword getMechanisticKeyword_2_0() { return cMechanisticKeyword_2_0; }
		
		//'hypotheses'
		public Keyword getHypothesesKeyword_2_1() { return cHypothesesKeyword_2_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_2() { return cLeftCurlyBracketKeyword_2_2; }
		
		//mechHypothesis+=MechHypothesis*
		public Assignment getMechHypothesisAssignment_2_3() { return cMechHypothesisAssignment_2_3; }
		
		//MechHypothesis
		public RuleCall getMechHypothesisMechHypothesisParserRuleCall_2_3_0() { return cMechHypothesisMechHypothesisParserRuleCall_2_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
		
		//('evidence' '{' evidences+=Evidence* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'evidence'
		public Keyword getEvidenceKeyword_3_0() { return cEvidenceKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//evidences+=Evidence*
		public Assignment getEvidencesAssignment_3_2() { return cEvidencesAssignment_3_2; }
		
		//Evidence
		public RuleCall getEvidencesEvidenceParserRuleCall_3_2_0() { return cEvidencesEvidenceParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//('coherence' 'model' '{' coherenceLinks+=CoherenceLink* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'coherence'
		public Keyword getCoherenceKeyword_4_0() { return cCoherenceKeyword_4_0; }
		
		//'model'
		public Keyword getModelKeyword_4_1() { return cModelKeyword_4_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_2() { return cLeftCurlyBracketKeyword_4_2; }
		
		//coherenceLinks+=CoherenceLink*
		public Assignment getCoherenceLinksAssignment_4_3() { return cCoherenceLinksAssignment_4_3; }
		
		//CoherenceLink
		public RuleCall getCoherenceLinksCoherenceLinkParserRuleCall_4_3_0() { return cCoherenceLinksCoherenceLinkParserRuleCall_4_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('relational' 'hypotheses' '{' relHypothesis+=RelationalQuery* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'relational'
		public Keyword getRelationalKeyword_5_0() { return cRelationalKeyword_5_0; }
		
		//'hypotheses'
		public Keyword getHypothesesKeyword_5_1() { return cHypothesesKeyword_5_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_2() { return cLeftCurlyBracketKeyword_5_2; }
		
		//relHypothesis+=RelationalQuery*
		public Assignment getRelHypothesisAssignment_5_3() { return cRelHypothesisAssignment_5_3; }
		
		//RelationalQuery
		public RuleCall getRelHypothesisRelationalQueryParserRuleCall_5_3_0() { return cRelHypothesisRelationalQueryParserRuleCall_5_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RelationalQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.RelationalQuery");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQuery1ParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQuery2ParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cQuery3ParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//RelationalQuery:
		//	Query1 | Query2 | Query3;
		@Override public ParserRule getRule() { return rule; }
		
		//Query1 | Query2 | Query3
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Query1
		public RuleCall getQuery1ParserRuleCall_0() { return cQuery1ParserRuleCall_0; }
		
		//Query2
		public RuleCall getQuery2ParserRuleCall_1() { return cQuery2ParserRuleCall_1; }
		
		//Query3
		public RuleCall getQuery3ParserRuleCall_2() { return cQuery3ParserRuleCall_2; }
	}
	public class Query1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Query1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFactorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFactorIDTerminalRuleCall_1_0 = (RuleCall)cFactorAssignment_1.eContents().get(0);
		private final Assignment cControlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cControlIDTerminalRuleCall_2_0 = (RuleCall)cControlAssignment_2.eContents().get(0);
		private final Keyword cIsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXRangeValueTerminalRuleCall_4_0 = (RuleCall)cXAssignment_4.eContents().get(0);
		private final Keyword cAddedKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRemovedKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInTheRangeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cStart1Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cStart1RangeValueTerminalRuleCall_7_1_0 = (RuleCall)cStart1Assignment_7_1.eContents().get(0);
		private final Keyword cToKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cEnd1Assignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cEnd1RangeValueTerminalRuleCall_7_3_0 = (RuleCall)cEnd1Assignment_7_3.eContents().get(0);
		private final Keyword cThenKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cResponseAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cResponseIDTerminalRuleCall_9_0 = (RuleCall)cResponseAssignment_9.eContents().get(0);
		private final Keyword cIsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cYAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cYRangeValueTerminalRuleCall_11_0 = (RuleCall)cYAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cInTheRangeKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cStart2Assignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cStart2RangeValueTerminalRuleCall_12_1_0 = (RuleCall)cStart2Assignment_12_1.eContents().get(0);
		private final Keyword cToKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Assignment cEnd2Assignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cEnd2RangeValueTerminalRuleCall_12_3_0 = (RuleCall)cEnd2Assignment_12_3.eContents().get(0);
		
		//Query1:
		//	'if' factor=ID? control=ID? 'is' x=rangeValue? 'added'? 'removed'? ('in the range' start1=rangeValue 'to'
		//	end1=rangeValue)? 'then' response=ID 'is' y=rangeValue? ('in the range' start2=rangeValue 'to' end2=rangeValue)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'if' factor=ID? control=ID? 'is' x=rangeValue? 'added'? 'removed'? ('in the range' start1=rangeValue 'to'
		//end1=rangeValue)? 'then' response=ID 'is' y=rangeValue? ('in the range' start2=rangeValue 'to' end2=rangeValue)?
		public Group getGroup() { return cGroup; }
		
		//'if'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//factor=ID?
		public Assignment getFactorAssignment_1() { return cFactorAssignment_1; }
		
		//ID
		public RuleCall getFactorIDTerminalRuleCall_1_0() { return cFactorIDTerminalRuleCall_1_0; }
		
		//control=ID?
		public Assignment getControlAssignment_2() { return cControlAssignment_2; }
		
		//ID
		public RuleCall getControlIDTerminalRuleCall_2_0() { return cControlIDTerminalRuleCall_2_0; }
		
		//'is'
		public Keyword getIsKeyword_3() { return cIsKeyword_3; }
		
		//x=rangeValue?
		public Assignment getXAssignment_4() { return cXAssignment_4; }
		
		//rangeValue
		public RuleCall getXRangeValueTerminalRuleCall_4_0() { return cXRangeValueTerminalRuleCall_4_0; }
		
		//'added'?
		public Keyword getAddedKeyword_5() { return cAddedKeyword_5; }
		
		//'removed'?
		public Keyword getRemovedKeyword_6() { return cRemovedKeyword_6; }
		
		//('in the range' start1=rangeValue 'to' end1=rangeValue)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'in the range'
		public Keyword getInTheRangeKeyword_7_0() { return cInTheRangeKeyword_7_0; }
		
		//start1=rangeValue
		public Assignment getStart1Assignment_7_1() { return cStart1Assignment_7_1; }
		
		//rangeValue
		public RuleCall getStart1RangeValueTerminalRuleCall_7_1_0() { return cStart1RangeValueTerminalRuleCall_7_1_0; }
		
		//'to'
		public Keyword getToKeyword_7_2() { return cToKeyword_7_2; }
		
		//end1=rangeValue
		public Assignment getEnd1Assignment_7_3() { return cEnd1Assignment_7_3; }
		
		//rangeValue
		public RuleCall getEnd1RangeValueTerminalRuleCall_7_3_0() { return cEnd1RangeValueTerminalRuleCall_7_3_0; }
		
		//'then'
		public Keyword getThenKeyword_8() { return cThenKeyword_8; }
		
		//response=ID
		public Assignment getResponseAssignment_9() { return cResponseAssignment_9; }
		
		//ID
		public RuleCall getResponseIDTerminalRuleCall_9_0() { return cResponseIDTerminalRuleCall_9_0; }
		
		//'is'
		public Keyword getIsKeyword_10() { return cIsKeyword_10; }
		
		//y=rangeValue?
		public Assignment getYAssignment_11() { return cYAssignment_11; }
		
		//rangeValue
		public RuleCall getYRangeValueTerminalRuleCall_11_0() { return cYRangeValueTerminalRuleCall_11_0; }
		
		//('in the range' start2=rangeValue 'to' end2=rangeValue)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'in the range'
		public Keyword getInTheRangeKeyword_12_0() { return cInTheRangeKeyword_12_0; }
		
		//start2=rangeValue
		public Assignment getStart2Assignment_12_1() { return cStart2Assignment_12_1; }
		
		//rangeValue
		public RuleCall getStart2RangeValueTerminalRuleCall_12_1_0() { return cStart2RangeValueTerminalRuleCall_12_1_0; }
		
		//'to'
		public Keyword getToKeyword_12_2() { return cToKeyword_12_2; }
		
		//end2=rangeValue
		public Assignment getEnd2Assignment_12_3() { return cEnd2Assignment_12_3; }
		
		//rangeValue
		public RuleCall getEnd2RangeValueTerminalRuleCall_12_3_0() { return cEnd2RangeValueTerminalRuleCall_12_3_0; }
	}
	public class Query2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Query2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompareKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFunction1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFunction1FunctionEnumRuleCall_1_0 = (RuleCall)cFunction1Assignment_1.eContents().get(0);
		private final Assignment cResponse1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cResponse1IDTerminalRuleCall_2_0 = (RuleCall)cResponse1Assignment_2.eContents().get(0);
		private final Assignment cFactor1Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFactor1IDTerminalRuleCall_3_0 = (RuleCall)cFactor1Assignment_3.eContents().get(0);
		private final Keyword cAndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFunction2Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFunction2FunctionEnumRuleCall_5_0 = (RuleCall)cFunction2Assignment_5.eContents().get(0);
		private final Assignment cResponse2Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cResponse2IDTerminalRuleCall_6_0 = (RuleCall)cResponse2Assignment_6.eContents().get(0);
		private final Assignment cFactor2Assignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFactor2IDTerminalRuleCall_7_0 = (RuleCall)cFactor2Assignment_7.eContents().get(0);
		
		//Query2:
		//	'compare' function1=Function? response1=ID? factor1=ID? 'and' function2=Function? response2=ID? factor2=ID?;
		@Override public ParserRule getRule() { return rule; }
		
		//'compare' function1=Function? response1=ID? factor1=ID? 'and' function2=Function? response2=ID? factor2=ID?
		public Group getGroup() { return cGroup; }
		
		//'compare'
		public Keyword getCompareKeyword_0() { return cCompareKeyword_0; }
		
		//function1=Function?
		public Assignment getFunction1Assignment_1() { return cFunction1Assignment_1; }
		
		//Function
		public RuleCall getFunction1FunctionEnumRuleCall_1_0() { return cFunction1FunctionEnumRuleCall_1_0; }
		
		//response1=ID?
		public Assignment getResponse1Assignment_2() { return cResponse1Assignment_2; }
		
		//ID
		public RuleCall getResponse1IDTerminalRuleCall_2_0() { return cResponse1IDTerminalRuleCall_2_0; }
		
		//factor1=ID?
		public Assignment getFactor1Assignment_3() { return cFactor1Assignment_3; }
		
		//ID
		public RuleCall getFactor1IDTerminalRuleCall_3_0() { return cFactor1IDTerminalRuleCall_3_0; }
		
		//'and'
		public Keyword getAndKeyword_4() { return cAndKeyword_4; }
		
		//function2=Function?
		public Assignment getFunction2Assignment_5() { return cFunction2Assignment_5; }
		
		//Function
		public RuleCall getFunction2FunctionEnumRuleCall_5_0() { return cFunction2FunctionEnumRuleCall_5_0; }
		
		//response2=ID?
		public Assignment getResponse2Assignment_6() { return cResponse2Assignment_6; }
		
		//ID
		public RuleCall getResponse2IDTerminalRuleCall_6_0() { return cResponse2IDTerminalRuleCall_6_0; }
		
		//factor2=ID?
		public Assignment getFactor2Assignment_7() { return cFactor2Assignment_7; }
		
		//ID
		public RuleCall getFactor2IDTerminalRuleCall_7_0() { return cFactor2IDTerminalRuleCall_7_0; }
	}
	public class Query3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Query3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cFactor1Assignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cFactor1IDTerminalRuleCall_1_0_0 = (RuleCall)cFactor1Assignment_1_0.eContents().get(0);
		private final Assignment cControl1Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cControl1IDTerminalRuleCall_1_1_0 = (RuleCall)cControl1Assignment_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cAtKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Keyword cLevelKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cLevel2Assignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cLevel2LevelsEnumRuleCall_1_3_2_0 = (RuleCall)cLevel2Assignment_1_3_2.eContents().get(0);
		private final Assignment cX2Assignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cX2RangeValueTerminalRuleCall_1_4_0 = (RuleCall)cX2Assignment_1_4.eContents().get(0);
		private final Keyword cAndKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cResponse1Assignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cResponse1IDTerminalRuleCall_3_0_0 = (RuleCall)cResponse1Assignment_3_0.eContents().get(0);
		private final Keyword cIsKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cAtKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cLevelKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cLevel4Assignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cLevel4LevelsEnumRuleCall_3_2_2_0 = (RuleCall)cLevel4Assignment_3_2_2.eContents().get(0);
		private final Assignment cX4Assignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cX4RangeValueTerminalRuleCall_3_3_0 = (RuleCall)cX4Assignment_3_3.eContents().get(0);
		private final Keyword cAndKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cWhereKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cLevelAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cLevelLevelsEnumRuleCall_5_0_0 = (RuleCall)cLevelAssignment_5_0.eContents().get(0);
		private final Keyword cForKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cFactorAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cFactorIDTerminalRuleCall_5_2_0 = (RuleCall)cFactorAssignment_5_2.eContents().get(0);
		private final Assignment cControlAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cControlIDTerminalRuleCall_5_3_0 = (RuleCall)cControlAssignment_5_3.eContents().get(0);
		private final Assignment cResponseAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cResponseIDTerminalRuleCall_5_4_0 = (RuleCall)cResponseAssignment_5_4.eContents().get(0);
		private final Keyword cIsKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		private final Keyword cInTheRangeKeyword_5_6 = (Keyword)cGroup_5.eContents().get(6);
		private final Assignment cStart1Assignment_5_7 = (Assignment)cGroup_5.eContents().get(7);
		private final RuleCall cStart1RangeValueTerminalRuleCall_5_7_0 = (RuleCall)cStart1Assignment_5_7.eContents().get(0);
		private final Keyword cToKeyword_5_8 = (Keyword)cGroup_5.eContents().get(8);
		private final Assignment cEnd1Assignment_5_9 = (Assignment)cGroup_5.eContents().get(9);
		private final RuleCall cEnd1RangeValueTerminalRuleCall_5_9_0 = (RuleCall)cEnd1Assignment_5_9.eContents().get(0);
		
		//Query3:
		//	'if' (factor1=ID? control1=ID? 'is' ('at' 'level' Level2=Levels)? x2=rangeValue? 'and'?)* 'then' (response1=ID 'is'
		//	('at' 'level' Level4=Levels)? x4=rangeValue? 'and'?)* 'where' (level=Levels 'for' factor=ID? control=ID? response=ID?
		//	'is' 'in the range' start1=rangeValue 'to' end1=rangeValue)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'if' (factor1=ID? control1=ID? 'is' ('at' 'level' Level2=Levels)? x2=rangeValue? 'and'?)* 'then' (response1=ID 'is'
		//('at' 'level' Level4=Levels)? x4=rangeValue? 'and'?)* 'where' (level=Levels 'for' factor=ID? control=ID? response=ID?
		//'is' 'in the range' start1=rangeValue 'to' end1=rangeValue)*
		public Group getGroup() { return cGroup; }
		
		//'if'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//(factor1=ID? control1=ID? 'is' ('at' 'level' Level2=Levels)? x2=rangeValue? 'and'?)*
		public Group getGroup_1() { return cGroup_1; }
		
		//factor1=ID?
		public Assignment getFactor1Assignment_1_0() { return cFactor1Assignment_1_0; }
		
		//ID
		public RuleCall getFactor1IDTerminalRuleCall_1_0_0() { return cFactor1IDTerminalRuleCall_1_0_0; }
		
		//control1=ID?
		public Assignment getControl1Assignment_1_1() { return cControl1Assignment_1_1; }
		
		//ID
		public RuleCall getControl1IDTerminalRuleCall_1_1_0() { return cControl1IDTerminalRuleCall_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2() { return cIsKeyword_1_2; }
		
		//('at' 'level' Level2=Levels)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'at'
		public Keyword getAtKeyword_1_3_0() { return cAtKeyword_1_3_0; }
		
		//'level'
		public Keyword getLevelKeyword_1_3_1() { return cLevelKeyword_1_3_1; }
		
		//Level2=Levels
		public Assignment getLevel2Assignment_1_3_2() { return cLevel2Assignment_1_3_2; }
		
		//Levels
		public RuleCall getLevel2LevelsEnumRuleCall_1_3_2_0() { return cLevel2LevelsEnumRuleCall_1_3_2_0; }
		
		//x2=rangeValue?
		public Assignment getX2Assignment_1_4() { return cX2Assignment_1_4; }
		
		//rangeValue
		public RuleCall getX2RangeValueTerminalRuleCall_1_4_0() { return cX2RangeValueTerminalRuleCall_1_4_0; }
		
		//'and'?
		public Keyword getAndKeyword_1_5() { return cAndKeyword_1_5; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//(response1=ID 'is' ('at' 'level' Level4=Levels)? x4=rangeValue? 'and'?)*
		public Group getGroup_3() { return cGroup_3; }
		
		//response1=ID
		public Assignment getResponse1Assignment_3_0() { return cResponse1Assignment_3_0; }
		
		//ID
		public RuleCall getResponse1IDTerminalRuleCall_3_0_0() { return cResponse1IDTerminalRuleCall_3_0_0; }
		
		//'is'
		public Keyword getIsKeyword_3_1() { return cIsKeyword_3_1; }
		
		//('at' 'level' Level4=Levels)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'at'
		public Keyword getAtKeyword_3_2_0() { return cAtKeyword_3_2_0; }
		
		//'level'
		public Keyword getLevelKeyword_3_2_1() { return cLevelKeyword_3_2_1; }
		
		//Level4=Levels
		public Assignment getLevel4Assignment_3_2_2() { return cLevel4Assignment_3_2_2; }
		
		//Levels
		public RuleCall getLevel4LevelsEnumRuleCall_3_2_2_0() { return cLevel4LevelsEnumRuleCall_3_2_2_0; }
		
		//x4=rangeValue?
		public Assignment getX4Assignment_3_3() { return cX4Assignment_3_3; }
		
		//rangeValue
		public RuleCall getX4RangeValueTerminalRuleCall_3_3_0() { return cX4RangeValueTerminalRuleCall_3_3_0; }
		
		//'and'?
		public Keyword getAndKeyword_3_4() { return cAndKeyword_3_4; }
		
		//'where'
		public Keyword getWhereKeyword_4() { return cWhereKeyword_4; }
		
		//(level=Levels 'for' factor=ID? control=ID? response=ID? 'is' 'in the range' start1=rangeValue 'to' end1=rangeValue)*
		public Group getGroup_5() { return cGroup_5; }
		
		//level=Levels
		public Assignment getLevelAssignment_5_0() { return cLevelAssignment_5_0; }
		
		//Levels
		public RuleCall getLevelLevelsEnumRuleCall_5_0_0() { return cLevelLevelsEnumRuleCall_5_0_0; }
		
		//'for'
		public Keyword getForKeyword_5_1() { return cForKeyword_5_1; }
		
		//factor=ID?
		public Assignment getFactorAssignment_5_2() { return cFactorAssignment_5_2; }
		
		//ID
		public RuleCall getFactorIDTerminalRuleCall_5_2_0() { return cFactorIDTerminalRuleCall_5_2_0; }
		
		//control=ID?
		public Assignment getControlAssignment_5_3() { return cControlAssignment_5_3; }
		
		//ID
		public RuleCall getControlIDTerminalRuleCall_5_3_0() { return cControlIDTerminalRuleCall_5_3_0; }
		
		//response=ID?
		public Assignment getResponseAssignment_5_4() { return cResponseAssignment_5_4; }
		
		//ID
		public RuleCall getResponseIDTerminalRuleCall_5_4_0() { return cResponseIDTerminalRuleCall_5_4_0; }
		
		//'is'
		public Keyword getIsKeyword_5_5() { return cIsKeyword_5_5; }
		
		//'in the range'
		public Keyword getInTheRangeKeyword_5_6() { return cInTheRangeKeyword_5_6; }
		
		//start1=rangeValue
		public Assignment getStart1Assignment_5_7() { return cStart1Assignment_5_7; }
		
		//rangeValue
		public RuleCall getStart1RangeValueTerminalRuleCall_5_7_0() { return cStart1RangeValueTerminalRuleCall_5_7_0; }
		
		//'to'
		public Keyword getToKeyword_5_8() { return cToKeyword_5_8; }
		
		//end1=rangeValue
		public Assignment getEnd1Assignment_5_9() { return cEnd1Assignment_5_9; }
		
		//rangeValue
		public RuleCall getEnd1RangeValueTerminalRuleCall_5_9_0() { return cEnd1RangeValueTerminalRuleCall_5_9_0; }
	}
	public class CoherenceLinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.CoherenceLink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCoherenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCoherenceCoherenceEnumRuleCall_0_0 = (RuleCall)cCoherenceAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHypAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHypIDTerminalRuleCall_2_0 = (RuleCall)cHypAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEviAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEviIDTerminalRuleCall_5_0 = (RuleCall)cEviAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CoherenceLink:
		//	coherence=Coherence '(' hyp+=ID* ')' '(' evi+=ID* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//coherence=Coherence '(' hyp+=ID* ')' '(' evi+=ID* ')'
		public Group getGroup() { return cGroup; }
		
		//coherence=Coherence
		public Assignment getCoherenceAssignment_0() { return cCoherenceAssignment_0; }
		
		//Coherence
		public RuleCall getCoherenceCoherenceEnumRuleCall_0_0() { return cCoherenceCoherenceEnumRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//hyp+=ID*
		public Assignment getHypAssignment_2() { return cHypAssignment_2; }
		
		//ID
		public RuleCall getHypIDTerminalRuleCall_2_0() { return cHypIDTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//evi+=ID*
		public Assignment getEviAssignment_5() { return cEviAssignment_5; }
		
		//ID
		public RuleCall getEviIDTerminalRuleCall_5_0() { return cEviIDTerminalRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class MechHypothesisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.MechHypothesis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMNameIDTerminalRuleCall_0_0 = (RuleCall)cMNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAssoMechAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssoMechTemporalPatternParserRuleCall_2_0 = (RuleCall)cAssoMechAssignment_2.eContents().get(0);
		private final Assignment cMechanisticHypothesisAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMechanisticHypothesisIDTerminalRuleCall_3_0 = (RuleCall)cMechanisticHypothesisAssignment_3.eContents().get(0);
		
		//MechHypothesis:
		//	mName=ID ':' assoMech+=TemporalPattern* mechanisticHypothesis=ID?;
		@Override public ParserRule getRule() { return rule; }
		
		//mName=ID ':' assoMech+=TemporalPattern* mechanisticHypothesis=ID?
		public Group getGroup() { return cGroup; }
		
		//mName=ID
		public Assignment getMNameAssignment_0() { return cMNameAssignment_0; }
		
		//ID
		public RuleCall getMNameIDTerminalRuleCall_0_0() { return cMNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//assoMech+=TemporalPattern*
		public Assignment getAssoMechAssignment_2() { return cAssoMechAssignment_2; }
		
		//TemporalPattern
		public RuleCall getAssoMechTemporalPatternParserRuleCall_2_0() { return cAssoMechTemporalPatternParserRuleCall_2_0; }
		
		//mechanisticHypothesis=ID?
		public Assignment getMechanisticHypothesisAssignment_3() { return cMechanisticHypothesisAssignment_3; }
		
		//ID
		public RuleCall getMechanisticHypothesisIDTerminalRuleCall_3_0() { return cMechanisticHypothesisIDTerminalRuleCall_3_0; }
	}
	public class EvidenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Evidence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cENameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cENameIDTerminalRuleCall_0_0 = (RuleCall)cENameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cQueryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQueryTemporalPatternParserRuleCall_2_0 = (RuleCall)cQueryAssignment_2.eContents().get(0);
		private final Keyword cActivationKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cWeightKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cObjOfStudyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cObjOfStudyRangeValueTerminalRuleCall_6_0 = (RuleCall)cObjOfStudyAssignment_6.eContents().get(0);
		
		//Evidence:
		//	eName=ID ':' query+=TemporalPattern* 'activation' 'weight' ':' objOfStudy=rangeValue;
		@Override public ParserRule getRule() { return rule; }
		
		//eName=ID ':' query+=TemporalPattern* 'activation' 'weight' ':' objOfStudy=rangeValue
		public Group getGroup() { return cGroup; }
		
		//eName=ID
		public Assignment getENameAssignment_0() { return cENameAssignment_0; }
		
		//ID
		public RuleCall getENameIDTerminalRuleCall_0_0() { return cENameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//query+=TemporalPattern*
		public Assignment getQueryAssignment_2() { return cQueryAssignment_2; }
		
		//TemporalPattern
		public RuleCall getQueryTemporalPatternParserRuleCall_2_0() { return cQueryTemporalPatternParserRuleCall_2_0; }
		
		//'activation'
		public Keyword getActivationKeyword_3() { return cActivationKeyword_3; }
		
		//'weight'
		public Keyword getWeightKeyword_4() { return cWeightKeyword_4; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//objOfStudy=rangeValue
		public Assignment getObjOfStudyAssignment_6() { return cObjOfStudyAssignment_6; }
		
		//rangeValue
		public RuleCall getObjOfStudyRangeValueTerminalRuleCall_6_0() { return cObjOfStudyRangeValueTerminalRuleCall_6_0; }
	}
	public class TemporalPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.TemporalPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cL2Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cL2LinksEnumRuleCall_1_0 = (RuleCall)cL2Assignment_1.eContents().get(0);
		private final Assignment cExpAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpExpressionEnumRuleCall_2_0 = (RuleCall)cExpAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cOp1Assignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cOp1TemporalEnumRuleCall_3_0_0 = (RuleCall)cOp1Assignment_3_0.eContents().get(0);
		private final Assignment cOp2Assignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOp2LogicalEnumRuleCall_3_1_0 = (RuleCall)cOp2Assignment_3_1.eContents().get(0);
		private final Assignment cL3Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cL3LinksEnumRuleCall_4_0 = (RuleCall)cL3Assignment_4.eContents().get(0);
		
		//TemporalPattern:
		//	Condition l2+=Links* exp+=Expression* (op1+=Temporal | op2+=Logical)* l3=Links?;
		@Override public ParserRule getRule() { return rule; }
		
		//Condition l2+=Links* exp+=Expression* (op1+=Temporal | op2+=Logical)* l3=Links?
		public Group getGroup() { return cGroup; }
		
		//Condition
		public RuleCall getConditionParserRuleCall_0() { return cConditionParserRuleCall_0; }
		
		//l2+=Links*
		public Assignment getL2Assignment_1() { return cL2Assignment_1; }
		
		//Links
		public RuleCall getL2LinksEnumRuleCall_1_0() { return cL2LinksEnumRuleCall_1_0; }
		
		//exp+=Expression*
		public Assignment getExpAssignment_2() { return cExpAssignment_2; }
		
		//Expression
		public RuleCall getExpExpressionEnumRuleCall_2_0() { return cExpExpressionEnumRuleCall_2_0; }
		
		//(op1+=Temporal | op2+=Logical)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//op1+=Temporal
		public Assignment getOp1Assignment_3_0() { return cOp1Assignment_3_0; }
		
		//Temporal
		public RuleCall getOp1TemporalEnumRuleCall_3_0_0() { return cOp1TemporalEnumRuleCall_3_0_0; }
		
		//op2+=Logical
		public Assignment getOp2Assignment_3_1() { return cOp2Assignment_3_1; }
		
		//Logical
		public RuleCall getOp2LogicalEnumRuleCall_3_1_0() { return cOp2LogicalEnumRuleCall_3_1_0; }
		
		//l3=Links?
		public Assignment getL3Assignment_4() { return cL3Assignment_4; }
		
		//Links
		public RuleCall getL3LinksEnumRuleCall_4_0() { return cL3LinksEnumRuleCall_4_0; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cConditionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cConditionEventParserRuleCall_0_0 = (RuleCall)cConditionAssignment_0.eContents().get(0);
		private final Assignment cLoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLoLinkOperatorsParserRuleCall_1_0 = (RuleCall)cLoAssignment_1.eContents().get(0);
		private final Assignment cEAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEEventParserRuleCall_2_0 = (RuleCall)cEAssignment_2.eContents().get(0);
		private final Assignment cExp1Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExp1ExpressionEnumRuleCall_3_0 = (RuleCall)cExp1Assignment_3.eContents().get(0);
		private final Assignment cVAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVRangeValueTerminalRuleCall_4_0 = (RuleCall)cVAssignment_4.eContents().get(0);
		
		//Condition:
		//	condition=Event lo=LinkOperators? e=Event? exp1=Expression? v=rangeValue?;
		@Override public ParserRule getRule() { return rule; }
		
		//condition=Event lo=LinkOperators? e=Event? exp1=Expression? v=rangeValue?
		public Group getGroup() { return cGroup; }
		
		//condition=Event
		public Assignment getConditionAssignment_0() { return cConditionAssignment_0; }
		
		//Event
		public RuleCall getConditionEventParserRuleCall_0_0() { return cConditionEventParserRuleCall_0_0; }
		
		//lo=LinkOperators?
		public Assignment getLoAssignment_1() { return cLoAssignment_1; }
		
		//LinkOperators
		public RuleCall getLoLinkOperatorsParserRuleCall_1_0() { return cLoLinkOperatorsParserRuleCall_1_0; }
		
		//e=Event?
		public Assignment getEAssignment_2() { return cEAssignment_2; }
		
		//Event
		public RuleCall getEEventParserRuleCall_2_0() { return cEEventParserRuleCall_2_0; }
		
		//exp1=Expression?
		public Assignment getExp1Assignment_3() { return cExp1Assignment_3; }
		
		//Expression
		public RuleCall getExp1ExpressionEnumRuleCall_3_0() { return cExp1ExpressionEnumRuleCall_3_0; }
		
		//v=rangeValue?
		public Assignment getVAssignment_4() { return cVAssignment_4; }
		
		//rangeValue
		public RuleCall getVRangeValueTerminalRuleCall_4_0() { return cVRangeValueTerminalRuleCall_4_0; }
	}
	public class LinkOperatorsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.LinkOperators");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cSolidusKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cPercentSignKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cSpaceEqualsSignSpaceKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cSpaceEqualsSignEqualsSignSpaceKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cAmpersandAmpersandKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cVerticalLineVerticalLineKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cLessThanSignKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cLessThanSignEqualsSignKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cGreaterThanSignKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cGreaterThanSignEqualsSignKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cExclamationMarkKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cExclamationMarkEqualsSignKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		
		//LinkOperators:
		//	'+' | '-' | '*' | '/' | '%' | ' = ' | ' == ' | '&&' | '||' | '<' | '<=' | '>' | '>=' | '!' | '!=';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '*' | '/' | '%' | ' = ' | ' == ' | '&&' | '||' | '<' | '<=' | '>' | '>=' | '!' | '!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
		
		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }
		
		//'%'
		public Keyword getPercentSignKeyword_4() { return cPercentSignKeyword_4; }
		
		//' = '
		public Keyword getSpaceEqualsSignSpaceKeyword_5() { return cSpaceEqualsSignSpaceKeyword_5; }
		
		//' == '
		public Keyword getSpaceEqualsSignEqualsSignSpaceKeyword_6() { return cSpaceEqualsSignEqualsSignSpaceKeyword_6; }
		
		//'&&'
		public Keyword getAmpersandAmpersandKeyword_7() { return cAmpersandAmpersandKeyword_7; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword_8() { return cVerticalLineVerticalLineKeyword_8; }
		
		//'<'
		public Keyword getLessThanSignKeyword_9() { return cLessThanSignKeyword_9; }
		
		//'<='
		public Keyword getLessThanSignEqualsSignKeyword_10() { return cLessThanSignEqualsSignKeyword_10; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_11() { return cGreaterThanSignKeyword_11; }
		
		//'>='
		public Keyword getGreaterThanSignEqualsSignKeyword_12() { return cGreaterThanSignEqualsSignKeyword_12; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_13() { return cExclamationMarkKeyword_13; }
		
		//'!='
		public Keyword getExclamationMarkEqualsSignKeyword_14() { return cExclamationMarkEqualsSignKeyword_14; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Event");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDispersedParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimultaneousParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Event:
		//	Dispersed | Simultaneous;
		@Override public ParserRule getRule() { return rule; }
		
		//Dispersed | Simultaneous
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Dispersed
		public RuleCall getDispersedParserRuleCall_0() { return cDispersedParserRuleCall_0; }
		
		//Simultaneous
		public RuleCall getSimultaneousParserRuleCall_1() { return cSimultaneousParserRuleCall_1; }
	}
	public class SimultaneousElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Simultaneous");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSim1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSim1ReParserRuleCall_1_0 = (RuleCall)cSim1Assignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cLogAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cLogLogicalEnumRuleCall_2_0_0 = (RuleCall)cLogAssignment_2_0.eContents().get(0);
		private final Assignment cSim2Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSim2ReParserRuleCall_2_1_0 = (RuleCall)cSim2Assignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Simultaneous:
		//	'[' sim1=Re (log+=Logical sim2+=Re)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' sim1=Re (log+=Logical sim2+=Re)* ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//sim1=Re
		public Assignment getSim1Assignment_1() { return cSim1Assignment_1; }
		
		//Re
		public RuleCall getSim1ReParserRuleCall_1_0() { return cSim1ReParserRuleCall_1_0; }
		
		//(log+=Logical sim2+=Re)*
		public Group getGroup_2() { return cGroup_2; }
		
		//log+=Logical
		public Assignment getLogAssignment_2_0() { return cLogAssignment_2_0; }
		
		//Logical
		public RuleCall getLogLogicalEnumRuleCall_2_0_0() { return cLogLogicalEnumRuleCall_2_0_0; }
		
		//sim2+=Re
		public Assignment getSim2Assignment_2_1() { return cSim2Assignment_2_1; }
		
		//Re
		public RuleCall getSim2ReParserRuleCall_2_1_0() { return cSim2ReParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class DispersedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Dispersed");
		private final Assignment cDispAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDispReParserRuleCall_0 = (RuleCall)cDispAssignment.eContents().get(0);
		
		//Dispersed:
		//	disp+=Re+;
		@Override public ParserRule getRule() { return rule; }
		
		//disp+=Re+
		public Assignment getDispAssignment() { return cDispAssignment; }
		
		//Re
		public RuleCall getDispReParserRuleCall_0() { return cDispReParserRuleCall_0; }
	}
	public class ReElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Re");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Re:
		//	ID ('(' (ID ID)? ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('(' (ID ID)? ')')?
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('(' (ID ID)? ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//(ID ID)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1_0() { return cIDTerminalRuleCall_1_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1_1() { return cIDTerminalRuleCall_1_1_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	public class ListOfModelsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfModels");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfModelsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cModelModelParserRuleCall_2_0 = (RuleCall)cModelAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfModels:
		//	'listOfModels' '{' model+=model* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfModels' '{' model+=model* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfModels'
		public Keyword getListOfModelsKeyword_0() { return cListOfModelsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//model+=model*
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//model
		public RuleCall getModelModelParserRuleCall_2_0() { return cModelModelParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cLanguageKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLanguageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLanguageSTRINGTerminalRuleCall_7_0 = (RuleCall)cLanguageAssignment_7.eContents().get(0);
		private final Keyword cSourceKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSourceAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSourceSTRINGTerminalRuleCall_10_0 = (RuleCall)cSourceAssignment_10.eContents().get(0);
		private final Keyword cNameKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cNameAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cNameSTRINGTerminalRuleCall_13_0 = (RuleCall)cNameAssignment_13.eContents().get(0);
		private final Assignment cListOfChangesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cListOfChangesListOfChangesParserRuleCall_14_0 = (RuleCall)cListOfChangesAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//model:
		//	'model' '{' 'id' ':' id=ID 'language' ':' language=STRING 'source' ':' source=STRING 'name' ':' name=STRING
		//	listOfChanges=listOfChanges? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'model' '{' 'id' ':' id=ID 'language' ':' language=STRING 'source' ':' source=STRING 'name' ':' name=STRING
		//listOfChanges=listOfChanges? '}'
		public Group getGroup() { return cGroup; }
		
		//'model'
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'language'
		public Keyword getLanguageKeyword_5() { return cLanguageKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//language=STRING
		public Assignment getLanguageAssignment_7() { return cLanguageAssignment_7; }
		
		//STRING
		public RuleCall getLanguageSTRINGTerminalRuleCall_7_0() { return cLanguageSTRINGTerminalRuleCall_7_0; }
		
		//'source'
		public Keyword getSourceKeyword_8() { return cSourceKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//source=STRING
		public Assignment getSourceAssignment_10() { return cSourceAssignment_10; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_10_0() { return cSourceSTRINGTerminalRuleCall_10_0; }
		
		//'name'
		public Keyword getNameKeyword_11() { return cNameKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//name=STRING
		public Assignment getNameAssignment_13() { return cNameAssignment_13; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_13_0() { return cNameSTRINGTerminalRuleCall_13_0; }
		
		//listOfChanges=listOfChanges?
		public Assignment getListOfChangesAssignment_14() { return cListOfChangesAssignment_14; }
		
		//listOfChanges
		public RuleCall getListOfChangesListOfChangesParserRuleCall_14_0() { return cListOfChangesListOfChangesParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class ListOfChangesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfChanges");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfChangesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cChangeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cChangeChangeParserRuleCall_2_0 = (RuleCall)cChangeAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfChanges:
		//	'listOfChanges' '{' change+=change* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfChanges' '{' change+=change* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfChanges'
		public Keyword getListOfChangesKeyword_0() { return cListOfChangesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//change+=change*
		public Assignment getChangeAssignment_2() { return cChangeAssignment_2; }
		
		//change
		public RuleCall getChangeChangeParserRuleCall_2_0() { return cChangeChangeParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class DataGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.dataGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataGeneratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Assignment cListOfVariablesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cListOfVariablesListOfVariablesParserRuleCall_8_0 = (RuleCall)cListOfVariablesAssignment_8.eContents().get(0);
		private final Assignment cListOfParametersAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cListOfParametersListOfParametersParserRuleCall_9_0 = (RuleCall)cListOfParametersAssignment_9.eContents().get(0);
		private final Assignment cMathAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMathMathParserRuleCall_10_0 = (RuleCall)cMathAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//dataGenerator:
		//	'dataGenerator' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfVariables=listOfVariables?
		//	listOfParameters=listOfParameters? math=math? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dataGenerator' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfVariables=listOfVariables?
		//listOfParameters=listOfParameters? math=math? '}'
		public Group getGroup() { return cGroup; }
		
		//'dataGenerator'
		public Keyword getDataGeneratorKeyword_0() { return cDataGeneratorKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//listOfVariables=listOfVariables?
		public Assignment getListOfVariablesAssignment_8() { return cListOfVariablesAssignment_8; }
		
		//listOfVariables
		public RuleCall getListOfVariablesListOfVariablesParserRuleCall_8_0() { return cListOfVariablesListOfVariablesParserRuleCall_8_0; }
		
		//listOfParameters=listOfParameters?
		public Assignment getListOfParametersAssignment_9() { return cListOfParametersAssignment_9; }
		
		//listOfParameters
		public RuleCall getListOfParametersListOfParametersParserRuleCall_9_0() { return cListOfParametersListOfParametersParserRuleCall_9_0; }
		
		//math=math?
		public Assignment getMathAssignment_10() { return cMathAssignment_10; }
		
		//math
		public RuleCall getMathMathParserRuleCall_10_0() { return cMathMathParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ListOfParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfParameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfParametersKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParameterParameterParserRuleCall_2_0 = (RuleCall)cParameterAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfParameters:
		//	'listOfParameters' '{' parameter+=parameter* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfParameters' '{' parameter+=parameter* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfParameters'
		public Keyword getListOfParametersKeyword_0() { return cListOfParametersKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//parameter+=parameter*
		public Assignment getParameterAssignment_2() { return cParameterAssignment_2; }
		
		//parameter
		public RuleCall getParameterParameterParserRuleCall_2_0() { return cParameterParameterParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cValueKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cValueAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cValueDOUBLEParserRuleCall_10_0 = (RuleCall)cValueAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//parameter:
		//	'parameter' '{' 'id' ':' id=ID 'name' ':' name=STRING 'value' ':' value=DOUBLE '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'parameter' '{' 'id' ':' id=ID 'name' ':' name=STRING 'value' ':' value=DOUBLE '}'
		public Group getGroup() { return cGroup; }
		
		//'parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//'value'
		public Keyword getValueKeyword_8() { return cValueKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//value=DOUBLE
		public Assignment getValueAssignment_10() { return cValueAssignment_10; }
		
		//DOUBLE
		public RuleCall getValueDOUBLEParserRuleCall_10_0() { return cValueDOUBLEParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ListOfVariablesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfVariables");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfDataVariablesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVariableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_2_0 = (RuleCall)cVariableAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfVariables:
		//	'listOfDataVariables' '{' variable+=variable* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfDataVariables' '{' variable+=variable* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfDataVariables'
		public Keyword getListOfDataVariablesKeyword_0() { return cListOfDataVariablesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//variable+=variable*
		public Assignment getVariableAssignment_2() { return cVariableAssignment_2; }
		
		//variable
		public RuleCall getVariableVariableParserRuleCall_2_0() { return cVariableVariableParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVariableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cTargetKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTargetAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTargetSTRINGTerminalRuleCall_10_0 = (RuleCall)cTargetAssignment_10.eContents().get(0);
		private final Keyword cTaskReferenceKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cTaskReferenceAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cTaskReferenceTaskParserRuleCall_13_0 = (RuleCall)cTaskReferenceAssignment_13.eContents().get(0);
		private final Keyword cModelReferenceKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cModelReferenceAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cModelReferenceModelParserRuleCall_16_0 = (RuleCall)cModelReferenceAssignment_16.eContents().get(0);
		private final Keyword cSymbolKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cColonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cSymbolAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cSymbolSTRINGTerminalRuleCall_19_0 = (RuleCall)cSymbolAssignment_19.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//variable:
		//	'variable' '{' 'id' ':' id=ID 'name' ':' name=STRING 'target' ':' target=STRING 'taskReference' ':'
		//	taskReference=task 'modelReference' ':' modelReference=model 'symbol' ':' symbol=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'variable' '{' 'id' ':' id=ID 'name' ':' name=STRING 'target' ':' target=STRING 'taskReference' ':' taskReference=task
		//'modelReference' ':' modelReference=model 'symbol' ':' symbol=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'variable'
		public Keyword getVariableKeyword_0() { return cVariableKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//'target'
		public Keyword getTargetKeyword_8() { return cTargetKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//target=STRING
		public Assignment getTargetAssignment_10() { return cTargetAssignment_10; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_10_0() { return cTargetSTRINGTerminalRuleCall_10_0; }
		
		//'taskReference'
		public Keyword getTaskReferenceKeyword_11() { return cTaskReferenceKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//taskReference=task
		public Assignment getTaskReferenceAssignment_13() { return cTaskReferenceAssignment_13; }
		
		//task
		public RuleCall getTaskReferenceTaskParserRuleCall_13_0() { return cTaskReferenceTaskParserRuleCall_13_0; }
		
		//'modelReference'
		public Keyword getModelReferenceKeyword_14() { return cModelReferenceKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//modelReference=model
		public Assignment getModelReferenceAssignment_16() { return cModelReferenceAssignment_16; }
		
		//model
		public RuleCall getModelReferenceModelParserRuleCall_16_0() { return cModelReferenceModelParserRuleCall_16_0; }
		
		//'symbol'
		public Keyword getSymbolKeyword_17() { return cSymbolKeyword_17; }
		
		//':'
		public Keyword getColonKeyword_18() { return cColonKeyword_18; }
		
		//symbol=STRING
		public Assignment getSymbolAssignment_19() { return cSymbolAssignment_19; }
		
		//STRING
		public RuleCall getSymbolSTRINGTerminalRuleCall_19_0() { return cSymbolSTRINGTerminalRuleCall_19_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class ListOfTasksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfTasks");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfTasksKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTaskAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTaskTaskParserRuleCall_2_0 = (RuleCall)cTaskAssignment_2.eContents().get(0);
		private final Assignment cRepeatedTaskAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRepeatedTaskRepeatedTaskParserRuleCall_3_0 = (RuleCall)cRepeatedTaskAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//listOfTasks:
		//	'listOfTasks' '{' task+=task* RepeatedTask+=repeatedTask* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfTasks' '{' task+=task* RepeatedTask+=repeatedTask* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfTasks'
		public Keyword getListOfTasksKeyword_0() { return cListOfTasksKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//task+=task*
		public Assignment getTaskAssignment_2() { return cTaskAssignment_2; }
		
		//task
		public RuleCall getTaskTaskParserRuleCall_2_0() { return cTaskTaskParserRuleCall_2_0; }
		
		//RepeatedTask+=repeatedTask*
		public Assignment getRepeatedTaskAssignment_3() { return cRepeatedTaskAssignment_3; }
		
		//repeatedTask
		public RuleCall getRepeatedTaskRepeatedTaskParserRuleCall_3_0() { return cRepeatedTaskRepeatedTaskParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RepeatedTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.repeatedTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfRepeatedTasksKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Assignment cSubTaskAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSubTaskSubTaskParserRuleCall_8_0 = (RuleCall)cSubTaskAssignment_8.eContents().get(0);
		private final Assignment cListOfRangesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cListOfRangesListOfRangesParserRuleCall_9_0 = (RuleCall)cListOfRangesAssignment_9.eContents().get(0);
		private final Assignment cListOfChangesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cListOfChangesListOfChangesParserRuleCall_10_0 = (RuleCall)cListOfChangesAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//repeatedTask:
		//	'listOfRepeatedTasks' '{' 'id' ':' id=ID 'name' ':' name=STRING subTask+=subTask* listOfRanges=listOfRanges
		//	listOfChanges=listOfChanges? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfRepeatedTasks' '{' 'id' ':' id=ID 'name' ':' name=STRING subTask+=subTask* listOfRanges=listOfRanges
		//listOfChanges=listOfChanges? '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfRepeatedTasks'
		public Keyword getListOfRepeatedTasksKeyword_0() { return cListOfRepeatedTasksKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//subTask+=subTask*
		public Assignment getSubTaskAssignment_8() { return cSubTaskAssignment_8; }
		
		//subTask
		public RuleCall getSubTaskSubTaskParserRuleCall_8_0() { return cSubTaskSubTaskParserRuleCall_8_0; }
		
		//listOfRanges=listOfRanges
		public Assignment getListOfRangesAssignment_9() { return cListOfRangesAssignment_9; }
		
		//listOfRanges
		public RuleCall getListOfRangesListOfRangesParserRuleCall_9_0() { return cListOfRangesListOfRangesParserRuleCall_9_0; }
		
		//listOfChanges=listOfChanges?
		public Assignment getListOfChangesAssignment_10() { return cListOfChangesAssignment_10; }
		
		//listOfChanges
		public RuleCall getListOfChangesListOfChangesParserRuleCall_10_0() { return cListOfChangesListOfChangesParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ListOfRangesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfRanges");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfRangesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRangeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRangeRangeParserRuleCall_2_0 = (RuleCall)cRangeAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfRanges:
		//	'listOfRanges' '{' range+=range* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfRanges' '{' range+=range* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfRanges'
		public Keyword getListOfRangesKeyword_0() { return cListOfRangesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//range+=range*
		public Assignment getRangeAssignment_2() { return cRangeAssignment_2; }
		
		//range
		public RuleCall getRangeRangeParserRuleCall_2_0() { return cRangeRangeParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.range");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUniformRangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVectorRangeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cFunctionalRangeParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cIdKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cColonKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cIdAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cIdIDTerminalRuleCall_2_3_0 = (RuleCall)cIdAssignment_2_3.eContents().get(0);
		
		//range:
		//	uniformRange | vectorRange | functionalRange 'id' ':' id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//uniformRange | vectorRange | functionalRange 'id' ':' id=ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//uniformRange
		public RuleCall getUniformRangeParserRuleCall_0() { return cUniformRangeParserRuleCall_0; }
		
		//vectorRange
		public RuleCall getVectorRangeParserRuleCall_1() { return cVectorRangeParserRuleCall_1; }
		
		//functionalRange 'id' ':' id=ID
		public Group getGroup_2() { return cGroup_2; }
		
		//functionalRange
		public RuleCall getFunctionalRangeParserRuleCall_2_0() { return cFunctionalRangeParserRuleCall_2_0; }
		
		//'id'
		public Keyword getIdKeyword_2_1() { return cIdKeyword_2_1; }
		
		//':'
		public Keyword getColonKeyword_2_2() { return cColonKeyword_2_2; }
		
		//id=ID
		public Assignment getIdAssignment_2_3() { return cIdAssignment_2_3; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_2_3_0() { return cIdIDTerminalRuleCall_2_3_0; }
	}
	public class UniformRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.uniformRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniformRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cStartKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStartAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStartDOUBLEParserRuleCall_4_0 = (RuleCall)cStartAssignment_4.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEndAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEndDOUBLEParserRuleCall_7_0 = (RuleCall)cEndAssignment_7.eContents().get(0);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cNumberOfPointsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cNumberOfPointsINTTerminalRuleCall_10_0 = (RuleCall)cNumberOfPointsAssignment_10.eContents().get(0);
		private final Keyword cTypeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cTypeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cTypeSTRINGTerminalRuleCall_13_0 = (RuleCall)cTypeAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//uniformRange:
		//	'uniformRange' '{' 'start' ':' start=DOUBLE 'end' ':' end=DOUBLE 'end' ':' numberOfPoints=INT 'type' ':' type=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'uniformRange' '{' 'start' ':' start=DOUBLE 'end' ':' end=DOUBLE 'end' ':' numberOfPoints=INT 'type' ':' type=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'uniformRange'
		public Keyword getUniformRangeKeyword_0() { return cUniformRangeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'start'
		public Keyword getStartKeyword_2() { return cStartKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//start=DOUBLE
		public Assignment getStartAssignment_4() { return cStartAssignment_4; }
		
		//DOUBLE
		public RuleCall getStartDOUBLEParserRuleCall_4_0() { return cStartDOUBLEParserRuleCall_4_0; }
		
		//'end'
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//end=DOUBLE
		public Assignment getEndAssignment_7() { return cEndAssignment_7; }
		
		//DOUBLE
		public RuleCall getEndDOUBLEParserRuleCall_7_0() { return cEndDOUBLEParserRuleCall_7_0; }
		
		//'end'
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//numberOfPoints=INT
		public Assignment getNumberOfPointsAssignment_10() { return cNumberOfPointsAssignment_10; }
		
		//INT
		public RuleCall getNumberOfPointsINTTerminalRuleCall_10_0() { return cNumberOfPointsINTTerminalRuleCall_10_0; }
		
		//'type'
		public Keyword getTypeKeyword_11() { return cTypeKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//type=STRING
		public Assignment getTypeAssignment_13() { return cTypeAssignment_13; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_13_0() { return cTypeSTRINGTerminalRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class VectorRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.vectorRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVectorRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//vectorRange:
		//	'vectorRange' '{' value+=value* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'vectorRange' '{' value+=value* '}'
		public Group getGroup() { return cGroup; }
		
		//'vectorRange'
		public Keyword getVectorRangeKeyword_0() { return cVectorRangeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//value+=value*
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cContentKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentDOUBLEParserRuleCall_4_0 = (RuleCall)cContentAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//value:
		//	'value' '{' 'content' ':' content=DOUBLE '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'value' '{' 'content' ':' content=DOUBLE '}'
		public Group getGroup() { return cGroup; }
		
		//'value'
		public Keyword getValueKeyword_0() { return cValueKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'content'
		public Keyword getContentKeyword_2() { return cContentKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//content=DOUBLE
		public Assignment getContentAssignment_4() { return cContentAssignment_4; }
		
		//DOUBLE
		public RuleCall getContentDOUBLEParserRuleCall_4_0() { return cContentDOUBLEParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FunctionalRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.functionalRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionalRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRangeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRangeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRangeIDTerminalRuleCall_4_0 = (RuleCall)cRangeAssignment_4.eContents().get(0);
		private final Assignment cListOfVariablesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cListOfVariablesListOfVariablesParserRuleCall_5_0 = (RuleCall)cListOfVariablesAssignment_5.eContents().get(0);
		private final Assignment cListOfParametersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cListOfParametersListOfParametersParserRuleCall_6_0 = (RuleCall)cListOfParametersAssignment_6.eContents().get(0);
		private final Assignment cMathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMathMathParserRuleCall_7_0 = (RuleCall)cMathAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//functionalRange:
		//	'functionalRange' '{' 'range' ':' range=ID listOfVariables=listOfVariables? listOfParameters=listOfParameters?
		//	math=math? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'functionalRange' '{' 'range' ':' range=ID listOfVariables=listOfVariables? listOfParameters=listOfParameters?
		//math=math? '}'
		public Group getGroup() { return cGroup; }
		
		//'functionalRange'
		public Keyword getFunctionalRangeKeyword_0() { return cFunctionalRangeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'range'
		public Keyword getRangeKeyword_2() { return cRangeKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//range=ID
		public Assignment getRangeAssignment_4() { return cRangeAssignment_4; }
		
		//ID
		public RuleCall getRangeIDTerminalRuleCall_4_0() { return cRangeIDTerminalRuleCall_4_0; }
		
		//listOfVariables=listOfVariables?
		public Assignment getListOfVariablesAssignment_5() { return cListOfVariablesAssignment_5; }
		
		//listOfVariables
		public RuleCall getListOfVariablesListOfVariablesParserRuleCall_5_0() { return cListOfVariablesListOfVariablesParserRuleCall_5_0; }
		
		//listOfParameters=listOfParameters?
		public Assignment getListOfParametersAssignment_6() { return cListOfParametersAssignment_6; }
		
		//listOfParameters
		public RuleCall getListOfParametersListOfParametersParserRuleCall_6_0() { return cListOfParametersListOfParametersParserRuleCall_6_0; }
		
		//math=math?
		public Assignment getMathAssignment_7() { return cMathAssignment_7; }
		
		//math
		public RuleCall getMathMathParserRuleCall_7_0() { return cMathMathParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AbstractTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.abstractTask");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTaskParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRepeatedTaskParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//abstractTask:
		//	task | repeatedTask;
		@Override public ParserRule getRule() { return rule; }
		
		//task | repeatedTask
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//task
		public RuleCall getTaskParserRuleCall_0() { return cTaskParserRuleCall_0; }
		
		//repeatedTask
		public RuleCall getRepeatedTaskParserRuleCall_1() { return cRepeatedTaskParserRuleCall_1; }
	}
	public class SubTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.subTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTaskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModelReferenceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelReferenceModelParserRuleCall_4_0 = (RuleCall)cModelReferenceAssignment_4.eContents().get(0);
		private final Keyword cOrderKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOrderAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOrderINTTerminalRuleCall_7_0 = (RuleCall)cOrderAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//subTask:
		//	'subTask' '{' 'task' ':' modelReference=model 'order' ':' order=INT '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'subTask' '{' 'task' ':' modelReference=model 'order' ':' order=INT '}'
		public Group getGroup() { return cGroup; }
		
		//'subTask'
		public Keyword getSubTaskKeyword_0() { return cSubTaskKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'task'
		public Keyword getTaskKeyword_2() { return cTaskKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//modelReference=model
		public Assignment getModelReferenceAssignment_4() { return cModelReferenceAssignment_4; }
		
		//model
		public RuleCall getModelReferenceModelParserRuleCall_4_0() { return cModelReferenceModelParserRuleCall_4_0; }
		
		//'order'
		public Keyword getOrderKeyword_5() { return cOrderKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//order=INT
		public Assignment getOrderAssignment_7() { return cOrderAssignment_7; }
		
		//INT
		public RuleCall getOrderINTTerminalRuleCall_7_0() { return cOrderINTTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cModelReferenceKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cModelReferenceAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cModelReferenceModelParserRuleCall_7_0 = (RuleCall)cModelReferenceAssignment_7.eContents().get(0);
		private final Keyword cSimulationReferenceKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSimulationReferenceAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSimulationReferenceUniformTimeCourseParserRuleCall_10_0 = (RuleCall)cSimulationReferenceAssignment_10.eContents().get(0);
		private final Keyword cNameKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cNameAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cNameSTRINGTerminalRuleCall_13_0 = (RuleCall)cNameAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//task:
		//	'task' '{' 'id' ':' id=ID 'modelReference' ':' modelReference=model 'simulationReference' ':'
		//	simulationReference=uniformTimeCourse 'name' ':' name=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'task' '{' 'id' ':' id=ID 'modelReference' ':' modelReference=model 'simulationReference' ':'
		//simulationReference=uniformTimeCourse 'name' ':' name=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'task'
		public Keyword getTaskKeyword_0() { return cTaskKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'modelReference'
		public Keyword getModelReferenceKeyword_5() { return cModelReferenceKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//modelReference=model
		public Assignment getModelReferenceAssignment_7() { return cModelReferenceAssignment_7; }
		
		//model
		public RuleCall getModelReferenceModelParserRuleCall_7_0() { return cModelReferenceModelParserRuleCall_7_0; }
		
		//'simulationReference'
		public Keyword getSimulationReferenceKeyword_8() { return cSimulationReferenceKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//simulationReference=uniformTimeCourse
		public Assignment getSimulationReferenceAssignment_10() { return cSimulationReferenceAssignment_10; }
		
		//uniformTimeCourse
		public RuleCall getSimulationReferenceUniformTimeCourseParserRuleCall_10_0() { return cSimulationReferenceUniformTimeCourseParserRuleCall_10_0; }
		
		//'name'
		public Keyword getNameKeyword_11() { return cNameKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//name=STRING
		public Assignment getNameAssignment_13() { return cNameAssignment_13; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_13_0() { return cNameSTRINGTerminalRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class ListOfDataGeneratorsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfDataGenerators");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfDataGeneratorsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDatageneratorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDatageneratorDataGeneratorParserRuleCall_2_0 = (RuleCall)cDatageneratorAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfDataGenerators:
		//	'listOfDataGenerators' '{' datagenerator+=dataGenerator* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfDataGenerators' '{' datagenerator+=dataGenerator* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfDataGenerators'
		public Keyword getListOfDataGeneratorsKeyword_0() { return cListOfDataGeneratorsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//datagenerator+=dataGenerator*
		public Assignment getDatageneratorAssignment_2() { return cDatageneratorAssignment_2; }
		
		//dataGenerator
		public RuleCall getDatageneratorDataGeneratorParserRuleCall_2_0() { return cDatageneratorDataGeneratorParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class MathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.math");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMathKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cXlmsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cXlmsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXlmsSTRINGTerminalRuleCall_4_0 = (RuleCall)cXlmsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//math:
		//	'math' '{' 'xlms' ':' xlms=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'math' '{' 'xlms' ':' xlms=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'math'
		public Keyword getMathKeyword_0() { return cMathKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'xlms'
		public Keyword getXlmsKeyword_2() { return cXlmsKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//xlms=STRING
		public Assignment getXlmsAssignment_4() { return cXlmsAssignment_4; }
		
		//STRING
		public RuleCall getXlmsSTRINGTerminalRuleCall_4_0() { return cXlmsSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ListOfOutputsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfOutputs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfOutputsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOutputAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOutputOutputParserRuleCall_2_0 = (RuleCall)cOutputAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfOutputs:
		//	'listOfOutputs' '{' output=output* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfOutputs' '{' output=output* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfOutputs'
		public Keyword getListOfOutputsKeyword_0() { return cListOfOutputsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//output=output*
		public Assignment getOutputAssignment_2() { return cOutputAssignment_2; }
		
		//output
		public RuleCall getOutputOutputParserRuleCall_2_0() { return cOutputOutputParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.output");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlot2DParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPlot3DParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReportParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//output:
		//	plot2D | plot3D | report;
		@Override public ParserRule getRule() { return rule; }
		
		//plot2D | plot3D | report
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//plot2D
		public RuleCall getPlot2DParserRuleCall_0() { return cPlot2DParserRuleCall_0; }
		
		//plot3D
		public RuleCall getPlot3DParserRuleCall_1() { return cPlot3DParserRuleCall_1; }
		
		//report
		public RuleCall getReportParserRuleCall_2() { return cReportParserRuleCall_2; }
	}
	public class Plot2DElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.plot2D");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlot2DKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Assignment cListOfCurvesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cListOfCurvesListOfCurvesParserRuleCall_8_0 = (RuleCall)cListOfCurvesAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//plot2D:
		//	'plot2D' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfCurves=listOfCurves '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'plot2D' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfCurves=listOfCurves '}'
		public Group getGroup() { return cGroup; }
		
		//'plot2D'
		public Keyword getPlot2DKeyword_0() { return cPlot2DKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//listOfCurves=listOfCurves
		public Assignment getListOfCurvesAssignment_8() { return cListOfCurvesAssignment_8; }
		
		//listOfCurves
		public RuleCall getListOfCurvesListOfCurvesParserRuleCall_8_0() { return cListOfCurvesListOfCurvesParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class Plot3DElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.plot3D");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlot3DKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cListOfSurfacesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cListOfSurfacesListOfSurfacesParserRuleCall_2_0 = (RuleCall)cListOfSurfacesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//plot3D:
		//	'plot3D' '{' listOfSurfaces=listOfSurfaces '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'plot3D' '{' listOfSurfaces=listOfSurfaces '}'
		public Group getGroup() { return cGroup; }
		
		//'plot3D'
		public Keyword getPlot3DKeyword_0() { return cPlot3DKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//listOfSurfaces=listOfSurfaces
		public Assignment getListOfSurfacesAssignment_2() { return cListOfSurfacesAssignment_2; }
		
		//listOfSurfaces
		public RuleCall getListOfSurfacesListOfSurfacesParserRuleCall_2_0() { return cListOfSurfacesListOfSurfacesParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ReportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.report");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Assignment cListOfDataSetsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cListOfDataSetsListOfDataSetsParserRuleCall_8_0 = (RuleCall)cListOfDataSetsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//report:
		//	'report' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfDataSets=listOfDataSets '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'report' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfDataSets=listOfDataSets '}'
		public Group getGroup() { return cGroup; }
		
		//'report'
		public Keyword getReportKeyword_0() { return cReportKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//listOfDataSets=listOfDataSets
		public Assignment getListOfDataSetsAssignment_8() { return cListOfDataSetsAssignment_8; }
		
		//listOfDataSets
		public RuleCall getListOfDataSetsListOfDataSetsParserRuleCall_8_0() { return cListOfDataSetsListOfDataSetsParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ListOfDataSetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfDataSets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfCurvesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataSetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataSetDataSetParserRuleCall_2_0 = (RuleCall)cDataSetAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfDataSets:
		//	'listOfCurves' '{' dataSet+=dataSet* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfCurves' '{' dataSet+=dataSet* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfCurves'
		public Keyword getListOfCurvesKeyword_0() { return cListOfCurvesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//dataSet+=dataSet*
		public Assignment getDataSetAssignment_2() { return cDataSetAssignment_2; }
		
		//dataSet
		public RuleCall getDataSetDataSetParserRuleCall_2_0() { return cDataSetDataSetParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class DataSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.dataSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLabelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLabelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLabelSTRINGTerminalRuleCall_4_0 = (RuleCall)cLabelAssignment_4.eContents().get(0);
		private final Keyword cNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cDataReferenceKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDataReferenceAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDataReferenceSTRINGTerminalRuleCall_10_0 = (RuleCall)cDataReferenceAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//dataSet:
		//	'dataSet' '{' 'label' ':' label=STRING 'name' ':' name=STRING 'dataReference' ':' dataReference=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dataSet' '{' 'label' ':' label=STRING 'name' ':' name=STRING 'dataReference' ':' dataReference=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'dataSet'
		public Keyword getDataSetKeyword_0() { return cDataSetKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'label'
		public Keyword getLabelKeyword_2() { return cLabelKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//label=STRING
		public Assignment getLabelAssignment_4() { return cLabelAssignment_4; }
		
		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_4_0() { return cLabelSTRINGTerminalRuleCall_4_0; }
		
		//'name'
		public Keyword getNameKeyword_5() { return cNameKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }
		
		//'dataReference'
		public Keyword getDataReferenceKeyword_8() { return cDataReferenceKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//dataReference=STRING
		public Assignment getDataReferenceAssignment_10() { return cDataReferenceAssignment_10; }
		
		//STRING
		public RuleCall getDataReferenceSTRINGTerminalRuleCall_10_0() { return cDataReferenceSTRINGTerminalRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ListOfSurfacesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfSurfaces");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSurfaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cLogXKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLogXAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLogXSTRINGTerminalRuleCall_7_0 = (RuleCall)cLogXAssignment_7.eContents().get(0);
		private final Keyword cLogYKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLogYAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cLogYSTRINGTerminalRuleCall_10_0 = (RuleCall)cLogYAssignment_10.eContents().get(0);
		private final Keyword cLogZKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cLogZAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cLogZSTRINGTerminalRuleCall_13_0 = (RuleCall)cLogZAssignment_13.eContents().get(0);
		private final Keyword cXDataReferenceKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cXDataReferenceAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cXDataReferenceSTRINGTerminalRuleCall_16_0 = (RuleCall)cXDataReferenceAssignment_16.eContents().get(0);
		private final Keyword cYDataReferenceKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cColonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cYDataReferenceAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cYDataReferenceSTRINGTerminalRuleCall_19_0 = (RuleCall)cYDataReferenceAssignment_19.eContents().get(0);
		private final Keyword cZDataReferenceKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cColonKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cZDataReferenceAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cZDataReferenceSTRINGTerminalRuleCall_22_0 = (RuleCall)cZDataReferenceAssignment_22.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		
		//listOfSurfaces:
		//	'surface' '{' 'id' ':' id=ID 'logX' ':' logX=STRING 'logY' ':' logY=STRING 'logZ' ':' logZ=STRING 'xDataReference'
		//	':' xDataReference=STRING 'yDataReference' ':' yDataReference=STRING 'zDataReference' ':' zDataReference=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'surface' '{' 'id' ':' id=ID 'logX' ':' logX=STRING 'logY' ':' logY=STRING 'logZ' ':' logZ=STRING 'xDataReference' ':'
		//xDataReference=STRING 'yDataReference' ':' yDataReference=STRING 'zDataReference' ':' zDataReference=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'surface'
		public Keyword getSurfaceKeyword_0() { return cSurfaceKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'logX'
		public Keyword getLogXKeyword_5() { return cLogXKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//logX=STRING
		public Assignment getLogXAssignment_7() { return cLogXAssignment_7; }
		
		//STRING
		public RuleCall getLogXSTRINGTerminalRuleCall_7_0() { return cLogXSTRINGTerminalRuleCall_7_0; }
		
		//'logY'
		public Keyword getLogYKeyword_8() { return cLogYKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//logY=STRING
		public Assignment getLogYAssignment_10() { return cLogYAssignment_10; }
		
		//STRING
		public RuleCall getLogYSTRINGTerminalRuleCall_10_0() { return cLogYSTRINGTerminalRuleCall_10_0; }
		
		//'logZ'
		public Keyword getLogZKeyword_11() { return cLogZKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//logZ=STRING
		public Assignment getLogZAssignment_13() { return cLogZAssignment_13; }
		
		//STRING
		public RuleCall getLogZSTRINGTerminalRuleCall_13_0() { return cLogZSTRINGTerminalRuleCall_13_0; }
		
		//'xDataReference'
		public Keyword getXDataReferenceKeyword_14() { return cXDataReferenceKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//xDataReference=STRING
		public Assignment getXDataReferenceAssignment_16() { return cXDataReferenceAssignment_16; }
		
		//STRING
		public RuleCall getXDataReferenceSTRINGTerminalRuleCall_16_0() { return cXDataReferenceSTRINGTerminalRuleCall_16_0; }
		
		//'yDataReference'
		public Keyword getYDataReferenceKeyword_17() { return cYDataReferenceKeyword_17; }
		
		//':'
		public Keyword getColonKeyword_18() { return cColonKeyword_18; }
		
		//yDataReference=STRING
		public Assignment getYDataReferenceAssignment_19() { return cYDataReferenceAssignment_19; }
		
		//STRING
		public RuleCall getYDataReferenceSTRINGTerminalRuleCall_19_0() { return cYDataReferenceSTRINGTerminalRuleCall_19_0; }
		
		//'zDataReference'
		public Keyword getZDataReferenceKeyword_20() { return cZDataReferenceKeyword_20; }
		
		//':'
		public Keyword getColonKeyword_21() { return cColonKeyword_21; }
		
		//zDataReference=STRING
		public Assignment getZDataReferenceAssignment_22() { return cZDataReferenceAssignment_22; }
		
		//STRING
		public RuleCall getZDataReferenceSTRINGTerminalRuleCall_22_0() { return cZDataReferenceSTRINGTerminalRuleCall_22_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_23() { return cRightCurlyBracketKeyword_23; }
	}
	public class ListOfCurvesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfCurves");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfCurvesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCurveAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCurveCurveParserRuleCall_2_0 = (RuleCall)cCurveAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfCurves:
		//	'listOfCurves' '{' curve+=curve* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfCurves' '{' curve+=curve* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfCurves'
		public Keyword getListOfCurvesKeyword_0() { return cListOfCurvesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//curve+=curve*
		public Assignment getCurveAssignment_2() { return cCurveAssignment_2; }
		
		//curve
		public RuleCall getCurveCurveParserRuleCall_2_0() { return cCurveCurveParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class CurveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.curve");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCurveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cLogXKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLogXAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLogXSTRINGTerminalRuleCall_7_0 = (RuleCall)cLogXAssignment_7.eContents().get(0);
		private final Keyword cLogYKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLogYAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cLogYSTRINGTerminalRuleCall_10_0 = (RuleCall)cLogYAssignment_10.eContents().get(0);
		private final Keyword cXDataReferenceKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cXDataReferenceAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cXDataReferenceSTRINGTerminalRuleCall_13_0 = (RuleCall)cXDataReferenceAssignment_13.eContents().get(0);
		private final Keyword cYDataReferenceKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cYDataReferenceAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cYDataReferenceSTRINGTerminalRuleCall_16_0 = (RuleCall)cYDataReferenceAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//curve:
		//	'curve' '{' 'id' ':' id=ID 'logX' ':' logX=STRING 'logY' ':' logY=STRING 'xDataReference' ':' xDataReference=STRING
		//	'yDataReference' ':' yDataReference=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'curve' '{' 'id' ':' id=ID 'logX' ':' logX=STRING 'logY' ':' logY=STRING 'xDataReference' ':' xDataReference=STRING
		//'yDataReference' ':' yDataReference=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'curve'
		public Keyword getCurveKeyword_0() { return cCurveKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'logX'
		public Keyword getLogXKeyword_5() { return cLogXKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//logX=STRING
		public Assignment getLogXAssignment_7() { return cLogXAssignment_7; }
		
		//STRING
		public RuleCall getLogXSTRINGTerminalRuleCall_7_0() { return cLogXSTRINGTerminalRuleCall_7_0; }
		
		//'logY'
		public Keyword getLogYKeyword_8() { return cLogYKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//logY=STRING
		public Assignment getLogYAssignment_10() { return cLogYAssignment_10; }
		
		//STRING
		public RuleCall getLogYSTRINGTerminalRuleCall_10_0() { return cLogYSTRINGTerminalRuleCall_10_0; }
		
		//'xDataReference'
		public Keyword getXDataReferenceKeyword_11() { return cXDataReferenceKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//xDataReference=STRING
		public Assignment getXDataReferenceAssignment_13() { return cXDataReferenceAssignment_13; }
		
		//STRING
		public RuleCall getXDataReferenceSTRINGTerminalRuleCall_13_0() { return cXDataReferenceSTRINGTerminalRuleCall_13_0; }
		
		//'yDataReference'
		public Keyword getYDataReferenceKeyword_14() { return cYDataReferenceKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//yDataReference=STRING
		public Assignment getYDataReferenceAssignment_16() { return cYDataReferenceAssignment_16; }
		
		//STRING
		public RuleCall getYDataReferenceSTRINGTerminalRuleCall_16_0() { return cYDataReferenceSTRINGTerminalRuleCall_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class ListOfSimulationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfSimulations");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfSimulationsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSimulationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSimulationSimulationParserRuleCall_2_0 = (RuleCall)cSimulationAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfSimulations:
		//	'listOfSimulations' '{' simulation+=simulation* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfSimulations' '{' simulation+=simulation* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfSimulations'
		public Keyword getListOfSimulationsKeyword_0() { return cListOfSimulationsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//simulation+=simulation*
		public Assignment getSimulationAssignment_2() { return cSimulationAssignment_2; }
		
		//simulation
		public RuleCall getSimulationSimulationParserRuleCall_2_0() { return cSimulationSimulationParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class SimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.simulation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOneStepParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSteadyStateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUniformTimeCourseParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//simulation:
		//	oneStep | SteadyState | uniformTimeCourse;
		@Override public ParserRule getRule() { return rule; }
		
		//oneStep | SteadyState | uniformTimeCourse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//oneStep
		public RuleCall getOneStepParserRuleCall_0() { return cOneStepParserRuleCall_0; }
		
		//SteadyState
		public RuleCall getSteadyStateParserRuleCall_1() { return cSteadyStateParserRuleCall_1; }
		
		//uniformTimeCourse
		public RuleCall getUniformTimeCourseParserRuleCall_2() { return cUniformTimeCourseParserRuleCall_2; }
	}
	public class UniformTimeCourseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.uniformTimeCourse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniformtimecourseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cInitialTimeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInitialTimeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cInitialTimeINTTerminalRuleCall_7_0 = (RuleCall)cInitialTimeAssignment_7.eContents().get(0);
		private final Keyword cOutputStartTimeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOutputStartTimeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOutputStartTimeINTTerminalRuleCall_10_0 = (RuleCall)cOutputStartTimeAssignment_10.eContents().get(0);
		private final Keyword cOutputEndTimeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cOutputEndTimeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cOutputEndTimeINTTerminalRuleCall_13_0 = (RuleCall)cOutputEndTimeAssignment_13.eContents().get(0);
		private final Keyword cNumberOfPointsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cNumberOfPointsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cNumberOfPointsINTTerminalRuleCall_16_0 = (RuleCall)cNumberOfPointsAssignment_16.eContents().get(0);
		private final Assignment cAlgorithmAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cAlgorithmAlgorithmParserRuleCall_17_0 = (RuleCall)cAlgorithmAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//uniformTimeCourse:
		//	'uniformtimecourse' '{' 'id' ':' id=ID 'initialTime' ':' initialTime=INT 'outputStartTime' ':' outputStartTime=INT
		//	'outputEndTime' ':' outputEndTime=INT 'numberOfPoints' ':' numberOfPoints=INT algorithm=algorithm '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'uniformtimecourse' '{' 'id' ':' id=ID 'initialTime' ':' initialTime=INT 'outputStartTime' ':' outputStartTime=INT
		//'outputEndTime' ':' outputEndTime=INT 'numberOfPoints' ':' numberOfPoints=INT algorithm=algorithm '}'
		public Group getGroup() { return cGroup; }
		
		//'uniformtimecourse'
		public Keyword getUniformtimecourseKeyword_0() { return cUniformtimecourseKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }
		
		//'initialTime'
		public Keyword getInitialTimeKeyword_5() { return cInitialTimeKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//initialTime=INT
		public Assignment getInitialTimeAssignment_7() { return cInitialTimeAssignment_7; }
		
		//INT
		public RuleCall getInitialTimeINTTerminalRuleCall_7_0() { return cInitialTimeINTTerminalRuleCall_7_0; }
		
		//'outputStartTime'
		public Keyword getOutputStartTimeKeyword_8() { return cOutputStartTimeKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//outputStartTime=INT
		public Assignment getOutputStartTimeAssignment_10() { return cOutputStartTimeAssignment_10; }
		
		//INT
		public RuleCall getOutputStartTimeINTTerminalRuleCall_10_0() { return cOutputStartTimeINTTerminalRuleCall_10_0; }
		
		//'outputEndTime'
		public Keyword getOutputEndTimeKeyword_11() { return cOutputEndTimeKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//outputEndTime=INT
		public Assignment getOutputEndTimeAssignment_13() { return cOutputEndTimeAssignment_13; }
		
		//INT
		public RuleCall getOutputEndTimeINTTerminalRuleCall_13_0() { return cOutputEndTimeINTTerminalRuleCall_13_0; }
		
		//'numberOfPoints'
		public Keyword getNumberOfPointsKeyword_14() { return cNumberOfPointsKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//numberOfPoints=INT
		public Assignment getNumberOfPointsAssignment_16() { return cNumberOfPointsAssignment_16; }
		
		//INT
		public RuleCall getNumberOfPointsINTTerminalRuleCall_16_0() { return cNumberOfPointsINTTerminalRuleCall_16_0; }
		
		//algorithm=algorithm
		public Assignment getAlgorithmAssignment_17() { return cAlgorithmAssignment_17; }
		
		//algorithm
		public RuleCall getAlgorithmAlgorithmParserRuleCall_17_0() { return cAlgorithmAlgorithmParserRuleCall_17_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class OneStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.oneStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOneStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cStepKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStepAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStepDOUBLEParserRuleCall_4_0 = (RuleCall)cStepAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//oneStep:
		//	'oneStep' '{' 'step' ':' step=DOUBLE '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'oneStep' '{' 'step' ':' step=DOUBLE '}'
		public Group getGroup() { return cGroup; }
		
		//'oneStep'
		public Keyword getOneStepKeyword_0() { return cOneStepKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'step'
		public Keyword getStepKeyword_2() { return cStepKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//step=DOUBLE
		public Assignment getStepAssignment_4() { return cStepAssignment_4; }
		
		//DOUBLE
		public RuleCall getStepDOUBLEParserRuleCall_4_0() { return cStepDOUBLEParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SteadyStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.SteadyState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSteadyStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//SteadyState:
		//	'steadyState' '{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'steadyState' '{' '}'
		public Group getGroup() { return cGroup; }
		
		//'steadyState'
		public Keyword getSteadyStateKeyword_0() { return cSteadyStateKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class DOUBLEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.DOUBLE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//DOUBLE:
		//	'.'? INT?;
		@Override public ParserRule getRule() { return rule; }
		
		//'.'? INT?
		public Group getGroup() { return cGroup; }
		
		//'.'?
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class AlgorithmElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.algorithm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlgorithmKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cKisaoIDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cKisaoIDAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cKisaoIDSTRINGTerminalRuleCall_4_0 = (RuleCall)cKisaoIDAssignment_4.eContents().get(0);
		private final Assignment cListOfAlgorithmParametersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cListOfAlgorithmParametersListOfAlgorithmParametersParserRuleCall_5_0 = (RuleCall)cListOfAlgorithmParametersAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//algorithm:
		//	'algorithm' '{' 'kisaoID' ':' kisaoID=STRING ListOfAlgorithmParameters=listOfAlgorithmParameters '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'algorithm' '{' 'kisaoID' ':' kisaoID=STRING ListOfAlgorithmParameters=listOfAlgorithmParameters '}'
		public Group getGroup() { return cGroup; }
		
		//'algorithm'
		public Keyword getAlgorithmKeyword_0() { return cAlgorithmKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'kisaoID'
		public Keyword getKisaoIDKeyword_2() { return cKisaoIDKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//kisaoID=STRING
		public Assignment getKisaoIDAssignment_4() { return cKisaoIDAssignment_4; }
		
		//STRING
		public RuleCall getKisaoIDSTRINGTerminalRuleCall_4_0() { return cKisaoIDSTRINGTerminalRuleCall_4_0; }
		
		//ListOfAlgorithmParameters=listOfAlgorithmParameters
		public Assignment getListOfAlgorithmParametersAssignment_5() { return cListOfAlgorithmParametersAssignment_5; }
		
		//listOfAlgorithmParameters
		public RuleCall getListOfAlgorithmParametersListOfAlgorithmParametersParserRuleCall_5_0() { return cListOfAlgorithmParametersListOfAlgorithmParametersParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ListOfAlgorithmParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.listOfAlgorithmParameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListOfAlgorithmParametersKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAlgorithmParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAlgorithmParameterAlgorithmParameterParserRuleCall_2_0 = (RuleCall)cAlgorithmParameterAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//listOfAlgorithmParameters:
		//	'listOfAlgorithmParameters' '{' AlgorithmParameter+=algorithmParameter* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'listOfAlgorithmParameters' '{' AlgorithmParameter+=algorithmParameter* '}'
		public Group getGroup() { return cGroup; }
		
		//'listOfAlgorithmParameters'
		public Keyword getListOfAlgorithmParametersKeyword_0() { return cListOfAlgorithmParametersKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//AlgorithmParameter+=algorithmParameter*
		public Assignment getAlgorithmParameterAssignment_2() { return cAlgorithmParameterAssignment_2; }
		
		//algorithmParameter
		public RuleCall getAlgorithmParameterAlgorithmParameterParserRuleCall_2_0() { return cAlgorithmParameterAlgorithmParameterParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class AlgorithmParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.algorithmParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlgorithmParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cKisaoIDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cKisaoIDAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cKisaoIDSTRINGTerminalRuleCall_4_0 = (RuleCall)cKisaoIDAssignment_4.eContents().get(0);
		private final Keyword cValueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueDOUBLEParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//algorithmParameter:
		//	'algorithmParameter' '{' 'kisaoID' ':' kisaoID=STRING 'value' ':' value=DOUBLE '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'algorithmParameter' '{' 'kisaoID' ':' kisaoID=STRING 'value' ':' value=DOUBLE '}'
		public Group getGroup() { return cGroup; }
		
		//'algorithmParameter'
		public Keyword getAlgorithmParameterKeyword_0() { return cAlgorithmParameterKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'kisaoID'
		public Keyword getKisaoIDKeyword_2() { return cKisaoIDKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//kisaoID=STRING
		public Assignment getKisaoIDAssignment_4() { return cKisaoIDAssignment_4; }
		
		//STRING
		public RuleCall getKisaoIDSTRINGTerminalRuleCall_4_0() { return cKisaoIDSTRINGTerminalRuleCall_4_0; }
		
		//'value'
		public Keyword getValueKeyword_5() { return cValueKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//value=DOUBLE
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//DOUBLE
		public RuleCall getValueDOUBLEParserRuleCall_7_0() { return cValueDOUBLEParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	public class FunctionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Function");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMINEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMINMINKeyword_0_0 = (Keyword)cMINEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMAXEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMAXMAXKeyword_1_0 = (Keyword)cMAXEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEXPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEXPEXPKeyword_2_0 = (Keyword)cEXPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINVERSEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINVERSEINVERSEKeyword_3_0 = (Keyword)cINVERSEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSINEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSINSINKeyword_4_0 = (Keyword)cSINEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cCOSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cCOSCOSKeyword_5_0 = (Keyword)cCOSEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cTANEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cTANTANKeyword_6_0 = (Keyword)cTANEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cFACTORIALEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cFACTORIALFACTORIALKeyword_7_0 = (Keyword)cFACTORIALEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cLOGEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cLOGLOGKeyword_8_0 = (Keyword)cLOGEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum Function:
		//	MIN | MAX | EXP | INVERSE | SIN | COS | TAN | FACTORIAL | LOG;
		public EnumRule getRule() { return rule; }
		
		//MIN | MAX | EXP | INVERSE | SIN | COS | TAN | FACTORIAL | LOG
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MIN
		public EnumLiteralDeclaration getMINEnumLiteralDeclaration_0() { return cMINEnumLiteralDeclaration_0; }
		
		//"MIN"
		public Keyword getMINMINKeyword_0_0() { return cMINMINKeyword_0_0; }
		
		//MAX
		public EnumLiteralDeclaration getMAXEnumLiteralDeclaration_1() { return cMAXEnumLiteralDeclaration_1; }
		
		//"MAX"
		public Keyword getMAXMAXKeyword_1_0() { return cMAXMAXKeyword_1_0; }
		
		//EXP
		public EnumLiteralDeclaration getEXPEnumLiteralDeclaration_2() { return cEXPEnumLiteralDeclaration_2; }
		
		//"EXP"
		public Keyword getEXPEXPKeyword_2_0() { return cEXPEXPKeyword_2_0; }
		
		//INVERSE
		public EnumLiteralDeclaration getINVERSEEnumLiteralDeclaration_3() { return cINVERSEEnumLiteralDeclaration_3; }
		
		//"INVERSE"
		public Keyword getINVERSEINVERSEKeyword_3_0() { return cINVERSEINVERSEKeyword_3_0; }
		
		//SIN
		public EnumLiteralDeclaration getSINEnumLiteralDeclaration_4() { return cSINEnumLiteralDeclaration_4; }
		
		//"SIN"
		public Keyword getSINSINKeyword_4_0() { return cSINSINKeyword_4_0; }
		
		//COS
		public EnumLiteralDeclaration getCOSEnumLiteralDeclaration_5() { return cCOSEnumLiteralDeclaration_5; }
		
		//"COS"
		public Keyword getCOSCOSKeyword_5_0() { return cCOSCOSKeyword_5_0; }
		
		//TAN
		public EnumLiteralDeclaration getTANEnumLiteralDeclaration_6() { return cTANEnumLiteralDeclaration_6; }
		
		//"TAN"
		public Keyword getTANTANKeyword_6_0() { return cTANTANKeyword_6_0; }
		
		//FACTORIAL
		public EnumLiteralDeclaration getFACTORIALEnumLiteralDeclaration_7() { return cFACTORIALEnumLiteralDeclaration_7; }
		
		//"FACTORIAL"
		public Keyword getFACTORIALFACTORIALKeyword_7_0() { return cFACTORIALFACTORIALKeyword_7_0; }
		
		//LOG
		public EnumLiteralDeclaration getLOGEnumLiteralDeclaration_8() { return cLOGEnumLiteralDeclaration_8; }
		
		//"LOG"
		public Keyword getLOGLOGKeyword_8_0() { return cLOGLOGKeyword_8_0; }
	}
	public class LevelsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Levels");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHIGHEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHIGHHIGHKeyword_0_0 = (Keyword)cHIGHEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIUMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMEDIUMMEDIUMKeyword_1_0 = (Keyword)cMEDIUMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLOWEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLOWLOWKeyword_2_0 = (Keyword)cLOWEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Levels:
		//	HIGH | MEDIUM | LOW;
		public EnumRule getRule() { return rule; }
		
		//HIGH | MEDIUM | LOW
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//HIGH
		public EnumLiteralDeclaration getHIGHEnumLiteralDeclaration_0() { return cHIGHEnumLiteralDeclaration_0; }
		
		//"HIGH"
		public Keyword getHIGHHIGHKeyword_0_0() { return cHIGHHIGHKeyword_0_0; }
		
		//MEDIUM
		public EnumLiteralDeclaration getMEDIUMEnumLiteralDeclaration_1() { return cMEDIUMEnumLiteralDeclaration_1; }
		
		//"MEDIUM"
		public Keyword getMEDIUMMEDIUMKeyword_1_0() { return cMEDIUMMEDIUMKeyword_1_0; }
		
		//LOW
		public EnumLiteralDeclaration getLOWEnumLiteralDeclaration_2() { return cLOWEnumLiteralDeclaration_2; }
		
		//"LOW"
		public Keyword getLOWLOWKeyword_2_0() { return cLOWLOWKeyword_2_0; }
	}
	public class ExpressionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTRUETRUEKeyword_0_0 = (Keyword)cTRUEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFALSEFALSEKeyword_1_0 = (Keyword)cFALSEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Expression:
		//	TRUE | FALSE;
		public EnumRule getRule() { return rule; }
		
		//TRUE | FALSE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TRUE
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_0() { return cTRUEEnumLiteralDeclaration_0; }
		
		//"TRUE"
		public Keyword getTRUETRUEKeyword_0_0() { return cTRUETRUEKeyword_0_0; }
		
		//FALSE
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_1() { return cFALSEEnumLiteralDeclaration_1; }
		
		//"FALSE"
		public Keyword getFALSEFALSEKeyword_1_0() { return cFALSEFALSEKeyword_1_0; }
	}
	public class LinksElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Links");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIsIsKeyword_0_0 = (Keyword)cIsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOccursEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOccursOccursKeyword_1_0 = (Keyword)cOccursEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cToEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cToToKeyword_2_0 = (Keyword)cToEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cInInKeyword_3_0 = (Keyword)cInEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Links:
		//	is | occurs | to | in;
		public EnumRule getRule() { return rule; }
		
		//is | occurs | to | in
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//is
		public EnumLiteralDeclaration getIsEnumLiteralDeclaration_0() { return cIsEnumLiteralDeclaration_0; }
		
		//"is"
		public Keyword getIsIsKeyword_0_0() { return cIsIsKeyword_0_0; }
		
		//occurs
		public EnumLiteralDeclaration getOccursEnumLiteralDeclaration_1() { return cOccursEnumLiteralDeclaration_1; }
		
		//"occurs"
		public Keyword getOccursOccursKeyword_1_0() { return cOccursOccursKeyword_1_0; }
		
		//to
		public EnumLiteralDeclaration getToEnumLiteralDeclaration_2() { return cToEnumLiteralDeclaration_2; }
		
		//"to"
		public Keyword getToToKeyword_2_0() { return cToToKeyword_2_0; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_3() { return cInEnumLiteralDeclaration_3; }
		
		//"in"
		public Keyword getInInKeyword_3_0() { return cInInKeyword_3_0; }
	}
	public class TemporalElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Temporal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPrecedesEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPrecedesPrecedesKeyword_0_0 = (Keyword)cPrecedesEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBetweenEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBetweenBetweenKeyword_1_0 = (Keyword)cBetweenEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEventuallyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEventuallyEventuallyKeyword_2_0 = (Keyword)cEventuallyEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAlwaysEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAlwaysAlwaysKeyword_3_0 = (Keyword)cAlwaysEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBeforeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBeforeBeforeKeyword_4_0 = (Keyword)cBeforeEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAfterEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAfterAfterKeyword_5_0 = (Keyword)cAfterEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cUntilEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cUntilUntilKeyword_6_0 = (Keyword)cUntilEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cNeverEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cNeverNeverKeyword_7_0 = (Keyword)cNeverEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cLeadsEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cLeadsLeadsKeyword_8_0 = (Keyword)cLeadsEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cAbsentEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cAbsentAbsentKeyword_9_0 = (Keyword)cAbsentEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cExistsEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cExistsExistsKeyword_10_0 = (Keyword)cExistsEnumLiteralDeclaration_10.eContents().get(0);
		
		//enum Temporal:
		//	precedes | between | eventually | always | before | after | until | never | leads | absent | exists;
		public EnumRule getRule() { return rule; }
		
		//precedes | between | eventually | always | before | after | until | never | leads | absent | exists
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//precedes
		public EnumLiteralDeclaration getPrecedesEnumLiteralDeclaration_0() { return cPrecedesEnumLiteralDeclaration_0; }
		
		//"precedes"
		public Keyword getPrecedesPrecedesKeyword_0_0() { return cPrecedesPrecedesKeyword_0_0; }
		
		//between
		public EnumLiteralDeclaration getBetweenEnumLiteralDeclaration_1() { return cBetweenEnumLiteralDeclaration_1; }
		
		//"between"
		public Keyword getBetweenBetweenKeyword_1_0() { return cBetweenBetweenKeyword_1_0; }
		
		//eventually
		public EnumLiteralDeclaration getEventuallyEnumLiteralDeclaration_2() { return cEventuallyEnumLiteralDeclaration_2; }
		
		//"eventually"
		public Keyword getEventuallyEventuallyKeyword_2_0() { return cEventuallyEventuallyKeyword_2_0; }
		
		//always
		public EnumLiteralDeclaration getAlwaysEnumLiteralDeclaration_3() { return cAlwaysEnumLiteralDeclaration_3; }
		
		//"always"
		public Keyword getAlwaysAlwaysKeyword_3_0() { return cAlwaysAlwaysKeyword_3_0; }
		
		//before
		public EnumLiteralDeclaration getBeforeEnumLiteralDeclaration_4() { return cBeforeEnumLiteralDeclaration_4; }
		
		//"before"
		public Keyword getBeforeBeforeKeyword_4_0() { return cBeforeBeforeKeyword_4_0; }
		
		//after
		public EnumLiteralDeclaration getAfterEnumLiteralDeclaration_5() { return cAfterEnumLiteralDeclaration_5; }
		
		//"after"
		public Keyword getAfterAfterKeyword_5_0() { return cAfterAfterKeyword_5_0; }
		
		//until
		public EnumLiteralDeclaration getUntilEnumLiteralDeclaration_6() { return cUntilEnumLiteralDeclaration_6; }
		
		//"until"
		public Keyword getUntilUntilKeyword_6_0() { return cUntilUntilKeyword_6_0; }
		
		//never
		public EnumLiteralDeclaration getNeverEnumLiteralDeclaration_7() { return cNeverEnumLiteralDeclaration_7; }
		
		//"never"
		public Keyword getNeverNeverKeyword_7_0() { return cNeverNeverKeyword_7_0; }
		
		//leads
		public EnumLiteralDeclaration getLeadsEnumLiteralDeclaration_8() { return cLeadsEnumLiteralDeclaration_8; }
		
		//"leads"
		public Keyword getLeadsLeadsKeyword_8_0() { return cLeadsLeadsKeyword_8_0; }
		
		//absent
		public EnumLiteralDeclaration getAbsentEnumLiteralDeclaration_9() { return cAbsentEnumLiteralDeclaration_9; }
		
		//"absent"
		public Keyword getAbsentAbsentKeyword_9_0() { return cAbsentAbsentKeyword_9_0; }
		
		//exists
		public EnumLiteralDeclaration getExistsEnumLiteralDeclaration_10() { return cExistsEnumLiteralDeclaration_10; }
		
		//"exists"
		public Keyword getExistsExistsKeyword_10_0() { return cExistsExistsKeyword_10_0; }
	}
	public class LogicalElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Logical");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNotEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNotNotKeyword_2_0 = (Keyword)cNotEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Logical:
		//	and | or | not;
		public EnumRule getRule() { return rule; }
		
		//and | or | not
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//and
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }
		
		//"and"
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }
		
		//or
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }
		
		//"or"
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }
		
		//not
		public EnumLiteralDeclaration getNotEnumLiteralDeclaration_2() { return cNotEnumLiteralDeclaration_2; }
		
		//"not"
		public Keyword getNotNotKeyword_2_0() { return cNotNotKeyword_2_0; }
	}
	public class CoherenceElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.Coherence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEXPLAINEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEXPLAINEXPLAINKeyword_0_0 = (Keyword)cEXPLAINEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cANALOGOUSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cANALOGOUSANALOGOUSKeyword_1_0 = (Keyword)cANALOGOUSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDATAEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDATADATAKeyword_2_0 = (Keyword)cDATAEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCONTRADICTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCONTRADICTCONTRADICTKeyword_3_0 = (Keyword)cCONTRADICTEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Coherence:
		//	EXPLAIN | ANALOGOUS | DATA | CONTRADICT;
		public EnumRule getRule() { return rule; }
		
		//EXPLAIN | ANALOGOUS | DATA | CONTRADICT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EXPLAIN
		public EnumLiteralDeclaration getEXPLAINEnumLiteralDeclaration_0() { return cEXPLAINEnumLiteralDeclaration_0; }
		
		//"EXPLAIN"
		public Keyword getEXPLAINEXPLAINKeyword_0_0() { return cEXPLAINEXPLAINKeyword_0_0; }
		
		//ANALOGOUS
		public EnumLiteralDeclaration getANALOGOUSEnumLiteralDeclaration_1() { return cANALOGOUSEnumLiteralDeclaration_1; }
		
		//"ANALOGOUS"
		public Keyword getANALOGOUSANALOGOUSKeyword_1_0() { return cANALOGOUSANALOGOUSKeyword_1_0; }
		
		//DATA
		public EnumLiteralDeclaration getDATAEnumLiteralDeclaration_2() { return cDATAEnumLiteralDeclaration_2; }
		
		//"DATA"
		public Keyword getDATADATAKeyword_2_0() { return cDATADATAKeyword_2_0; }
		
		//CONTRADICT
		public EnumLiteralDeclaration getCONTRADICTEnumLiteralDeclaration_3() { return cCONTRADICTEnumLiteralDeclaration_3; }
		
		//"CONTRADICT"
		public Keyword getCONTRADICTCONTRADICTKeyword_3_0() { return cCONTRADICTCONTRADICTKeyword_3_0; }
	}
	
	private final SEDBaseElements pSEDBase;
	private final ChangeElements pChange;
	private final TargetElements pTarget;
	private final RemoveXMLElements pRemoveXML;
	private final ChangeAttributeElements pChangeAttribute;
	private final ComputeChangeElements pComputeChange;
	private final AddXMLElements pAddXML;
	private final ChangeXMLElements pChangeXML;
	private final NewXMLElements pNewXML;
	private final SedMLElements pSedML;
	private final ListOfDataDescriptionsElements pListOfDataDescriptions;
	private final DataDescriptionElements pDataDescription;
	private final DimensionDescriptionElements pDimensionDescription;
	private final ListOfDataSourcesElements pListOfDataSources;
	private final DataSourceElements pDataSource;
	private final ListOfDataSlicesElements pListOfDataSlices;
	private final SliceElements pSlice;
	private final ListOfHypothesesElements pListOfHypotheses;
	private final HypothesisElements pHypothesis;
	private final RelationalQueryElements pRelationalQuery;
	private final Query1Elements pQuery1;
	private final Query2Elements pQuery2;
	private final FunctionElements eFunction;
	private final TerminalRule tRangeValue;
	private final LevelsElements eLevels;
	private final Query3Elements pQuery3;
	private final CoherenceLinkElements pCoherenceLink;
	private final MechHypothesisElements pMechHypothesis;
	private final EvidenceElements pEvidence;
	private final TemporalPatternElements pTemporalPattern;
	private final ConditionElements pCondition;
	private final ExpressionElements eExpression;
	private final LinkOperatorsElements pLinkOperators;
	private final EventElements pEvent;
	private final SimultaneousElements pSimultaneous;
	private final DispersedElements pDispersed;
	private final ReElements pRe;
	private final LinksElements eLinks;
	private final TemporalElements eTemporal;
	private final LogicalElements eLogical;
	private final CoherenceElements eCoherence;
	private final ListOfModelsElements pListOfModels;
	private final ModelElements pModel;
	private final ListOfChangesElements pListOfChanges;
	private final DataGeneratorElements pDataGenerator;
	private final ListOfParametersElements pListOfParameters;
	private final ParameterElements pParameter;
	private final ListOfVariablesElements pListOfVariables;
	private final VariableElements pVariable;
	private final ListOfTasksElements pListOfTasks;
	private final RepeatedTaskElements pRepeatedTask;
	private final ListOfRangesElements pListOfRanges;
	private final RangeElements pRange;
	private final UniformRangeElements pUniformRange;
	private final VectorRangeElements pVectorRange;
	private final ValueElements pValue;
	private final FunctionalRangeElements pFunctionalRange;
	private final AbstractTaskElements pAbstractTask;
	private final SubTaskElements pSubTask;
	private final TaskElements pTask;
	private final ListOfDataGeneratorsElements pListOfDataGenerators;
	private final MathElements pMath;
	private final ListOfOutputsElements pListOfOutputs;
	private final OutputElements pOutput;
	private final Plot2DElements pPlot2D;
	private final Plot3DElements pPlot3D;
	private final ReportElements pReport;
	private final ListOfDataSetsElements pListOfDataSets;
	private final DataSetElements pDataSet;
	private final ListOfSurfacesElements pListOfSurfaces;
	private final ListOfCurvesElements pListOfCurves;
	private final CurveElements pCurve;
	private final ListOfSimulationsElements pListOfSimulations;
	private final SimulationElements pSimulation;
	private final UniformTimeCourseElements pUniformTimeCourse;
	private final OneStepElements pOneStep;
	private final SteadyStateElements pSteadyState;
	private final DOUBLEElements pDOUBLE;
	private final AlgorithmElements pAlgorithm;
	private final ListOfAlgorithmParametersElements pListOfAlgorithmParameters;
	private final AlgorithmParameterElements pAlgorithmParameter;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SedmlGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSEDBase = new SEDBaseElements();
		this.pChange = new ChangeElements();
		this.pTarget = new TargetElements();
		this.pRemoveXML = new RemoveXMLElements();
		this.pChangeAttribute = new ChangeAttributeElements();
		this.pComputeChange = new ComputeChangeElements();
		this.pAddXML = new AddXMLElements();
		this.pChangeXML = new ChangeXMLElements();
		this.pNewXML = new NewXMLElements();
		this.pSedML = new SedMLElements();
		this.pListOfDataDescriptions = new ListOfDataDescriptionsElements();
		this.pDataDescription = new DataDescriptionElements();
		this.pDimensionDescription = new DimensionDescriptionElements();
		this.pListOfDataSources = new ListOfDataSourcesElements();
		this.pDataSource = new DataSourceElements();
		this.pListOfDataSlices = new ListOfDataSlicesElements();
		this.pSlice = new SliceElements();
		this.pListOfHypotheses = new ListOfHypothesesElements();
		this.pHypothesis = new HypothesisElements();
		this.pRelationalQuery = new RelationalQueryElements();
		this.pQuery1 = new Query1Elements();
		this.pQuery2 = new Query2Elements();
		this.eFunction = new FunctionElements();
		this.tRangeValue = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "tr.edu.metu.ceng.megamodel.sedml.Sedml.rangeValue");
		this.eLevels = new LevelsElements();
		this.pQuery3 = new Query3Elements();
		this.pCoherenceLink = new CoherenceLinkElements();
		this.pMechHypothesis = new MechHypothesisElements();
		this.pEvidence = new EvidenceElements();
		this.pTemporalPattern = new TemporalPatternElements();
		this.pCondition = new ConditionElements();
		this.eExpression = new ExpressionElements();
		this.pLinkOperators = new LinkOperatorsElements();
		this.pEvent = new EventElements();
		this.pSimultaneous = new SimultaneousElements();
		this.pDispersed = new DispersedElements();
		this.pRe = new ReElements();
		this.eLinks = new LinksElements();
		this.eTemporal = new TemporalElements();
		this.eLogical = new LogicalElements();
		this.eCoherence = new CoherenceElements();
		this.pListOfModels = new ListOfModelsElements();
		this.pModel = new ModelElements();
		this.pListOfChanges = new ListOfChangesElements();
		this.pDataGenerator = new DataGeneratorElements();
		this.pListOfParameters = new ListOfParametersElements();
		this.pParameter = new ParameterElements();
		this.pListOfVariables = new ListOfVariablesElements();
		this.pVariable = new VariableElements();
		this.pListOfTasks = new ListOfTasksElements();
		this.pRepeatedTask = new RepeatedTaskElements();
		this.pListOfRanges = new ListOfRangesElements();
		this.pRange = new RangeElements();
		this.pUniformRange = new UniformRangeElements();
		this.pVectorRange = new VectorRangeElements();
		this.pValue = new ValueElements();
		this.pFunctionalRange = new FunctionalRangeElements();
		this.pAbstractTask = new AbstractTaskElements();
		this.pSubTask = new SubTaskElements();
		this.pTask = new TaskElements();
		this.pListOfDataGenerators = new ListOfDataGeneratorsElements();
		this.pMath = new MathElements();
		this.pListOfOutputs = new ListOfOutputsElements();
		this.pOutput = new OutputElements();
		this.pPlot2D = new Plot2DElements();
		this.pPlot3D = new Plot3DElements();
		this.pReport = new ReportElements();
		this.pListOfDataSets = new ListOfDataSetsElements();
		this.pDataSet = new DataSetElements();
		this.pListOfSurfaces = new ListOfSurfacesElements();
		this.pListOfCurves = new ListOfCurvesElements();
		this.pCurve = new CurveElements();
		this.pListOfSimulations = new ListOfSimulationsElements();
		this.pSimulation = new SimulationElements();
		this.pUniformTimeCourse = new UniformTimeCourseElements();
		this.pOneStep = new OneStepElements();
		this.pSteadyState = new SteadyStateElements();
		this.pDOUBLE = new DOUBLEElements();
		this.pAlgorithm = new AlgorithmElements();
		this.pListOfAlgorithmParameters = new ListOfAlgorithmParametersElements();
		this.pAlgorithmParameter = new AlgorithmParameterElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("tr.edu.metu.ceng.megamodel.sedml.Sedml".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SEDBase:
	//	parameter | variable | sedML | model | dataDescription | abstractTask | dataGenerator | simulation | change;
	public SEDBaseElements getSEDBaseAccess() {
		return pSEDBase;
	}
	
	public ParserRule getSEDBaseRule() {
		return getSEDBaseAccess().getRule();
	}
	
	//change:
	//	'change' '{' target+=target* '}';
	public ChangeElements getChangeAccess() {
		return pChange;
	}
	
	public ParserRule getChangeRule() {
		return getChangeAccess().getRule();
	}
	
	//target:
	//	computeChange | changeAttribute | addXML | changeXML | removeXML;
	public TargetElements getTargetAccess() {
		return pTarget;
	}
	
	public ParserRule getTargetRule() {
		return getTargetAccess().getRule();
	}
	
	//removeXML:
	//	'removeXML';
	public RemoveXMLElements getRemoveXMLAccess() {
		return pRemoveXML;
	}
	
	public ParserRule getRemoveXMLRule() {
		return getRemoveXMLAccess().getRule();
	}
	
	//changeAttribute:
	//	'changeAttribute' '{' 'newValue' ':' newValue=STRING '}';
	public ChangeAttributeElements getChangeAttributeAccess() {
		return pChangeAttribute;
	}
	
	public ParserRule getChangeAttributeRule() {
		return getChangeAttributeAccess().getRule();
	}
	
	//computeChange:
	//	'computeChange' '{' 'math' ':' math=math listOfVariables=listOfVariables listOfParameters=listOfParameters '}';
	public ComputeChangeElements getComputeChangeAccess() {
		return pComputeChange;
	}
	
	public ParserRule getComputeChangeRule() {
		return getComputeChangeAccess().getRule();
	}
	
	//addXML:
	//	'addXML' '{' newXML+=newXML* '}';
	public AddXMLElements getAddXMLAccess() {
		return pAddXML;
	}
	
	public ParserRule getAddXMLRule() {
		return getAddXMLAccess().getRule();
	}
	
	//changeXML:
	//	'changeXML' '{' newXML+=newXML* '}';
	public ChangeXMLElements getChangeXMLAccess() {
		return pChangeXML;
	}
	
	public ParserRule getChangeXMLRule() {
		return getChangeXMLAccess().getRule();
	}
	
	//newXML:
	//	'newXML' '{' 'anyXML' ':' anyXML=STRING '}';
	public NewXMLElements getNewXMLAccess() {
		return pNewXML;
	}
	
	public ParserRule getNewXMLRule() {
		return getNewXMLAccess().getRule();
	}
	
	//sedML:
	//	version=INT level=INT listOfHypotheses=listOfHypotheses listOfDataDescriptions=listOfDataDescriptions
	//	listOfSimulations=listOfSimulations listOfModels=listOfModels listOfTasks=listOfTasks
	//	listOfDataGenerators=listOfDataGenerators listOfOutputs=listOfOutputs;
	public SedMLElements getSedMLAccess() {
		return pSedML;
	}
	
	public ParserRule getSedMLRule() {
		return getSedMLAccess().getRule();
	}
	
	//listOfDataDescriptions:
	//	'listOfDataDescriptions' '{' dataDescription+=dataDescription* '}';
	public ListOfDataDescriptionsElements getListOfDataDescriptionsAccess() {
		return pListOfDataDescriptions;
	}
	
	public ParserRule getListOfDataDescriptionsRule() {
		return getListOfDataDescriptionsAccess().getRule();
	}
	
	//dataDescription:
	//	'dataDescription' '{' 'id' ':' id=ID 'name' ':' name=STRING 'format' ':' format=STRING 'source' ':' source=STRING
	//	listOfDataSources=listOfDataSources dimensionDescription=dimensionDescription '}';
	public DataDescriptionElements getDataDescriptionAccess() {
		return pDataDescription;
	}
	
	public ParserRule getDataDescriptionRule() {
		return getDataDescriptionAccess().getRule();
	}
	
	//dimensionDescription:
	//	'dimensionDescription' '{' 'xmlns' ':' xmlns=STRING '}';
	public DimensionDescriptionElements getDimensionDescriptionAccess() {
		return pDimensionDescription;
	}
	
	public ParserRule getDimensionDescriptionRule() {
		return getDimensionDescriptionAccess().getRule();
	}
	
	//listOfDataSources:
	//	'listOfDataSources' '{' dataSource+=dataSource* '}';
	public ListOfDataSourcesElements getListOfDataSourcesAccess() {
		return pListOfDataSources;
	}
	
	public ParserRule getListOfDataSourcesRule() {
		return getListOfDataSourcesAccess().getRule();
	}
	
	//dataSource:
	//	'dataSource' '{' 'id' ':' id=ID 'name' ':' name=STRING 'indexSet' ':' indexSet=STRING listOfSlices=listOfDataSlices
	//	'}';
	public DataSourceElements getDataSourceAccess() {
		return pDataSource;
	}
	
	public ParserRule getDataSourceRule() {
		return getDataSourceAccess().getRule();
	}
	
	//listOfDataSlices:
	//	'listOfDataSlices' '{' slice+=slice* '}';
	public ListOfDataSlicesElements getListOfDataSlicesAccess() {
		return pListOfDataSlices;
	}
	
	public ParserRule getListOfDataSlicesRule() {
		return getListOfDataSlicesAccess().getRule();
	}
	
	//slice:
	//	'slice' '{' 'reference' ':' referenceid=ID 'value' ':' value=STRING '}';
	public SliceElements getSliceAccess() {
		return pSlice;
	}
	
	public ParserRule getSliceRule() {
		return getSliceAccess().getRule();
	}
	
	//listOfHypotheses:
	//	'listOfHypotheses' '{' hypothesis+=hypothesis* '}';
	public ListOfHypothesesElements getListOfHypothesesAccess() {
		return pListOfHypotheses;
	}
	
	public ParserRule getListOfHypothesesRule() {
		return getListOfHypothesesAccess().getRule();
	}
	
	//hypothesis:
	//	'hypotheses' '{' ('mechanistic' 'hypotheses' '{' mechHypothesis+=MechHypothesis* '}')? ('evidence' '{'
	//	evidences+=Evidence* '}')? ('coherence' 'model' '{' coherenceLinks+=CoherenceLink* '}')? ('relational' 'hypotheses'
	//	'{' relHypothesis+=RelationalQuery* '}')? '}';
	public HypothesisElements getHypothesisAccess() {
		return pHypothesis;
	}
	
	public ParserRule getHypothesisRule() {
		return getHypothesisAccess().getRule();
	}
	
	//RelationalQuery:
	//	Query1 | Query2 | Query3;
	public RelationalQueryElements getRelationalQueryAccess() {
		return pRelationalQuery;
	}
	
	public ParserRule getRelationalQueryRule() {
		return getRelationalQueryAccess().getRule();
	}
	
	//Query1:
	//	'if' factor=ID? control=ID? 'is' x=rangeValue? 'added'? 'removed'? ('in the range' start1=rangeValue 'to'
	//	end1=rangeValue)? 'then' response=ID 'is' y=rangeValue? ('in the range' start2=rangeValue 'to' end2=rangeValue)?;
	public Query1Elements getQuery1Access() {
		return pQuery1;
	}
	
	public ParserRule getQuery1Rule() {
		return getQuery1Access().getRule();
	}
	
	//Query2:
	//	'compare' function1=Function? response1=ID? factor1=ID? 'and' function2=Function? response2=ID? factor2=ID?;
	public Query2Elements getQuery2Access() {
		return pQuery2;
	}
	
	public ParserRule getQuery2Rule() {
		return getQuery2Access().getRule();
	}
	
	//enum Function:
	//	MIN | MAX | EXP | INVERSE | SIN | COS | TAN | FACTORIAL | LOG;
	public FunctionElements getFunctionAccess() {
		return eFunction;
	}
	
	public EnumRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//terminal rangeValue:
	//	INT '.'? INT?;
	public TerminalRule getRangeValueRule() {
		return tRangeValue;
	}
	
	//enum Levels:
	//	HIGH | MEDIUM | LOW;
	public LevelsElements getLevelsAccess() {
		return eLevels;
	}
	
	public EnumRule getLevelsRule() {
		return getLevelsAccess().getRule();
	}
	
	//Query3:
	//	'if' (factor1=ID? control1=ID? 'is' ('at' 'level' Level2=Levels)? x2=rangeValue? 'and'?)* 'then' (response1=ID 'is'
	//	('at' 'level' Level4=Levels)? x4=rangeValue? 'and'?)* 'where' (level=Levels 'for' factor=ID? control=ID? response=ID?
	//	'is' 'in the range' start1=rangeValue 'to' end1=rangeValue)*;
	public Query3Elements getQuery3Access() {
		return pQuery3;
	}
	
	public ParserRule getQuery3Rule() {
		return getQuery3Access().getRule();
	}
	
	//CoherenceLink:
	//	coherence=Coherence '(' hyp+=ID* ')' '(' evi+=ID* ')';
	public CoherenceLinkElements getCoherenceLinkAccess() {
		return pCoherenceLink;
	}
	
	public ParserRule getCoherenceLinkRule() {
		return getCoherenceLinkAccess().getRule();
	}
	
	//MechHypothesis:
	//	mName=ID ':' assoMech+=TemporalPattern* mechanisticHypothesis=ID?;
	public MechHypothesisElements getMechHypothesisAccess() {
		return pMechHypothesis;
	}
	
	public ParserRule getMechHypothesisRule() {
		return getMechHypothesisAccess().getRule();
	}
	
	//Evidence:
	//	eName=ID ':' query+=TemporalPattern* 'activation' 'weight' ':' objOfStudy=rangeValue;
	public EvidenceElements getEvidenceAccess() {
		return pEvidence;
	}
	
	public ParserRule getEvidenceRule() {
		return getEvidenceAccess().getRule();
	}
	
	//TemporalPattern:
	//	Condition l2+=Links* exp+=Expression* (op1+=Temporal | op2+=Logical)* l3=Links?;
	public TemporalPatternElements getTemporalPatternAccess() {
		return pTemporalPattern;
	}
	
	public ParserRule getTemporalPatternRule() {
		return getTemporalPatternAccess().getRule();
	}
	
	//Condition:
	//	condition=Event lo=LinkOperators? e=Event? exp1=Expression? v=rangeValue?;
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//enum Expression:
	//	TRUE | FALSE;
	public ExpressionElements getExpressionAccess() {
		return eExpression;
	}
	
	public EnumRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//LinkOperators:
	//	'+' | '-' | '*' | '/' | '%' | ' = ' | ' == ' | '&&' | '||' | '<' | '<=' | '>' | '>=' | '!' | '!=';
	public LinkOperatorsElements getLinkOperatorsAccess() {
		return pLinkOperators;
	}
	
	public ParserRule getLinkOperatorsRule() {
		return getLinkOperatorsAccess().getRule();
	}
	
	//Event:
	//	Dispersed | Simultaneous;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//Simultaneous:
	//	'[' sim1=Re (log+=Logical sim2+=Re)* ']';
	public SimultaneousElements getSimultaneousAccess() {
		return pSimultaneous;
	}
	
	public ParserRule getSimultaneousRule() {
		return getSimultaneousAccess().getRule();
	}
	
	//Dispersed:
	//	disp+=Re+;
	public DispersedElements getDispersedAccess() {
		return pDispersed;
	}
	
	public ParserRule getDispersedRule() {
		return getDispersedAccess().getRule();
	}
	
	//Re:
	//	ID ('(' (ID ID)? ')')?;
	public ReElements getReAccess() {
		return pRe;
	}
	
	public ParserRule getReRule() {
		return getReAccess().getRule();
	}
	
	//enum Links:
	//	is | occurs | to | in;
	public LinksElements getLinksAccess() {
		return eLinks;
	}
	
	public EnumRule getLinksRule() {
		return getLinksAccess().getRule();
	}
	
	//enum Temporal:
	//	precedes | between | eventually | always | before | after | until | never | leads | absent | exists;
	public TemporalElements getTemporalAccess() {
		return eTemporal;
	}
	
	public EnumRule getTemporalRule() {
		return getTemporalAccess().getRule();
	}
	
	//enum Logical:
	//	and | or | not;
	public LogicalElements getLogicalAccess() {
		return eLogical;
	}
	
	public EnumRule getLogicalRule() {
		return getLogicalAccess().getRule();
	}
	
	//enum Coherence:
	//	EXPLAIN | ANALOGOUS | DATA | CONTRADICT;
	public CoherenceElements getCoherenceAccess() {
		return eCoherence;
	}
	
	public EnumRule getCoherenceRule() {
		return getCoherenceAccess().getRule();
	}
	
	//listOfModels:
	//	'listOfModels' '{' model+=model* '}';
	public ListOfModelsElements getListOfModelsAccess() {
		return pListOfModels;
	}
	
	public ParserRule getListOfModelsRule() {
		return getListOfModelsAccess().getRule();
	}
	
	//model:
	//	'model' '{' 'id' ':' id=ID 'language' ':' language=STRING 'source' ':' source=STRING 'name' ':' name=STRING
	//	listOfChanges=listOfChanges? '}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//listOfChanges:
	//	'listOfChanges' '{' change+=change* '}';
	public ListOfChangesElements getListOfChangesAccess() {
		return pListOfChanges;
	}
	
	public ParserRule getListOfChangesRule() {
		return getListOfChangesAccess().getRule();
	}
	
	//dataGenerator:
	//	'dataGenerator' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfVariables=listOfVariables?
	//	listOfParameters=listOfParameters? math=math? '}';
	public DataGeneratorElements getDataGeneratorAccess() {
		return pDataGenerator;
	}
	
	public ParserRule getDataGeneratorRule() {
		return getDataGeneratorAccess().getRule();
	}
	
	//listOfParameters:
	//	'listOfParameters' '{' parameter+=parameter* '}';
	public ListOfParametersElements getListOfParametersAccess() {
		return pListOfParameters;
	}
	
	public ParserRule getListOfParametersRule() {
		return getListOfParametersAccess().getRule();
	}
	
	//parameter:
	//	'parameter' '{' 'id' ':' id=ID 'name' ':' name=STRING 'value' ':' value=DOUBLE '}';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//listOfVariables:
	//	'listOfDataVariables' '{' variable+=variable* '}';
	public ListOfVariablesElements getListOfVariablesAccess() {
		return pListOfVariables;
	}
	
	public ParserRule getListOfVariablesRule() {
		return getListOfVariablesAccess().getRule();
	}
	
	//variable:
	//	'variable' '{' 'id' ':' id=ID 'name' ':' name=STRING 'target' ':' target=STRING 'taskReference' ':'
	//	taskReference=task 'modelReference' ':' modelReference=model 'symbol' ':' symbol=STRING '}';
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//listOfTasks:
	//	'listOfTasks' '{' task+=task* RepeatedTask+=repeatedTask* '}';
	public ListOfTasksElements getListOfTasksAccess() {
		return pListOfTasks;
	}
	
	public ParserRule getListOfTasksRule() {
		return getListOfTasksAccess().getRule();
	}
	
	//repeatedTask:
	//	'listOfRepeatedTasks' '{' 'id' ':' id=ID 'name' ':' name=STRING subTask+=subTask* listOfRanges=listOfRanges
	//	listOfChanges=listOfChanges? '}';
	public RepeatedTaskElements getRepeatedTaskAccess() {
		return pRepeatedTask;
	}
	
	public ParserRule getRepeatedTaskRule() {
		return getRepeatedTaskAccess().getRule();
	}
	
	//listOfRanges:
	//	'listOfRanges' '{' range+=range* '}';
	public ListOfRangesElements getListOfRangesAccess() {
		return pListOfRanges;
	}
	
	public ParserRule getListOfRangesRule() {
		return getListOfRangesAccess().getRule();
	}
	
	//range:
	//	uniformRange | vectorRange | functionalRange 'id' ':' id=ID;
	public RangeElements getRangeAccess() {
		return pRange;
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}
	
	//uniformRange:
	//	'uniformRange' '{' 'start' ':' start=DOUBLE 'end' ':' end=DOUBLE 'end' ':' numberOfPoints=INT 'type' ':' type=STRING
	//	'}';
	public UniformRangeElements getUniformRangeAccess() {
		return pUniformRange;
	}
	
	public ParserRule getUniformRangeRule() {
		return getUniformRangeAccess().getRule();
	}
	
	//vectorRange:
	//	'vectorRange' '{' value+=value* '}';
	public VectorRangeElements getVectorRangeAccess() {
		return pVectorRange;
	}
	
	public ParserRule getVectorRangeRule() {
		return getVectorRangeAccess().getRule();
	}
	
	//value:
	//	'value' '{' 'content' ':' content=DOUBLE '}';
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//functionalRange:
	//	'functionalRange' '{' 'range' ':' range=ID listOfVariables=listOfVariables? listOfParameters=listOfParameters?
	//	math=math? '}';
	public FunctionalRangeElements getFunctionalRangeAccess() {
		return pFunctionalRange;
	}
	
	public ParserRule getFunctionalRangeRule() {
		return getFunctionalRangeAccess().getRule();
	}
	
	//abstractTask:
	//	task | repeatedTask;
	public AbstractTaskElements getAbstractTaskAccess() {
		return pAbstractTask;
	}
	
	public ParserRule getAbstractTaskRule() {
		return getAbstractTaskAccess().getRule();
	}
	
	//subTask:
	//	'subTask' '{' 'task' ':' modelReference=model 'order' ':' order=INT '}';
	public SubTaskElements getSubTaskAccess() {
		return pSubTask;
	}
	
	public ParserRule getSubTaskRule() {
		return getSubTaskAccess().getRule();
	}
	
	//task:
	//	'task' '{' 'id' ':' id=ID 'modelReference' ':' modelReference=model 'simulationReference' ':'
	//	simulationReference=uniformTimeCourse 'name' ':' name=STRING '}';
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	//listOfDataGenerators:
	//	'listOfDataGenerators' '{' datagenerator+=dataGenerator* '}';
	public ListOfDataGeneratorsElements getListOfDataGeneratorsAccess() {
		return pListOfDataGenerators;
	}
	
	public ParserRule getListOfDataGeneratorsRule() {
		return getListOfDataGeneratorsAccess().getRule();
	}
	
	//math:
	//	'math' '{' 'xlms' ':' xlms=STRING '}';
	public MathElements getMathAccess() {
		return pMath;
	}
	
	public ParserRule getMathRule() {
		return getMathAccess().getRule();
	}
	
	//listOfOutputs:
	//	'listOfOutputs' '{' output=output* '}';
	public ListOfOutputsElements getListOfOutputsAccess() {
		return pListOfOutputs;
	}
	
	public ParserRule getListOfOutputsRule() {
		return getListOfOutputsAccess().getRule();
	}
	
	//output:
	//	plot2D | plot3D | report;
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}
	
	//plot2D:
	//	'plot2D' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfCurves=listOfCurves '}';
	public Plot2DElements getPlot2DAccess() {
		return pPlot2D;
	}
	
	public ParserRule getPlot2DRule() {
		return getPlot2DAccess().getRule();
	}
	
	//plot3D:
	//	'plot3D' '{' listOfSurfaces=listOfSurfaces '}';
	public Plot3DElements getPlot3DAccess() {
		return pPlot3D;
	}
	
	public ParserRule getPlot3DRule() {
		return getPlot3DAccess().getRule();
	}
	
	//report:
	//	'report' '{' 'id' ':' id=ID 'name' ':' name=STRING listOfDataSets=listOfDataSets '}';
	public ReportElements getReportAccess() {
		return pReport;
	}
	
	public ParserRule getReportRule() {
		return getReportAccess().getRule();
	}
	
	//listOfDataSets:
	//	'listOfCurves' '{' dataSet+=dataSet* '}';
	public ListOfDataSetsElements getListOfDataSetsAccess() {
		return pListOfDataSets;
	}
	
	public ParserRule getListOfDataSetsRule() {
		return getListOfDataSetsAccess().getRule();
	}
	
	//dataSet:
	//	'dataSet' '{' 'label' ':' label=STRING 'name' ':' name=STRING 'dataReference' ':' dataReference=STRING '}';
	public DataSetElements getDataSetAccess() {
		return pDataSet;
	}
	
	public ParserRule getDataSetRule() {
		return getDataSetAccess().getRule();
	}
	
	//listOfSurfaces:
	//	'surface' '{' 'id' ':' id=ID 'logX' ':' logX=STRING 'logY' ':' logY=STRING 'logZ' ':' logZ=STRING 'xDataReference'
	//	':' xDataReference=STRING 'yDataReference' ':' yDataReference=STRING 'zDataReference' ':' zDataReference=STRING '}';
	public ListOfSurfacesElements getListOfSurfacesAccess() {
		return pListOfSurfaces;
	}
	
	public ParserRule getListOfSurfacesRule() {
		return getListOfSurfacesAccess().getRule();
	}
	
	//listOfCurves:
	//	'listOfCurves' '{' curve+=curve* '}';
	public ListOfCurvesElements getListOfCurvesAccess() {
		return pListOfCurves;
	}
	
	public ParserRule getListOfCurvesRule() {
		return getListOfCurvesAccess().getRule();
	}
	
	//curve:
	//	'curve' '{' 'id' ':' id=ID 'logX' ':' logX=STRING 'logY' ':' logY=STRING 'xDataReference' ':' xDataReference=STRING
	//	'yDataReference' ':' yDataReference=STRING '}';
	public CurveElements getCurveAccess() {
		return pCurve;
	}
	
	public ParserRule getCurveRule() {
		return getCurveAccess().getRule();
	}
	
	//listOfSimulations:
	//	'listOfSimulations' '{' simulation+=simulation* '}';
	public ListOfSimulationsElements getListOfSimulationsAccess() {
		return pListOfSimulations;
	}
	
	public ParserRule getListOfSimulationsRule() {
		return getListOfSimulationsAccess().getRule();
	}
	
	//simulation:
	//	oneStep | SteadyState | uniformTimeCourse;
	public SimulationElements getSimulationAccess() {
		return pSimulation;
	}
	
	public ParserRule getSimulationRule() {
		return getSimulationAccess().getRule();
	}
	
	//uniformTimeCourse:
	//	'uniformtimecourse' '{' 'id' ':' id=ID 'initialTime' ':' initialTime=INT 'outputStartTime' ':' outputStartTime=INT
	//	'outputEndTime' ':' outputEndTime=INT 'numberOfPoints' ':' numberOfPoints=INT algorithm=algorithm '}';
	public UniformTimeCourseElements getUniformTimeCourseAccess() {
		return pUniformTimeCourse;
	}
	
	public ParserRule getUniformTimeCourseRule() {
		return getUniformTimeCourseAccess().getRule();
	}
	
	//oneStep:
	//	'oneStep' '{' 'step' ':' step=DOUBLE '}';
	public OneStepElements getOneStepAccess() {
		return pOneStep;
	}
	
	public ParserRule getOneStepRule() {
		return getOneStepAccess().getRule();
	}
	
	//SteadyState:
	//	'steadyState' '{' '}';
	public SteadyStateElements getSteadyStateAccess() {
		return pSteadyState;
	}
	
	public ParserRule getSteadyStateRule() {
		return getSteadyStateAccess().getRule();
	}
	
	//DOUBLE:
	//	'.'? INT?;
	public DOUBLEElements getDOUBLEAccess() {
		return pDOUBLE;
	}
	
	public ParserRule getDOUBLERule() {
		return getDOUBLEAccess().getRule();
	}
	
	//algorithm:
	//	'algorithm' '{' 'kisaoID' ':' kisaoID=STRING ListOfAlgorithmParameters=listOfAlgorithmParameters '}';
	public AlgorithmElements getAlgorithmAccess() {
		return pAlgorithm;
	}
	
	public ParserRule getAlgorithmRule() {
		return getAlgorithmAccess().getRule();
	}
	
	//listOfAlgorithmParameters:
	//	'listOfAlgorithmParameters' '{' AlgorithmParameter+=algorithmParameter* '}';
	public ListOfAlgorithmParametersElements getListOfAlgorithmParametersAccess() {
		return pListOfAlgorithmParameters;
	}
	
	public ParserRule getListOfAlgorithmParametersRule() {
		return getListOfAlgorithmParametersAccess().getRule();
	}
	
	//algorithmParameter:
	//	'algorithmParameter' '{' 'kisaoID' ':' kisaoID=STRING 'value' ':' value=DOUBLE '}';
	public AlgorithmParameterElements getAlgorithmParameterAccess() {
		return pAlgorithmParameter;
	}
	
	public ParserRule getAlgorithmParameterRule() {
		return getAlgorithmParameterAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
